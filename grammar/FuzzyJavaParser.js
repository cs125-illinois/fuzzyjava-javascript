// Generated from grammar/FuzzyJavaParser.g4 by ANTLR 4.7
// jshint ignore: start
var antlr4 = require('antlr4/index');
var FuzzyJavaParserVisitor = require('./FuzzyJavaParserVisitor').FuzzyJavaParserVisitor;

var grammarFileName = "FuzzyJavaParser.g4";

var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0003t\u0571\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t",
    "\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004",
    "\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0004",
    "\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004",
    "\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014\t",
    "\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017\u0004",
    "\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b\t",
    "\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e\u0004",
    "\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#\t#\u0004$\t$\u0004",
    "%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004*\t*\u0004+\t+\u0004",
    ",\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u00041\t1\u00042\t2\u0004",
    "3\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u00048\t8\u00049\t9\u0004",
    ":\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004?\t?\u0004@\t@\u0004",
    "A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004F\tF\u0004G\tG\u0004",
    "H\tH\u0004I\tI\u0004J\tJ\u0004K\tK\u0004L\tL\u0004M\tM\u0004N\tN\u0004",
    "O\tO\u0004P\tP\u0004Q\tQ\u0004R\tR\u0004S\tS\u0004T\tT\u0004U\tU\u0004",
    "V\tV\u0004W\tW\u0004X\tX\u0004Y\tY\u0004Z\tZ\u0004[\t[\u0004\\\t\\\u0004",
    "]\t]\u0004^\t^\u0004_\t_\u0004`\t`\u0004a\ta\u0004b\tb\u0004c\tc\u0004",
    "d\td\u0004e\te\u0004f\tf\u0004g\tg\u0004h\th\u0004i\ti\u0004j\tj\u0004",
    "k\tk\u0003\u0002\u0005\u0002\u00d8\n\u0002\u0003\u0002\u0007\u0002\u00db",
    "\n\u0002\f\u0002\u000e\u0002\u00de\u000b\u0002\u0003\u0002\u0007\u0002",
    "\u00e1\n\u0002\f\u0002\u000e\u0002\u00e4\u000b\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0003\u0007\u0003\u00e9\n\u0003\f\u0003\u000e\u0003\u00ec",
    "\u000b\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004",
    "\u0003\u0004\u0005\u0004\u00f4\n\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0005\u0004\u00f9\n\u0004\u0003\u0004\u0003\u0004\u0003\u0005",
    "\u0007\u0005\u00fe\n\u0005\f\u0005\u000e\u0005\u0101\u000b\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u0005\u0107\n\u0005",
    "\u0003\u0005\u0005\u0005\u010a\n\u0005\u0003\u0006\u0003\u0006\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0005\u0006\u0111\n\u0006\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0005\u0007\u011b\n\u0007\u0003\b\u0003\b\u0005\b\u011f",
    "\n\b\u0003\t\u0003\t\u0003\t\u0005\t\u0124\n\t\u0003\t\u0003\t\u0005",
    "\t\u0128\n\t\u0003\t\u0003\t\u0005\t\u012c\n\t\u0003\t\u0003\t\u0003",
    "\n\u0003\n\u0003\n\u0003\n\u0007\n\u0134\n\n\f\n\u000e\n\u0137\u000b",
    "\n\u0003\n\u0003\n\u0003\u000b\u0007\u000b\u013c\n\u000b\f\u000b\u000e",
    "\u000b\u013f\u000b\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0005\u000b",
    "\u0144\n\u000b\u0003\f\u0003\f\u0003\f\u0007\f\u0149\n\f\f\f\u000e\f",
    "\u014c\u000b\f\u0003\r\u0003\r\u0003\r\u0003\r\u0005\r\u0152\n\r\u0003",
    "\r\u0003\r\u0005\r\u0156\n\r\u0003\r\u0005\r\u0159\n\r\u0003\r\u0005",
    "\r\u015c\n\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000e\u0007",
    "\u000e\u0163\n\u000e\f\u000e\u000e\u000e\u0166\u000b\u000e\u0003\u000f",
    "\u0007\u000f\u0169\n\u000f\f\u000f\u000e\u000f\u016c\u000b\u000f\u0003",
    "\u000f\u0003\u000f\u0005\u000f\u0170\n\u000f\u0003\u000f\u0005\u000f",
    "\u0173\n\u000f\u0003\u0010\u0003\u0010\u0007\u0010\u0177\n\u0010\f\u0010",
    "\u000e\u0010\u017a\u000b\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0005",
    "\u0011\u017f\n\u0011\u0003\u0011\u0003\u0011\u0005\u0011\u0183\n\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0007\u0012\u0189\n",
    "\u0012\f\u0012\u000e\u0012\u018c\u000b\u0012\u0003\u0012\u0003\u0012",
    "\u0003\u0013\u0003\u0013\u0007\u0013\u0192\n\u0013\f\u0013\u000e\u0013",
    "\u0195\u000b\u0013\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0005",
    "\u0014\u019b\n\u0014\u0003\u0014\u0003\u0014\u0007\u0014\u019f\n\u0014",
    "\f\u0014\u000e\u0014\u01a2\u000b\u0014\u0003\u0014\u0005\u0014\u01a5",
    "\n\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015",
    "\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0005\u0015\u01b0\n",
    "\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0007",
    "\u0016\u01b7\n\u0016\f\u0016\u000e\u0016\u01ba\u000b\u0016\u0003\u0016",
    "\u0003\u0016\u0005\u0016\u01be\n\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0017\u0003\u0017\u0005\u0017\u01c4\n\u0017\u0003\u0018\u0003\u0018",
    "\u0005\u0018\u01c8\n\u0018\u0003\u0019\u0003\u0019\u0003\u0019\u0003",
    "\u001a\u0003\u001a\u0003\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003",
    "\u001b\u0005\u001b\u01d4\n\u001b\u0003\u001b\u0003\u001b\u0003\u001c",
    "\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001d\u0007\u001d\u01dd\n",
    "\u001d\f\u001d\u000e\u001d\u01e0\u000b\u001d\u0003\u001d\u0003\u001d",
    "\u0005\u001d\u01e4\n\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0003",
    "\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0005\u001e\u01ed\n\u001e",
    "\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0007\u001f\u01f3\n",
    "\u001f\f\u001f\u000e\u001f\u01f6\u000b\u001f\u0003\u001f\u0003\u001f",
    "\u0003 \u0003 \u0003 \u0007 \u01fd\n \f \u000e \u0200\u000b \u0003 ",
    "\u0003 \u0003 \u0003!\u0007!\u0206\n!\f!\u000e!\u0209\u000b!\u0003!",
    "\u0003!\u0003!\u0007!\u020e\n!\f!\u000e!\u0211\u000b!\u0003!\u0003!",
    "\u0005!\u0215\n!\u0003!\u0003!\u0003!\u0003!\u0007!\u021b\n!\f!\u000e",
    "!\u021e\u000b!\u0003!\u0003!\u0005!\u0222\n!\u0003!\u0003!\u0003\"\u0003",
    "\"\u0003\"\u0003\"\u0003\"\u0003\"\u0005\"\u022c\n\"\u0003#\u0003#\u0003",
    "#\u0003$\u0003$\u0003$\u0007$\u0234\n$\f$\u000e$\u0237\u000b$\u0003",
    "%\u0003%\u0003%\u0005%\u023c\n%\u0003&\u0003&\u0003&\u0005&\u0241\n",
    "&\u0003&\u0003&\u0007&\u0245\n&\f&\u000e&\u0248\u000b&\u0003\'\u0003",
    "\'\u0005\'\u024c\n\'\u0003(\u0003(\u0003(\u0003(\u0007(\u0252\n(\f(",
    "\u000e(\u0255\u000b(\u0003(\u0005(\u0258\n(\u0005(\u025a\n(\u0003(\u0003",
    "(\u0003)\u0003)\u0005)\u0260\n)\u0003)\u0003)\u0003)\u0005)\u0265\n",
    ")\u0007)\u0267\n)\f)\u000e)\u026a\u000b)\u0003*\u0003*\u0003*\u0003",
    "*\u0005*\u0270\n*\u0005*\u0272\n*\u0003+\u0003+\u0003+\u0007+\u0277",
    "\n+\f+\u000e+\u027a\u000b+\u0003,\u0003,\u0005,\u027e\n,\u0003,\u0003",
    ",\u0003-\u0003-\u0003-\u0007-\u0285\n-\f-\u000e-\u0288\u000b-\u0003",
    "-\u0003-\u0005-\u028c\n-\u0003-\u0005-\u028f\n-\u0003.\u0007.\u0292",
    "\n.\f.\u000e.\u0295\u000b.\u0003.\u0003.\u0003.\u0003/\u0007/\u029b",
    "\n/\f/\u000e/\u029e\u000b/\u0003/\u0003/\u0003/\u0003/\u00030\u0003",
    "0\u00030\u00070\u02a7\n0\f0\u000e0\u02aa\u000b0\u00031\u00031\u0003",
    "1\u00031\u00031\u00031\u00031\u00031\u00031\u00051\u02b5\n1\u00032\u0003",
    "2\u00033\u00033\u00034\u00034\u00034\u00034\u00034\u00054\u02c0\n4\u0003",
    "4\u00054\u02c3\n4\u00035\u00035\u00035\u00075\u02c8\n5\f5\u000e5\u02cb",
    "\u000b5\u00036\u00036\u00036\u00036\u00037\u00037\u00037\u00057\u02d4",
    "\n7\u00038\u00038\u00038\u00038\u00078\u02da\n8\f8\u000e8\u02dd\u000b",
    "8\u00058\u02df\n8\u00038\u00058\u02e2\n8\u00038\u00038\u00039\u0003",
    "9\u00039\u00039\u00039\u0003:\u0003:\u0007:\u02ed\n:\f:\u000e:\u02f0",
    "\u000b:\u0003:\u0003:\u0003;\u0007;\u02f5\n;\f;\u000e;\u02f8\u000b;",
    "\u0003;\u0003;\u0005;\u02fc\n;\u0003<\u0003<\u0003<\u0003<\u0003<\u0003",
    "<\u0005<\u0304\n<\u0003<\u0003<\u0005<\u0308\n<\u0003<\u0003<\u0005",
    "<\u030c\n<\u0003<\u0003<\u0005<\u0310\n<\u0005<\u0312\n<\u0003=\u0003",
    "=\u0005=\u0316\n=\u0003>\u0003>\u0003>\u0003>\u0005>\u031c\n>\u0003",
    "?\u0003?\u0003@\u0003@\u0003@\u0003A\u0003A\u0003A\u0003A\u0003B\u0007",
    "B\u0328\nB\fB\u000eB\u032b\u000bB\u0003C\u0003C\u0003C\u0003C\u0003",
    "C\u0005C\u0332\nC\u0003D\u0007D\u0335\nD\fD\u000eD\u0338\u000bD\u0003",
    "D\u0003D\u0003D\u0003E\u0007E\u033e\nE\fE\u000eE\u0341\u000bE\u0003",
    "E\u0003E\u0005E\u0345\nE\u0003E\u0005E\u0348\nE\u0003F\u0003F\u0003",
    "F\u0003F\u0003F\u0005F\u034f\nF\u0003F\u0003F\u0003F\u0003F\u0003F\u0003",
    "F\u0003F\u0005F\u0358\nF\u0003F\u0003F\u0003F\u0003F\u0003F\u0003F\u0003",
    "F\u0003F\u0003F\u0003F\u0003F\u0003F\u0003F\u0003F\u0003F\u0003F\u0003",
    "F\u0003F\u0003F\u0006F\u036d\nF\rF\u000eF\u036e\u0003F\u0005F\u0372",
    "\nF\u0003F\u0005F\u0375\nF\u0003F\u0003F\u0003F\u0003F\u0007F\u037b",
    "\nF\fF\u000eF\u037e\u000bF\u0003F\u0005F\u0381\nF\u0003F\u0003F\u0003",
    "F\u0003F\u0007F\u0387\nF\fF\u000eF\u038a\u000bF\u0003F\u0007F\u038d",
    "\nF\fF\u000eF\u0390\u000bF\u0003F\u0003F\u0003F\u0003F\u0003F\u0003",
    "F\u0003F\u0003F\u0005F\u039a\nF\u0003F\u0003F\u0003F\u0003F\u0003F\u0003",
    "F\u0003F\u0005F\u03a3\nF\u0003F\u0003F\u0003F\u0005F\u03a8\nF\u0003",
    "F\u0003F\u0003F\u0003F\u0003F\u0003F\u0003F\u0003F\u0005F\u03b2\nF\u0003",
    "G\u0003G\u0003G\u0007G\u03b7\nG\fG\u000eG\u03ba\u000bG\u0003G\u0003",
    "G\u0003G\u0003G\u0003G\u0003H\u0003H\u0003H\u0007H\u03c4\nH\fH\u000e",
    "H\u03c7\u000bH\u0003I\u0003I\u0003I\u0003J\u0003J\u0003J\u0005J\u03cf",
    "\nJ\u0003J\u0003J\u0003K\u0003K\u0003K\u0007K\u03d6\nK\fK\u000eK\u03d9",
    "\u000bK\u0003L\u0007L\u03dc\nL\fL\u000eL\u03df\u000bL\u0003L\u0003L",
    "\u0003L\u0003L\u0003L\u0003M\u0006M\u03e7\nM\rM\u000eM\u03e8\u0003M",
    "\u0006M\u03ec\nM\rM\u000eM\u03ed\u0003N\u0003N\u0003N\u0005N\u03f3\n",
    "N\u0003N\u0003N\u0003N\u0005N\u03f8\nN\u0003O\u0003O\u0005O\u03fc\n",
    "O\u0003O\u0003O\u0005O\u0400\nO\u0003O\u0003O\u0005O\u0404\nO\u0005",
    "O\u0406\nO\u0003P\u0003P\u0005P\u040a\nP\u0003Q\u0007Q\u040d\nQ\fQ\u000e",
    "Q\u0410\u000bQ\u0003Q\u0003Q\u0003Q\u0003Q\u0003Q\u0003R\u0003R\u0003",
    "R\u0003R\u0003S\u0003S\u0003S\u0007S\u041e\nS\fS\u000eS\u0421\u000b",
    "S\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003",
    "T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0005T\u0434\nT\u0003",
    "T\u0003T\u0005T\u0438\nT\u0003T\u0003T\u0003T\u0005T\u043d\nT\u0003",
    "T\u0003T\u0005T\u0441\nT\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003",
    "T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0005T\u0451\nT\u0003",
    "T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003",
    "T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003",
    "T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003",
    "T\u0003T\u0003T\u0003T\u0003T\u0003T\u0003T\u0005T\u0478\nT\u0003T\u0003",
    "T\u0003T\u0003T\u0005T\u047e\nT\u0003T\u0003T\u0003T\u0003T\u0003T\u0003",
    "T\u0003T\u0003T\u0005T\u0488\nT\u0003T\u0003T\u0003T\u0003T\u0003T\u0003",
    "T\u0003T\u0003T\u0003T\u0005T\u0493\nT\u0003T\u0007T\u0496\nT\fT\u000e",
    "T\u0499\u000bT\u0003U\u0003U\u0003U\u0003U\u0003V\u0003V\u0003V\u0005",
    "V\u04a2\nV\u0003V\u0003V\u0003V\u0003V\u0003V\u0007V\u04a9\nV\fV\u000e",
    "V\u04ac\u000bV\u0003V\u0005V\u04af\nV\u0003W\u0003W\u0005W\u04b3\nW",
    "\u0003X\u0003X\u0003X\u0003X\u0003X\u0003X\u0003X\u0003X\u0003X\u0003",
    "X\u0003X\u0003X\u0003X\u0003X\u0003X\u0003X\u0003X\u0003X\u0005X\u04c7",
    "\nX\u0005X\u04c9\nX\u0003Y\u0003Y\u0003Y\u0005Y\u04ce\nY\u0003Y\u0007",
    "Y\u04d1\nY\fY\u000eY\u04d4\u000bY\u0003Y\u0003Y\u0005Y\u04d8\nY\u0003",
    "Z\u0003Z\u0003Z\u0003Z\u0003Z\u0003Z\u0003Z\u0005Z\u04e1\nZ\u0005Z\u04e3",
    "\nZ\u0003[\u0003[\u0005[\u04e7\n[\u0003[\u0003[\u0003[\u0005[\u04ec",
    "\n[\u0007[\u04ee\n[\f[\u000e[\u04f1\u000b[\u0003[\u0005[\u04f4\n[\u0003",
    "\\\u0003\\\u0005\\\u04f8\n\\\u0003\\\u0003\\\u0003]\u0003]\u0003]\u0003",
    "]\u0007]\u0500\n]\f]\u000e]\u0503\u000b]\u0003]\u0003]\u0003]\u0003",
    "]\u0003]\u0003]\u0003]\u0007]\u050c\n]\f]\u000e]\u050f\u000b]\u0003",
    "]\u0003]\u0007]\u0513\n]\f]\u000e]\u0516\u000b]\u0005]\u0518\n]\u0003",
    "^\u0003^\u0005^\u051c\n^\u0003_\u0003_\u0003_\u0003`\u0003`\u0003`\u0005",
    "`\u0524\n`\u0003a\u0003a\u0003a\u0005a\u0529\na\u0003b\u0003b\u0003",
    "b\u0003b\u0003c\u0003c\u0003c\u0007c\u0532\nc\fc\u000ec\u0535\u000b",
    "c\u0003d\u0005d\u0538\nd\u0003d\u0003d\u0003d\u0003d\u0005d\u053e\n",
    "d\u0003d\u0003d\u0007d\u0542\nd\fd\u000ed\u0545\u000bd\u0003e\u0003",
    "e\u0003f\u0003f\u0003g\u0003g\u0003g\u0003g\u0007g\u054f\ng\fg\u000e",
    "g\u0552\u000bg\u0003g\u0003g\u0003h\u0003h\u0003h\u0003h\u0005h\u055a",
    "\nh\u0005h\u055c\nh\u0003i\u0003i\u0003i\u0003i\u0005i\u0562\ni\u0003",
    "j\u0003j\u0005j\u0566\nj\u0003j\u0003j\u0003k\u0003k\u0003k\u0003k\u0003",
    "k\u0005k\u056f\nk\u0003k\u0002\u0003\u00a6l\u0002\u0004\u0006\b\n\f",
    "\u000e\u0010\u0012\u0014\u0016\u0018\u001a\u001c\u001e \"$&(*,.0246",
    "8:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086\u0088",
    "\u008a\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e\u00a0",
    "\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6\u00b8",
    "\u00ba\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc\u00ce\u00d0",
    "\u00d2\u00d4\u0002\u000f\u0004\u0002\u0016\u0016--\u0003\u00028;\u0003",
    "\u0002<=\u0003\u0002X[\u0003\u0002NO\u0004\u0002\\]aa\u0003\u0002Z[",
    "\u0004\u0002LMST\u0004\u0002RRUU\u0005\u0002\u0005\u0005KKbl\u0003\u0002",
    "XY\n\u0002\b\b\n\n\r\r\u0013\u0013\u0019\u0019  \"\"**\u0003\u0002\u0003",
    "\u0004\u0002\u060a\u0002\u00d7\u0003\u0002\u0002\u0002\u0004\u00ea\u0003",
    "\u0002\u0002\u0002\u0006\u00f1\u0003\u0002\u0002\u0002\b\u0109\u0003",
    "\u0002\u0002\u0002\n\u0110\u0003\u0002\u0002\u0002\f\u011a\u0003\u0002",
    "\u0002\u0002\u000e\u011e\u0003\u0002\u0002\u0002\u0010\u0120\u0003\u0002",
    "\u0002\u0002\u0012\u012f\u0003\u0002\u0002\u0002\u0014\u013d\u0003\u0002",
    "\u0002\u0002\u0016\u0145\u0003\u0002\u0002\u0002\u0018\u014d\u0003\u0002",
    "\u0002\u0002\u001a\u015f\u0003\u0002\u0002\u0002\u001c\u016a\u0003\u0002",
    "\u0002\u0002\u001e\u0174\u0003\u0002\u0002\u0002 \u017b\u0003\u0002",
    "\u0002\u0002\"\u0186\u0003\u0002\u0002\u0002$\u018f\u0003\u0002\u0002",
    "\u0002&\u01a4\u0003\u0002\u0002\u0002(\u01af\u0003\u0002\u0002\u0002",
    "*\u01b1\u0003\u0002\u0002\u0002,\u01c3\u0003\u0002\u0002\u0002.\u01c7",
    "\u0003\u0002\u0002\u00020\u01c9\u0003\u0002\u0002\u00022\u01cc\u0003",
    "\u0002\u0002\u00024\u01cf\u0003\u0002\u0002\u00026\u01d7\u0003\u0002",
    "\u0002\u00028\u01e3\u0003\u0002\u0002\u0002:\u01ec\u0003\u0002\u0002",
    "\u0002<\u01ee\u0003\u0002\u0002\u0002>\u01f9\u0003\u0002\u0002\u0002",
    "@\u0207\u0003\u0002\u0002\u0002B\u022b\u0003\u0002\u0002\u0002D\u022d",
    "\u0003\u0002\u0002\u0002F\u0230\u0003\u0002\u0002\u0002H\u0238\u0003",
    "\u0002\u0002\u0002J\u0240\u0003\u0002\u0002\u0002L\u024b\u0003\u0002",
    "\u0002\u0002N\u024d\u0003\u0002\u0002\u0002P\u025d\u0003\u0002\u0002",
    "\u0002R\u0271\u0003\u0002\u0002\u0002T\u0273\u0003\u0002\u0002\u0002",
    "V\u027b\u0003\u0002\u0002\u0002X\u028e\u0003\u0002\u0002\u0002Z\u0293",
    "\u0003\u0002\u0002\u0002\\\u029c\u0003\u0002\u0002\u0002^\u02a3\u0003",
    "\u0002\u0002\u0002`\u02b4\u0003\u0002\u0002\u0002b\u02b6\u0003\u0002",
    "\u0002\u0002d\u02b8\u0003\u0002\u0002\u0002f\u02ba\u0003\u0002\u0002",
    "\u0002h\u02c4\u0003\u0002\u0002\u0002j\u02cc\u0003\u0002\u0002\u0002",
    "l\u02d3\u0003\u0002\u0002\u0002n\u02d5\u0003\u0002\u0002\u0002p\u02e5",
    "\u0003\u0002\u0002\u0002r\u02ea\u0003\u0002\u0002\u0002t\u02fb\u0003",
    "\u0002\u0002\u0002v\u0311\u0003\u0002\u0002\u0002x\u0315\u0003\u0002",
    "\u0002\u0002z\u0317\u0003\u0002\u0002\u0002|\u031d\u0003\u0002\u0002",
    "\u0002~\u031f\u0003\u0002\u0002\u0002\u0080\u0322\u0003\u0002\u0002",
    "\u0002\u0082\u0329\u0003\u0002\u0002\u0002\u0084\u0331\u0003\u0002\u0002",
    "\u0002\u0086\u0336\u0003\u0002\u0002\u0002\u0088\u0347\u0003\u0002\u0002",
    "\u0002\u008a\u03b1\u0003\u0002\u0002\u0002\u008c\u03b3\u0003\u0002\u0002",
    "\u0002\u008e\u03c0\u0003\u0002\u0002\u0002\u0090\u03c8\u0003\u0002\u0002",
    "\u0002\u0092\u03cb\u0003\u0002\u0002\u0002\u0094\u03d2\u0003\u0002\u0002",
    "\u0002\u0096\u03dd\u0003\u0002\u0002\u0002\u0098\u03e6\u0003\u0002\u0002",
    "\u0002\u009a\u03f7\u0003\u0002\u0002\u0002\u009c\u0405\u0003\u0002\u0002",
    "\u0002\u009e\u0409\u0003\u0002\u0002\u0002\u00a0\u040e\u0003\u0002\u0002",
    "\u0002\u00a2\u0416\u0003\u0002\u0002\u0002\u00a4\u041a\u0003\u0002\u0002",
    "\u0002\u00a6\u0440\u0003\u0002\u0002\u0002\u00a8\u049a\u0003\u0002\u0002",
    "\u0002\u00aa\u04ae\u0003\u0002\u0002\u0002\u00ac\u04b2\u0003\u0002\u0002",
    "\u0002\u00ae\u04c8\u0003\u0002\u0002\u0002\u00b0\u04cd\u0003\u0002\u0002",
    "\u0002\u00b2\u04e2\u0003\u0002\u0002\u0002\u00b4\u04f3\u0003\u0002\u0002",
    "\u0002\u00b6\u04f5\u0003\u0002\u0002\u0002\u00b8\u04fb\u0003\u0002\u0002",
    "\u0002\u00ba\u0519\u0003\u0002\u0002\u0002\u00bc\u051d\u0003\u0002\u0002",
    "\u0002\u00be\u0523\u0003\u0002\u0002\u0002\u00c0\u0528\u0003\u0002\u0002",
    "\u0002\u00c2\u052a\u0003\u0002\u0002\u0002\u00c4\u052e\u0003\u0002\u0002",
    "\u0002\u00c6\u0537\u0003\u0002\u0002\u0002\u00c8\u0546\u0003\u0002\u0002",
    "\u0002\u00ca\u0548\u0003\u0002\u0002\u0002\u00cc\u054a\u0003\u0002\u0002",
    "\u0002\u00ce\u055b\u0003\u0002\u0002\u0002\u00d0\u0561\u0003\u0002\u0002",
    "\u0002\u00d2\u0563\u0003\u0002\u0002\u0002\u00d4\u056e\u0003\u0002\u0002",
    "\u0002\u00d6\u00d8\u0005\u0004\u0003\u0002\u00d7\u00d6\u0003\u0002\u0002",
    "\u0002\u00d7\u00d8\u0003\u0002\u0002\u0002\u00d8\u00dc\u0003\u0002\u0002",
    "\u0002\u00d9\u00db\u0005\u0006\u0004\u0002\u00da\u00d9\u0003\u0002\u0002",
    "\u0002\u00db\u00de\u0003\u0002\u0002\u0002\u00dc\u00da\u0003\u0002\u0002",
    "\u0002\u00dc\u00dd\u0003\u0002\u0002\u0002\u00dd\u00e2\u0003\u0002\u0002",
    "\u0002\u00de\u00dc\u0003\u0002\u0002\u0002\u00df\u00e1\u0005\b\u0005",
    "\u0002\u00e0\u00df\u0003\u0002\u0002\u0002\u00e1\u00e4\u0003\u0002\u0002",
    "\u0002\u00e2\u00e0\u0003\u0002\u0002\u0002\u00e2\u00e3\u0003\u0002\u0002",
    "\u0002\u00e3\u00e5\u0003\u0002\u0002\u0002\u00e4\u00e2\u0003\u0002\u0002",
    "\u0002\u00e5\u00e6\u0007\u0002\u0002\u0003\u00e6\u0003\u0003\u0002\u0002",
    "\u0002\u00e7\u00e9\u0005f4\u0002\u00e8\u00e7\u0003\u0002\u0002\u0002",
    "\u00e9\u00ec\u0003\u0002\u0002\u0002\u00ea\u00e8\u0003\u0002\u0002\u0002",
    "\u00ea\u00eb\u0003\u0002\u0002\u0002\u00eb\u00ed\u0003\u0002\u0002\u0002",
    "\u00ec\u00ea\u0003\u0002\u0002\u0002\u00ed\u00ee\u0007%\u0002\u0002",
    "\u00ee\u00ef\u0005^0\u0002\u00ef\u00f0\u0007H\u0002\u0002\u00f0\u0005",
    "\u0003\u0002\u0002\u0002\u00f1\u00f3\u0007\u001e\u0002\u0002\u00f2\u00f4",
    "\u0007+\u0002\u0002\u00f3\u00f2\u0003\u0002\u0002\u0002\u00f3\u00f4",
    "\u0003\u0002\u0002\u0002\u00f4\u00f5\u0003\u0002\u0002\u0002\u00f5\u00f8",
    "\u0005^0\u0002\u00f6\u00f7\u0007J\u0002\u0002\u00f7\u00f9\u0007\\\u0002",
    "\u0002\u00f8\u00f6\u0003\u0002\u0002\u0002\u00f8\u00f9\u0003\u0002\u0002",
    "\u0002\u00f9\u00fa\u0003\u0002\u0002\u0002\u00fa\u00fb\u0007H\u0002",
    "\u0002\u00fb\u0007\u0003\u0002\u0002\u0002\u00fc\u00fe\u0005\f\u0007",
    "\u0002\u00fd\u00fc\u0003\u0002\u0002\u0002\u00fe\u0101\u0003\u0002\u0002",
    "\u0002\u00ff\u00fd\u0003\u0002\u0002\u0002\u00ff\u0100\u0003\u0002\u0002",
    "\u0002\u0100\u0106\u0003\u0002\u0002\u0002\u0101\u00ff\u0003\u0002\u0002",
    "\u0002\u0102\u0107\u0005\u0010\t\u0002\u0103\u0107\u0005\u0018\r\u0002",
    "\u0104\u0107\u0005 \u0011\u0002\u0105\u0107\u0005p9\u0002\u0106\u0102",
    "\u0003\u0002\u0002\u0002\u0106\u0103\u0003\u0002\u0002\u0002\u0106\u0104",
    "\u0003\u0002\u0002\u0002\u0106\u0105\u0003\u0002\u0002\u0002\u0107\u010a",
    "\u0003\u0002\u0002\u0002\u0108\u010a\u0007H\u0002\u0002\u0109\u00ff",
    "\u0003\u0002\u0002\u0002\u0109\u0108\u0003\u0002\u0002\u0002\u010a\t",
    "\u0003\u0002\u0002\u0002\u010b\u0111\u0005\f\u0007\u0002\u010c\u0111",
    "\u0007#\u0002\u0002\u010d\u0111\u0007/\u0002\u0002\u010e\u0111\u0007",
    "3\u0002\u0002\u010f\u0111\u00076\u0002\u0002\u0110\u010b\u0003\u0002",
    "\u0002\u0002\u0110\u010c\u0003\u0002\u0002\u0002\u0110\u010d\u0003\u0002",
    "\u0002\u0002\u0110\u010e\u0003\u0002\u0002\u0002\u0110\u010f\u0003\u0002",
    "\u0002\u0002\u0111\u000b\u0003\u0002\u0002\u0002\u0112\u011b\u0005f",
    "4\u0002\u0113\u011b\u0007(\u0002\u0002\u0114\u011b\u0007\'\u0002\u0002",
    "\u0115\u011b\u0007&\u0002\u0002\u0116\u011b\u0007+\u0002\u0002\u0117",
    "\u011b\u0007\u0006\u0002\u0002\u0118\u011b\u0007\u0017\u0002\u0002\u0119",
    "\u011b\u0007,\u0002\u0002\u011a\u0112\u0003\u0002\u0002\u0002\u011a",
    "\u0113\u0003\u0002\u0002\u0002\u011a\u0114\u0003\u0002\u0002\u0002\u011a",
    "\u0115\u0003\u0002\u0002\u0002\u011a\u0116\u0003\u0002\u0002\u0002\u011a",
    "\u0117\u0003\u0002\u0002\u0002\u011a\u0118\u0003\u0002\u0002\u0002\u011a",
    "\u0119\u0003\u0002\u0002\u0002\u011b\r\u0003\u0002\u0002\u0002\u011c",
    "\u011f\u0007\u0017\u0002\u0002\u011d\u011f\u0005f4\u0002\u011e\u011c",
    "\u0003\u0002\u0002\u0002\u011e\u011d\u0003\u0002\u0002\u0002\u011f\u000f",
    "\u0003\u0002\u0002\u0002\u0120\u0121\u0007\u000e\u0002\u0002\u0121\u0123",
    "\u0007t\u0002\u0002\u0122\u0124\u0005\u0012\n\u0002\u0123\u0122\u0003",
    "\u0002\u0002\u0002\u0123\u0124\u0003\u0002\u0002\u0002\u0124\u0127\u0003",
    "\u0002\u0002\u0002\u0125\u0126\u0007\u0016\u0002\u0002\u0126\u0128\u0005",
    "\u00c6d\u0002\u0127\u0125\u0003\u0002\u0002\u0002\u0127\u0128\u0003",
    "\u0002\u0002\u0002\u0128\u012b\u0003\u0002\u0002\u0002\u0129\u012a\u0007",
    "\u001d\u0002\u0002\u012a\u012c\u0005\u00c4c\u0002\u012b\u0129\u0003",
    "\u0002\u0002\u0002\u012b\u012c\u0003\u0002\u0002\u0002\u012c\u012d\u0003",
    "\u0002\u0002\u0002\u012d\u012e\u0005\"\u0012\u0002\u012e\u0011\u0003",
    "\u0002\u0002\u0002\u012f\u0130\u0007M\u0002\u0002\u0130\u0135\u0005",
    "\u0014\u000b\u0002\u0131\u0132\u0007I\u0002\u0002\u0132\u0134\u0005",
    "\u0014\u000b\u0002\u0133\u0131\u0003\u0002\u0002\u0002\u0134\u0137\u0003",
    "\u0002\u0002\u0002\u0135\u0133\u0003\u0002\u0002\u0002\u0135\u0136\u0003",
    "\u0002\u0002\u0002\u0136\u0138\u0003\u0002\u0002\u0002\u0137\u0135\u0003",
    "\u0002\u0002\u0002\u0138\u0139\u0007L\u0002\u0002\u0139\u0013\u0003",
    "\u0002\u0002\u0002\u013a\u013c\u0005f4\u0002\u013b\u013a\u0003\u0002",
    "\u0002\u0002\u013c\u013f\u0003\u0002\u0002\u0002\u013d\u013b\u0003\u0002",
    "\u0002\u0002\u013d\u013e\u0003\u0002\u0002\u0002\u013e\u0140\u0003\u0002",
    "\u0002\u0002\u013f\u013d\u0003\u0002\u0002\u0002\u0140\u0143\u0007t",
    "\u0002\u0002\u0141\u0142\u0007\u0016\u0002\u0002\u0142\u0144\u0005\u0016",
    "\f\u0002\u0143\u0141\u0003\u0002\u0002\u0002\u0143\u0144\u0003\u0002",
    "\u0002\u0002\u0144\u0015\u0003\u0002\u0002\u0002\u0145\u014a\u0005\u00c6",
    "d\u0002\u0146\u0147\u0007^\u0002\u0002\u0147\u0149\u0005\u00c6d\u0002",
    "\u0148\u0146\u0003\u0002\u0002\u0002\u0149\u014c\u0003\u0002\u0002\u0002",
    "\u014a\u0148\u0003\u0002\u0002\u0002\u014a\u014b\u0003\u0002\u0002\u0002",
    "\u014b\u0017\u0003\u0002\u0002\u0002\u014c\u014a\u0003\u0002\u0002\u0002",
    "\u014d\u014e\u0007\u0015\u0002\u0002\u014e\u0151\u0007t\u0002\u0002",
    "\u014f\u0150\u0007\u001d\u0002\u0002\u0150\u0152\u0005\u00c4c\u0002",
    "\u0151\u014f\u0003\u0002\u0002\u0002\u0151\u0152\u0003\u0002\u0002\u0002",
    "\u0152\u0153\u0003\u0002\u0002\u0002\u0153\u0155\u0007D\u0002\u0002",
    "\u0154\u0156\u0005\u001a\u000e\u0002\u0155\u0154\u0003\u0002\u0002\u0002",
    "\u0155\u0156\u0003\u0002\u0002\u0002\u0156\u0158\u0003\u0002\u0002\u0002",
    "\u0157\u0159\u0007I\u0002\u0002\u0158\u0157\u0003\u0002\u0002\u0002",
    "\u0158\u0159\u0003\u0002\u0002\u0002\u0159\u015b\u0003\u0002\u0002\u0002",
    "\u015a\u015c\u0005\u001e\u0010\u0002\u015b\u015a\u0003\u0002\u0002\u0002",
    "\u015b\u015c\u0003\u0002\u0002\u0002\u015c\u015d\u0003\u0002\u0002\u0002",
    "\u015d\u015e\u0007E\u0002\u0002\u015e\u0019\u0003\u0002\u0002\u0002",
    "\u015f\u0164\u0005\u001c\u000f\u0002\u0160\u0161\u0007I\u0002\u0002",
    "\u0161\u0163\u0005\u001c\u000f\u0002\u0162\u0160\u0003\u0002\u0002\u0002",
    "\u0163\u0166\u0003\u0002\u0002\u0002\u0164\u0162\u0003\u0002\u0002\u0002",
    "\u0164\u0165\u0003\u0002\u0002\u0002\u0165\u001b\u0003\u0002\u0002\u0002",
    "\u0166\u0164\u0003\u0002\u0002\u0002\u0167\u0169\u0005f4\u0002\u0168",
    "\u0167\u0003\u0002\u0002\u0002\u0169\u016c\u0003\u0002\u0002\u0002\u016a",
    "\u0168\u0003\u0002\u0002\u0002\u016a\u016b\u0003\u0002\u0002\u0002\u016b",
    "\u016d\u0003\u0002\u0002\u0002\u016c\u016a\u0003\u0002\u0002\u0002\u016d",
    "\u016f\u0007t\u0002\u0002\u016e\u0170\u0005\u00d2j\u0002\u016f\u016e",
    "\u0003\u0002\u0002\u0002\u016f\u0170\u0003\u0002\u0002\u0002\u0170\u0172",
    "\u0003\u0002\u0002\u0002\u0171\u0173\u0005\"\u0012\u0002\u0172\u0171",
    "\u0003\u0002\u0002\u0002\u0172\u0173\u0003\u0002\u0002\u0002\u0173\u001d",
    "\u0003\u0002\u0002\u0002\u0174\u0178\u0007H\u0002\u0002\u0175\u0177",
    "\u0005&\u0014\u0002\u0176\u0175\u0003\u0002\u0002\u0002\u0177\u017a",
    "\u0003\u0002\u0002\u0002\u0178\u0176\u0003\u0002\u0002\u0002\u0178\u0179",
    "\u0003\u0002\u0002\u0002\u0179\u001f\u0003\u0002\u0002\u0002\u017a\u0178",
    "\u0003\u0002\u0002\u0002\u017b\u017c\u0007!\u0002\u0002\u017c\u017e",
    "\u0007t\u0002\u0002\u017d\u017f\u0005\u0012\n\u0002\u017e\u017d\u0003",
    "\u0002\u0002\u0002\u017e\u017f\u0003\u0002\u0002\u0002\u017f\u0182\u0003",
    "\u0002\u0002\u0002\u0180\u0181\u0007\u0016\u0002\u0002\u0181\u0183\u0005",
    "\u00c4c\u0002\u0182\u0180\u0003\u0002\u0002\u0002\u0182\u0183\u0003",
    "\u0002\u0002\u0002\u0183\u0184\u0003\u0002\u0002\u0002\u0184\u0185\u0005",
    "$\u0013\u0002\u0185!\u0003\u0002\u0002\u0002\u0186\u018a\u0007D\u0002",
    "\u0002\u0187\u0189\u0005&\u0014\u0002\u0188\u0187\u0003\u0002\u0002",
    "\u0002\u0189\u018c\u0003\u0002\u0002\u0002\u018a\u0188\u0003\u0002\u0002",
    "\u0002\u018a\u018b\u0003\u0002\u0002\u0002\u018b\u018d\u0003\u0002\u0002",
    "\u0002\u018c\u018a\u0003\u0002\u0002\u0002\u018d\u018e\u0007E\u0002",
    "\u0002\u018e#\u0003\u0002\u0002\u0002\u018f\u0193\u0007D\u0002\u0002",
    "\u0190\u0192\u00058\u001d\u0002\u0191\u0190\u0003\u0002\u0002\u0002",
    "\u0192\u0195\u0003\u0002\u0002\u0002\u0193\u0191\u0003\u0002\u0002\u0002",
    "\u0193\u0194\u0003\u0002\u0002\u0002\u0194\u0196\u0003\u0002\u0002\u0002",
    "\u0195\u0193\u0003\u0002\u0002\u0002\u0196\u0197\u0007E\u0002\u0002",
    "\u0197%\u0003\u0002\u0002\u0002\u0198\u01a5\u0007H\u0002\u0002\u0199",
    "\u019b\u0007+\u0002\u0002\u019a\u0199\u0003\u0002\u0002\u0002\u019a",
    "\u019b\u0003\u0002\u0002\u0002\u019b\u019c\u0003\u0002\u0002\u0002\u019c",
    "\u01a5\u0005\u0080A\u0002\u019d\u019f\u0005\n\u0006\u0002\u019e\u019d",
    "\u0003\u0002\u0002\u0002\u019f\u01a2\u0003\u0002\u0002\u0002\u01a0\u019e",
    "\u0003\u0002\u0002\u0002\u01a0\u01a1\u0003\u0002\u0002\u0002\u01a1\u01a3",
    "\u0003\u0002\u0002\u0002\u01a2\u01a0\u0003\u0002\u0002\u0002\u01a3\u01a5",
    "\u0005(\u0015\u0002\u01a4\u0198\u0003\u0002\u0002\u0002\u01a4\u019a",
    "\u0003\u0002\u0002\u0002\u01a4\u01a0\u0003\u0002\u0002\u0002\u01a5\'",
    "\u0003\u0002\u0002\u0002\u01a6\u01b0\u0005*\u0016\u0002\u01a7\u01b0",
    "\u00050\u0019\u0002\u01a8\u01b0\u00056\u001c\u0002\u01a9\u01b0\u0005",
    "4\u001b\u0002\u01aa\u01b0\u00052\u001a\u0002\u01ab\u01b0\u0005 \u0011",
    "\u0002\u01ac\u01b0\u0005p9\u0002\u01ad\u01b0\u0005\u0010\t\u0002\u01ae",
    "\u01b0\u0005\u0018\r\u0002\u01af\u01a6\u0003\u0002\u0002\u0002\u01af",
    "\u01a7\u0003\u0002\u0002\u0002\u01af\u01a8\u0003\u0002\u0002\u0002\u01af",
    "\u01a9\u0003\u0002\u0002\u0002\u01af\u01aa\u0003\u0002\u0002\u0002\u01af",
    "\u01ab\u0003\u0002\u0002\u0002\u01af\u01ac\u0003\u0002\u0002\u0002\u01af",
    "\u01ad\u0003\u0002\u0002\u0002\u01af\u01ae\u0003\u0002\u0002\u0002\u01b0",
    ")\u0003\u0002\u0002\u0002\u01b1\u01b2\u0005.\u0018\u0002\u01b2\u01b3",
    "\u0007t\u0002\u0002\u01b3\u01b8\u0005V,\u0002\u01b4\u01b5\u0007F\u0002",
    "\u0002\u01b5\u01b7\u0007G\u0002\u0002\u01b6\u01b4\u0003\u0002\u0002",
    "\u0002\u01b7\u01ba\u0003\u0002\u0002\u0002\u01b8\u01b6\u0003\u0002\u0002",
    "\u0002\u01b8\u01b9\u0003\u0002\u0002\u0002\u01b9\u01bd\u0003\u0002\u0002",
    "\u0002\u01ba\u01b8\u0003\u0002\u0002\u0002\u01bb\u01bc\u00072\u0002",
    "\u0002\u01bc\u01be\u0005T+\u0002\u01bd\u01bb\u0003\u0002\u0002\u0002",
    "\u01bd\u01be\u0003\u0002\u0002\u0002\u01be\u01bf\u0003\u0002\u0002\u0002",
    "\u01bf\u01c0\u0005,\u0017\u0002\u01c0+\u0003\u0002\u0002\u0002\u01c1",
    "\u01c4\u0005\u0080A\u0002\u01c2\u01c4\u0007H\u0002\u0002\u01c3\u01c1",
    "\u0003\u0002\u0002\u0002\u01c3\u01c2\u0003\u0002\u0002\u0002\u01c4-",
    "\u0003\u0002\u0002\u0002\u01c5\u01c8\u0005\u00c6d\u0002\u01c6\u01c8",
    "\u00075\u0002\u0002\u01c7\u01c5\u0003\u0002\u0002\u0002\u01c7\u01c6",
    "\u0003\u0002\u0002\u0002\u01c8/\u0003\u0002\u0002\u0002\u01c9\u01ca",
    "\u0005\u0012\n\u0002\u01ca\u01cb\u0005*\u0016\u0002\u01cb1\u0003\u0002",
    "\u0002\u0002\u01cc\u01cd\u0005\u0012\n\u0002\u01cd\u01ce\u00054\u001b",
    "\u0002\u01ce3\u0003\u0002\u0002\u0002\u01cf\u01d0\u0007t\u0002\u0002",
    "\u01d0\u01d3\u0005V,\u0002\u01d1\u01d2\u00072\u0002\u0002\u01d2\u01d4",
    "\u0005T+\u0002\u01d3\u01d1\u0003\u0002\u0002\u0002\u01d3\u01d4\u0003",
    "\u0002\u0002\u0002\u01d4\u01d5\u0003\u0002\u0002\u0002\u01d5\u01d6\u0005",
    "\u0080A\u0002\u01d65\u0003\u0002\u0002\u0002\u01d7\u01d8\u0005\u00c6",
    "d\u0002\u01d8\u01d9\u0005F$\u0002\u01d9\u01da\u0007H\u0002\u0002\u01da",
    "7\u0003\u0002\u0002\u0002\u01db\u01dd\u0005\n\u0006\u0002\u01dc\u01db",
    "\u0003\u0002\u0002\u0002\u01dd\u01e0\u0003\u0002\u0002\u0002\u01de\u01dc",
    "\u0003\u0002\u0002\u0002\u01de\u01df\u0003\u0002\u0002\u0002\u01df\u01e1",
    "\u0003\u0002\u0002\u0002\u01e0\u01de\u0003\u0002\u0002\u0002\u01e1\u01e4",
    "\u0005:\u001e\u0002\u01e2\u01e4\u0007H\u0002\u0002\u01e3\u01de\u0003",
    "\u0002\u0002\u0002\u01e3\u01e2\u0003\u0002\u0002\u0002\u01e49\u0003",
    "\u0002\u0002\u0002\u01e5\u01ed\u0005<\u001f\u0002\u01e6\u01ed\u0005",
    "@!\u0002\u01e7\u01ed\u0005D#\u0002\u01e8\u01ed\u0005 \u0011\u0002\u01e9",
    "\u01ed\u0005p9\u0002\u01ea\u01ed\u0005\u0010\t\u0002\u01eb\u01ed\u0005",
    "\u0018\r\u0002\u01ec\u01e5\u0003\u0002\u0002\u0002\u01ec\u01e6\u0003",
    "\u0002\u0002\u0002\u01ec\u01e7\u0003\u0002\u0002\u0002\u01ec\u01e8\u0003",
    "\u0002\u0002\u0002\u01ec\u01e9\u0003\u0002\u0002\u0002\u01ec\u01ea\u0003",
    "\u0002\u0002\u0002\u01ec\u01eb\u0003\u0002\u0002\u0002\u01ed;\u0003",
    "\u0002\u0002\u0002\u01ee\u01ef\u0005\u00c6d\u0002\u01ef\u01f4\u0005",
    "> \u0002\u01f0\u01f1\u0007I\u0002\u0002\u01f1\u01f3\u0005> \u0002\u01f2",
    "\u01f0\u0003\u0002\u0002\u0002\u01f3\u01f6\u0003\u0002\u0002\u0002\u01f4",
    "\u01f2\u0003\u0002\u0002\u0002\u01f4\u01f5\u0003\u0002\u0002\u0002\u01f5",
    "\u01f7\u0003\u0002\u0002\u0002\u01f6\u01f4\u0003\u0002\u0002\u0002\u01f7",
    "\u01f8\u0007H\u0002\u0002\u01f8=\u0003\u0002\u0002\u0002\u01f9\u01fe",
    "\u0007t\u0002\u0002\u01fa\u01fb\u0007F\u0002\u0002\u01fb\u01fd\u0007",
    "G\u0002\u0002\u01fc\u01fa\u0003\u0002\u0002\u0002\u01fd\u0200\u0003",
    "\u0002\u0002\u0002\u01fe\u01fc\u0003\u0002\u0002\u0002\u01fe\u01ff\u0003",
    "\u0002\u0002\u0002\u01ff\u0201\u0003\u0002\u0002\u0002\u0200\u01fe\u0003",
    "\u0002\u0002\u0002\u0201\u0202\u0007K\u0002\u0002\u0202\u0203\u0005",
    "L\'\u0002\u0203?\u0003\u0002\u0002\u0002\u0204\u0206\u0005B\"\u0002",
    "\u0205\u0204\u0003\u0002\u0002\u0002\u0206\u0209\u0003\u0002\u0002\u0002",
    "\u0207\u0205\u0003\u0002\u0002\u0002\u0207\u0208\u0003\u0002\u0002\u0002",
    "\u0208\u0214\u0003\u0002\u0002\u0002\u0209\u0207\u0003\u0002\u0002\u0002",
    "\u020a\u0215\u0005.\u0018\u0002\u020b\u020f\u0005\u0012\n\u0002\u020c",
    "\u020e\u0005f4\u0002\u020d\u020c\u0003\u0002\u0002\u0002\u020e\u0211",
    "\u0003\u0002\u0002\u0002\u020f\u020d\u0003\u0002\u0002\u0002\u020f\u0210",
    "\u0003\u0002\u0002\u0002\u0210\u0212\u0003\u0002\u0002\u0002\u0211\u020f",
    "\u0003\u0002\u0002\u0002\u0212\u0213\u0005.\u0018\u0002\u0213\u0215",
    "\u0003\u0002\u0002\u0002\u0214\u020a\u0003\u0002\u0002\u0002\u0214\u020b",
    "\u0003\u0002\u0002\u0002\u0215\u0216\u0003\u0002\u0002\u0002\u0216\u0217",
    "\u0007t\u0002\u0002\u0217\u021c\u0005V,\u0002\u0218\u0219\u0007F\u0002",
    "\u0002\u0219\u021b\u0007G\u0002\u0002\u021a\u0218\u0003\u0002\u0002",
    "\u0002\u021b\u021e\u0003\u0002\u0002\u0002\u021c\u021a\u0003\u0002\u0002",
    "\u0002\u021c\u021d\u0003\u0002\u0002\u0002\u021d\u0221\u0003\u0002\u0002",
    "\u0002\u021e\u021c\u0003\u0002\u0002\u0002\u021f\u0220\u00072\u0002",
    "\u0002\u0220\u0222\u0005T+\u0002\u0221\u021f\u0003\u0002\u0002\u0002",
    "\u0221\u0222\u0003\u0002\u0002\u0002\u0222\u0223\u0003\u0002\u0002\u0002",
    "\u0223\u0224\u0005,\u0017\u0002\u0224A\u0003\u0002\u0002\u0002\u0225",
    "\u022c\u0005f4\u0002\u0226\u022c\u0007(\u0002\u0002\u0227\u022c\u0007",
    "\u0006\u0002\u0002\u0228\u022c\u0007\u0011\u0002\u0002\u0229\u022c\u0007",
    "+\u0002\u0002\u022a\u022c\u0007,\u0002\u0002\u022b\u0225\u0003\u0002",
    "\u0002\u0002\u022b\u0226\u0003\u0002\u0002\u0002\u022b\u0227\u0003\u0002",
    "\u0002\u0002\u022b\u0228\u0003\u0002\u0002\u0002\u022b\u0229\u0003\u0002",
    "\u0002\u0002\u022b\u022a\u0003\u0002\u0002\u0002\u022cC\u0003\u0002",
    "\u0002\u0002\u022d\u022e\u0005\u0012\n\u0002\u022e\u022f\u0005@!\u0002",
    "\u022fE\u0003\u0002\u0002\u0002\u0230\u0235\u0005H%\u0002\u0231\u0232",
    "\u0007I\u0002\u0002\u0232\u0234\u0005H%\u0002\u0233\u0231\u0003\u0002",
    "\u0002\u0002\u0234\u0237\u0003\u0002\u0002\u0002\u0235\u0233\u0003\u0002",
    "\u0002\u0002\u0235\u0236\u0003\u0002\u0002\u0002\u0236G\u0003\u0002",
    "\u0002\u0002\u0237\u0235\u0003\u0002\u0002\u0002\u0238\u023b\u0005J",
    "&\u0002\u0239\u023a\u0007K\u0002\u0002\u023a\u023c\u0005L\'\u0002\u023b",
    "\u0239\u0003\u0002\u0002\u0002\u023b\u023c\u0003\u0002\u0002\u0002\u023c",
    "I\u0003\u0002\u0002\u0002\u023d\u0241\u0007t\u0002\u0002\u023e\u023f",
    "\u0007P\u0002\u0002\u023f\u0241\u0007t\u0002\u0002\u0240\u023d\u0003",
    "\u0002\u0002\u0002\u0240\u023e\u0003\u0002\u0002\u0002\u0241\u0246\u0003",
    "\u0002\u0002\u0002\u0242\u0243\u0007F\u0002\u0002\u0243\u0245\u0007",
    "G\u0002\u0002\u0244\u0242\u0003\u0002\u0002\u0002\u0245\u0248\u0003",
    "\u0002\u0002\u0002\u0246\u0244\u0003\u0002\u0002\u0002\u0246\u0247\u0003",
    "\u0002\u0002\u0002\u0247K\u0003\u0002\u0002\u0002\u0248\u0246\u0003",
    "\u0002\u0002\u0002\u0249\u024c\u0005N(\u0002\u024a\u024c\u0005\u00a6",
    "T\u0002\u024b\u0249\u0003\u0002\u0002\u0002\u024b\u024a\u0003\u0002",
    "\u0002\u0002\u024cM\u0003\u0002\u0002\u0002\u024d\u0259\u0007D\u0002",
    "\u0002\u024e\u0253\u0005L\'\u0002\u024f\u0250\u0007I\u0002\u0002\u0250",
    "\u0252\u0005L\'\u0002\u0251\u024f\u0003\u0002\u0002\u0002\u0252\u0255",
    "\u0003\u0002\u0002\u0002\u0253\u0251\u0003\u0002\u0002\u0002\u0253\u0254",
    "\u0003\u0002\u0002\u0002\u0254\u0257\u0003\u0002\u0002\u0002\u0255\u0253",
    "\u0003\u0002\u0002\u0002\u0256\u0258\u0007I\u0002\u0002\u0257\u0256",
    "\u0003\u0002\u0002\u0002\u0257\u0258\u0003\u0002\u0002\u0002\u0258\u025a",
    "\u0003\u0002\u0002\u0002\u0259\u024e\u0003\u0002\u0002\u0002\u0259\u025a",
    "\u0003\u0002\u0002\u0002\u025a\u025b\u0003\u0002\u0002\u0002\u025b\u025c",
    "\u0007E\u0002\u0002\u025cO\u0003\u0002\u0002\u0002\u025d\u025f\u0007",
    "t\u0002\u0002\u025e\u0260\u0005\u00ccg\u0002\u025f\u025e\u0003\u0002",
    "\u0002\u0002\u025f\u0260\u0003\u0002\u0002\u0002\u0260\u0268\u0003\u0002",
    "\u0002\u0002\u0261\u0262\u0007J\u0002\u0002\u0262\u0264\u0007t\u0002",
    "\u0002\u0263\u0265\u0005\u00ccg\u0002\u0264\u0263\u0003\u0002\u0002",
    "\u0002\u0264\u0265\u0003\u0002\u0002\u0002\u0265\u0267\u0003\u0002\u0002",
    "\u0002\u0266\u0261\u0003\u0002\u0002\u0002\u0267\u026a\u0003\u0002\u0002",
    "\u0002\u0268\u0266\u0003\u0002\u0002\u0002\u0268\u0269\u0003\u0002\u0002",
    "\u0002\u0269Q\u0003\u0002\u0002\u0002\u026a\u0268\u0003\u0002\u0002",
    "\u0002\u026b\u0272\u0005\u00c6d\u0002\u026c\u026f\u0007P\u0002\u0002",
    "\u026d\u026e\t\u0002\u0002\u0002\u026e\u0270\u0005\u00c6d\u0002\u026f",
    "\u026d\u0003\u0002\u0002\u0002\u026f\u0270\u0003\u0002\u0002\u0002\u0270",
    "\u0272\u0003\u0002\u0002\u0002\u0271\u026b\u0003\u0002\u0002\u0002\u0271",
    "\u026c\u0003\u0002\u0002\u0002\u0272S\u0003\u0002\u0002\u0002\u0273",
    "\u0278\u0005^0\u0002\u0274\u0275\u0007I\u0002\u0002\u0275\u0277\u0005",
    "^0\u0002\u0276\u0274\u0003\u0002\u0002\u0002\u0277\u027a\u0003\u0002",
    "\u0002\u0002\u0278\u0276\u0003\u0002\u0002\u0002\u0278\u0279\u0003\u0002",
    "\u0002\u0002\u0279U\u0003\u0002\u0002\u0002\u027a\u0278\u0003\u0002",
    "\u0002\u0002\u027b\u027d\u0007B\u0002\u0002\u027c\u027e\u0005X-\u0002",
    "\u027d\u027c\u0003\u0002\u0002\u0002\u027d\u027e\u0003\u0002\u0002\u0002",
    "\u027e\u027f\u0003\u0002\u0002\u0002\u027f\u0280\u0007C\u0002\u0002",
    "\u0280W\u0003\u0002\u0002\u0002\u0281\u0286\u0005Z.\u0002\u0282\u0283",
    "\u0007I\u0002\u0002\u0283\u0285\u0005Z.\u0002\u0284\u0282\u0003\u0002",
    "\u0002\u0002\u0285\u0288\u0003\u0002\u0002\u0002\u0286\u0284\u0003\u0002",
    "\u0002\u0002\u0286\u0287\u0003\u0002\u0002\u0002\u0287\u028b\u0003\u0002",
    "\u0002\u0002\u0288\u0286\u0003\u0002\u0002\u0002\u0289\u028a\u0007I",
    "\u0002\u0002\u028a\u028c\u0005\\/\u0002\u028b\u0289\u0003\u0002\u0002",
    "\u0002\u028b\u028c\u0003\u0002\u0002\u0002\u028c\u028f\u0003\u0002\u0002",
    "\u0002\u028d\u028f\u0005\\/\u0002\u028e\u0281\u0003\u0002\u0002\u0002",
    "\u028e\u028d\u0003\u0002\u0002\u0002\u028fY\u0003\u0002\u0002\u0002",
    "\u0290\u0292\u0005\u000e\b\u0002\u0291\u0290\u0003\u0002\u0002\u0002",
    "\u0292\u0295\u0003\u0002\u0002\u0002\u0293\u0291\u0003\u0002\u0002\u0002",
    "\u0293\u0294\u0003\u0002\u0002\u0002\u0294\u0296\u0003\u0002\u0002\u0002",
    "\u0295\u0293\u0003\u0002\u0002\u0002\u0296\u0297\u0005\u00c6d\u0002",
    "\u0297\u0298\u0005J&\u0002\u0298[\u0003\u0002\u0002\u0002\u0299\u029b",
    "\u0005\u000e\b\u0002\u029a\u0299\u0003\u0002\u0002\u0002\u029b\u029e",
    "\u0003\u0002\u0002\u0002\u029c\u029a\u0003\u0002\u0002\u0002\u029c\u029d",
    "\u0003\u0002\u0002\u0002\u029d\u029f\u0003\u0002\u0002\u0002\u029e\u029c",
    "\u0003\u0002\u0002\u0002\u029f\u02a0\u0005\u00c6d\u0002\u02a0\u02a1",
    "\u0007p\u0002\u0002\u02a1\u02a2\u0005J&\u0002\u02a2]\u0003\u0002\u0002",
    "\u0002\u02a3\u02a8\u0007t\u0002\u0002\u02a4\u02a5\u0007J\u0002\u0002",
    "\u02a5\u02a7\u0007t\u0002\u0002\u02a6\u02a4\u0003\u0002\u0002\u0002",
    "\u02a7\u02aa\u0003\u0002\u0002\u0002\u02a8\u02a6\u0003\u0002\u0002\u0002",
    "\u02a8\u02a9\u0003\u0002\u0002\u0002\u02a9_\u0003\u0002\u0002\u0002",
    "\u02aa\u02a8\u0003\u0002\u0002\u0002\u02ab\u02b5\u0005b2\u0002\u02ac",
    "\u02b5\u0005d3\u0002\u02ad\u02b5\u0007?\u0002\u0002\u02ae\u02b5\u0007",
    "@\u0002\u0002\u02af\u02b5\u0007>\u0002\u0002\u02b0\u02b5\u0007A\u0002",
    "\u0002\u02b1\u02b5\u0007P\u0002\u0002\u02b2\u02b3\u0007P\u0002\u0002",
    "\u02b3\u02b5\u0005\u00c8e\u0002\u02b4\u02ab\u0003\u0002\u0002\u0002",
    "\u02b4\u02ac\u0003\u0002\u0002\u0002\u02b4\u02ad\u0003\u0002\u0002\u0002",
    "\u02b4\u02ae\u0003\u0002\u0002\u0002\u02b4\u02af\u0003\u0002\u0002\u0002",
    "\u02b4\u02b0\u0003\u0002\u0002\u0002\u02b4\u02b1\u0003\u0002\u0002\u0002",
    "\u02b4\u02b2\u0003\u0002\u0002\u0002\u02b5a\u0003\u0002\u0002\u0002",
    "\u02b6\u02b7\t\u0003\u0002\u0002\u02b7c\u0003\u0002\u0002\u0002\u02b8",
    "\u02b9\t\u0004\u0002\u0002\u02b9e\u0003\u0002\u0002\u0002\u02ba\u02bb",
    "\u0007o\u0002\u0002\u02bb\u02c2\u0005^0\u0002\u02bc\u02bf\u0007B\u0002",
    "\u0002\u02bd\u02c0\u0005h5\u0002\u02be\u02c0\u0005l7\u0002\u02bf\u02bd",
    "\u0003\u0002\u0002\u0002\u02bf\u02be\u0003\u0002\u0002\u0002\u02bf\u02c0",
    "\u0003\u0002\u0002\u0002\u02c0\u02c1\u0003\u0002\u0002\u0002\u02c1\u02c3",
    "\u0007C\u0002\u0002\u02c2\u02bc\u0003\u0002\u0002\u0002\u02c2\u02c3",
    "\u0003\u0002\u0002\u0002\u02c3g\u0003\u0002\u0002\u0002\u02c4\u02c9",
    "\u0005j6\u0002\u02c5\u02c6\u0007I\u0002\u0002\u02c6\u02c8\u0005j6\u0002",
    "\u02c7\u02c5\u0003\u0002\u0002\u0002\u02c8\u02cb\u0003\u0002\u0002\u0002",
    "\u02c9\u02c7\u0003\u0002\u0002\u0002\u02c9\u02ca\u0003\u0002\u0002\u0002",
    "\u02cai\u0003\u0002\u0002\u0002\u02cb\u02c9\u0003\u0002\u0002\u0002",
    "\u02cc\u02cd\u0007t\u0002\u0002\u02cd\u02ce\u0007K\u0002\u0002\u02ce",
    "\u02cf\u0005l7\u0002\u02cfk\u0003\u0002\u0002\u0002\u02d0\u02d4\u0005",
    "\u00a6T\u0002\u02d1\u02d4\u0005f4\u0002\u02d2\u02d4\u0005n8\u0002\u02d3",
    "\u02d0\u0003\u0002\u0002\u0002\u02d3\u02d1\u0003\u0002\u0002\u0002\u02d3",
    "\u02d2\u0003\u0002\u0002\u0002\u02d4m\u0003\u0002\u0002\u0002\u02d5",
    "\u02de\u0007D\u0002\u0002\u02d6\u02db\u0005l7\u0002\u02d7\u02d8\u0007",
    "I\u0002\u0002\u02d8\u02da\u0005l7\u0002\u02d9\u02d7\u0003\u0002\u0002",
    "\u0002\u02da\u02dd\u0003\u0002\u0002\u0002\u02db\u02d9\u0003\u0002\u0002",
    "\u0002\u02db\u02dc\u0003\u0002\u0002\u0002\u02dc\u02df\u0003\u0002\u0002",
    "\u0002\u02dd\u02db\u0003\u0002\u0002\u0002\u02de\u02d6\u0003\u0002\u0002",
    "\u0002\u02de\u02df\u0003\u0002\u0002\u0002\u02df\u02e1\u0003\u0002\u0002",
    "\u0002\u02e0\u02e2\u0007I\u0002\u0002\u02e1\u02e0\u0003\u0002\u0002",
    "\u0002\u02e1\u02e2\u0003\u0002\u0002\u0002\u02e2\u02e3\u0003\u0002\u0002",
    "\u0002\u02e3\u02e4\u0007E\u0002\u0002\u02e4o\u0003\u0002\u0002\u0002",
    "\u02e5\u02e6\u0007o\u0002\u0002\u02e6\u02e7\u0007!\u0002\u0002\u02e7",
    "\u02e8\u0007t\u0002\u0002\u02e8\u02e9\u0005r:\u0002\u02e9q\u0003\u0002",
    "\u0002\u0002\u02ea\u02ee\u0007D\u0002\u0002\u02eb\u02ed\u0005t;\u0002",
    "\u02ec\u02eb\u0003\u0002\u0002\u0002\u02ed\u02f0\u0003\u0002\u0002\u0002",
    "\u02ee\u02ec\u0003\u0002\u0002\u0002\u02ee\u02ef\u0003\u0002\u0002\u0002",
    "\u02ef\u02f1\u0003\u0002\u0002\u0002\u02f0\u02ee\u0003\u0002\u0002\u0002",
    "\u02f1\u02f2\u0007E\u0002\u0002\u02f2s\u0003\u0002\u0002\u0002\u02f3",
    "\u02f5\u0005\n\u0006\u0002\u02f4\u02f3\u0003\u0002\u0002\u0002\u02f5",
    "\u02f8\u0003\u0002\u0002\u0002\u02f6\u02f4\u0003\u0002\u0002\u0002\u02f6",
    "\u02f7\u0003\u0002\u0002\u0002\u02f7\u02f9\u0003\u0002\u0002\u0002\u02f8",
    "\u02f6\u0003\u0002\u0002\u0002\u02f9\u02fc\u0005v<\u0002\u02fa\u02fc",
    "\u0007H\u0002\u0002\u02fb\u02f6\u0003\u0002\u0002\u0002\u02fb\u02fa",
    "\u0003\u0002\u0002\u0002\u02fcu\u0003\u0002\u0002\u0002\u02fd\u02fe",
    "\u0005\u00c6d\u0002\u02fe\u02ff\u0005x=\u0002\u02ff\u0300\u0007H\u0002",
    "\u0002\u0300\u0312\u0003\u0002\u0002\u0002\u0301\u0303\u0005\u0010\t",
    "\u0002\u0302\u0304\u0007H\u0002\u0002\u0303\u0302\u0003\u0002\u0002",
    "\u0002\u0303\u0304\u0003\u0002\u0002\u0002\u0304\u0312\u0003\u0002\u0002",
    "\u0002\u0305\u0307\u0005 \u0011\u0002\u0306\u0308\u0007H\u0002\u0002",
    "\u0307\u0306\u0003\u0002\u0002\u0002\u0307\u0308\u0003\u0002\u0002\u0002",
    "\u0308\u0312\u0003\u0002\u0002\u0002\u0309\u030b\u0005\u0018\r\u0002",
    "\u030a\u030c\u0007H\u0002\u0002\u030b\u030a\u0003\u0002\u0002\u0002",
    "\u030b\u030c\u0003\u0002\u0002\u0002\u030c\u0312\u0003\u0002\u0002\u0002",
    "\u030d\u030f\u0005p9\u0002\u030e\u0310\u0007H\u0002\u0002\u030f\u030e",
    "\u0003\u0002\u0002\u0002\u030f\u0310\u0003\u0002\u0002\u0002\u0310\u0312",
    "\u0003\u0002\u0002\u0002\u0311\u02fd\u0003\u0002\u0002\u0002\u0311\u0301",
    "\u0003\u0002\u0002\u0002\u0311\u0305\u0003\u0002\u0002\u0002\u0311\u0309",
    "\u0003\u0002\u0002\u0002\u0311\u030d\u0003\u0002\u0002\u0002\u0312w",
    "\u0003\u0002\u0002\u0002\u0313\u0316\u0005z>\u0002\u0314\u0316\u0005",
    "|?\u0002\u0315\u0313\u0003\u0002\u0002\u0002\u0315\u0314\u0003\u0002",
    "\u0002\u0002\u0316y\u0003\u0002\u0002\u0002\u0317\u0318\u0007t\u0002",
    "\u0002\u0318\u0319\u0007B\u0002\u0002\u0319\u031b\u0007C\u0002\u0002",
    "\u031a\u031c\u0005~@\u0002\u031b\u031a\u0003\u0002\u0002\u0002\u031b",
    "\u031c\u0003\u0002\u0002\u0002\u031c{\u0003\u0002\u0002\u0002\u031d",
    "\u031e\u0005F$\u0002\u031e}\u0003\u0002\u0002\u0002\u031f\u0320\u0007",
    "\u0011\u0002\u0002\u0320\u0321\u0005l7\u0002\u0321\u007f\u0003\u0002",
    "\u0002\u0002\u0322\u0323\u0007D\u0002\u0002\u0323\u0324\u0005\u0082",
    "B\u0002\u0324\u0325\u0007E\u0002\u0002\u0325\u0081\u0003\u0002\u0002",
    "\u0002\u0326\u0328\u0005\u0084C\u0002\u0327\u0326\u0003\u0002\u0002",
    "\u0002\u0328\u032b\u0003\u0002\u0002\u0002\u0329\u0327\u0003\u0002\u0002",
    "\u0002\u0329\u032a\u0003\u0002\u0002\u0002\u032a\u0083\u0003\u0002\u0002",
    "\u0002\u032b\u0329\u0003\u0002\u0002\u0002\u032c\u032d\u0005\u0086D",
    "\u0002\u032d\u032e\u0007H\u0002\u0002\u032e\u0332\u0003\u0002\u0002",
    "\u0002\u032f\u0332\u0005\u008aF\u0002\u0330\u0332\u0005\u0088E\u0002",
    "\u0331\u032c\u0003\u0002\u0002\u0002\u0331\u032f\u0003\u0002\u0002\u0002",
    "\u0331\u0330\u0003\u0002\u0002\u0002\u0332\u0085\u0003\u0002\u0002\u0002",
    "\u0333\u0335\u0005\u000e\b\u0002\u0334\u0333\u0003\u0002\u0002\u0002",
    "\u0335\u0338\u0003\u0002\u0002\u0002\u0336\u0334\u0003\u0002\u0002\u0002",
    "\u0336\u0337\u0003\u0002\u0002\u0002\u0337\u0339\u0003\u0002\u0002\u0002",
    "\u0338\u0336\u0003\u0002\u0002\u0002\u0339\u033a\u0005\u00c6d\u0002",
    "\u033a\u033b\u0005F$\u0002\u033b\u0087\u0003\u0002\u0002\u0002\u033c",
    "\u033e\u0005\f\u0007\u0002\u033d\u033c\u0003\u0002\u0002\u0002\u033e",
    "\u0341\u0003\u0002\u0002\u0002\u033f\u033d\u0003\u0002\u0002\u0002\u033f",
    "\u0340\u0003\u0002\u0002\u0002\u0340\u0344\u0003\u0002\u0002\u0002\u0341",
    "\u033f\u0003\u0002\u0002\u0002\u0342\u0345\u0005\u0010\t\u0002\u0343",
    "\u0345\u0005 \u0011\u0002\u0344\u0342\u0003\u0002\u0002\u0002\u0344",
    "\u0343\u0003\u0002\u0002\u0002\u0345\u0348\u0003\u0002\u0002\u0002\u0346",
    "\u0348\u0007H\u0002\u0002\u0347\u033f\u0003\u0002\u0002\u0002\u0347",
    "\u0346\u0003\u0002\u0002\u0002\u0348\u0089\u0003\u0002\u0002\u0002\u0349",
    "\u03b2\u0005\u0080A\u0002\u034a\u034b\u0007\u0007\u0002\u0002\u034b",
    "\u034e\u0005\u00a6T\u0002\u034c\u034d\u0007Q\u0002\u0002\u034d\u034f",
    "\u0005\u00a6T\u0002\u034e\u034c\u0003\u0002\u0002\u0002\u034e\u034f",
    "\u0003\u0002\u0002\u0002\u034f\u0350\u0003\u0002\u0002\u0002\u0350\u0351",
    "\u0007H\u0002\u0002\u0351\u03b2\u0003\u0002\u0002\u0002\u0352\u0353",
    "\u0007\u001b\u0002\u0002\u0353\u0354\u0005\u00a2R\u0002\u0354\u0357",
    "\u0005\u008aF\u0002\u0355\u0356\u0007\u0014\u0002\u0002\u0356\u0358",
    "\u0005\u008aF\u0002\u0357\u0355\u0003\u0002\u0002\u0002\u0357\u0358",
    "\u0003\u0002\u0002\u0002\u0358\u03b2\u0003\u0002\u0002\u0002\u0359\u035a",
    "\u0007\u001a\u0002\u0002\u035a\u035b\u0007B\u0002\u0002\u035b\u035c",
    "\u0005\u009cO\u0002\u035c\u035d\u0007C\u0002\u0002\u035d\u035e\u0005",
    "\u008aF\u0002\u035e\u03b2\u0003\u0002\u0002\u0002\u035f\u0360\u0007",
    "7\u0002\u0002\u0360\u0361\u0005\u00a2R\u0002\u0361\u0362\u0005\u008a",
    "F\u0002\u0362\u03b2\u0003\u0002\u0002\u0002\u0363\u0364\u0007\u0012",
    "\u0002\u0002\u0364\u0365\u0005\u008aF\u0002\u0365\u0366\u00077\u0002",
    "\u0002\u0366\u0367\u0005\u00a2R\u0002\u0367\u0368\u0007H\u0002\u0002",
    "\u0368\u03b2\u0003\u0002\u0002\u0002\u0369\u036a\u00074\u0002\u0002",
    "\u036a\u0374\u0005\u0080A\u0002\u036b\u036d\u0005\u008cG\u0002\u036c",
    "\u036b\u0003\u0002\u0002\u0002\u036d\u036e\u0003\u0002\u0002\u0002\u036e",
    "\u036c\u0003\u0002\u0002\u0002\u036e\u036f\u0003\u0002\u0002\u0002\u036f",
    "\u0371\u0003\u0002\u0002\u0002\u0370\u0372\u0005\u0090I\u0002\u0371",
    "\u0370\u0003\u0002\u0002\u0002\u0371\u0372\u0003\u0002\u0002\u0002\u0372",
    "\u0375\u0003\u0002\u0002\u0002\u0373\u0375\u0005\u0090I\u0002\u0374",
    "\u036c\u0003\u0002\u0002\u0002\u0374\u0373\u0003\u0002\u0002\u0002\u0375",
    "\u03b2\u0003\u0002\u0002\u0002\u0376\u0377\u00074\u0002\u0002\u0377",
    "\u0378\u0005\u0092J\u0002\u0378\u037c\u0005\u0080A\u0002\u0379\u037b",
    "\u0005\u008cG\u0002\u037a\u0379\u0003\u0002\u0002\u0002\u037b\u037e",
    "\u0003\u0002\u0002\u0002\u037c\u037a\u0003\u0002\u0002\u0002\u037c\u037d",
    "\u0003\u0002\u0002\u0002\u037d\u0380\u0003\u0002\u0002\u0002\u037e\u037c",
    "\u0003\u0002\u0002\u0002\u037f\u0381\u0005\u0090I\u0002\u0380\u037f",
    "\u0003\u0002\u0002\u0002\u0380\u0381\u0003\u0002\u0002\u0002\u0381\u03b2",
    "\u0003\u0002\u0002\u0002\u0382\u0383\u0007.\u0002\u0002\u0383\u0384",
    "\u0005\u00a2R\u0002\u0384\u0388\u0007D\u0002\u0002\u0385\u0387\u0005",
    "\u0098M\u0002\u0386\u0385\u0003\u0002\u0002\u0002\u0387\u038a\u0003",
    "\u0002\u0002\u0002\u0388\u0386\u0003\u0002\u0002\u0002\u0388\u0389\u0003",
    "\u0002\u0002\u0002\u0389\u038e\u0003\u0002\u0002\u0002\u038a\u0388\u0003",
    "\u0002\u0002\u0002\u038b\u038d\u0005\u009aN\u0002\u038c\u038b\u0003",
    "\u0002\u0002\u0002\u038d\u0390\u0003\u0002\u0002\u0002\u038e\u038c\u0003",
    "\u0002\u0002\u0002\u038e\u038f\u0003\u0002\u0002\u0002\u038f\u0391\u0003",
    "\u0002\u0002\u0002\u0390\u038e\u0003\u0002\u0002\u0002\u0391\u0392\u0007",
    "E\u0002\u0002\u0392\u03b2\u0003\u0002\u0002\u0002\u0393\u0394\u0007",
    "/\u0002\u0002\u0394\u0395\u0005\u00a2R\u0002\u0395\u0396\u0005\u0080",
    "A\u0002\u0396\u03b2\u0003\u0002\u0002\u0002\u0397\u0399\u0007)\u0002",
    "\u0002\u0398\u039a\u0005\u00a6T\u0002\u0399\u0398\u0003\u0002\u0002",
    "\u0002\u0399\u039a\u0003\u0002\u0002\u0002\u039a\u039b\u0003\u0002\u0002",
    "\u0002\u039b\u03b2\u0007H\u0002\u0002\u039c\u039d\u00071\u0002\u0002",
    "\u039d\u039e\u0005\u00a6T\u0002\u039e\u039f\u0007H\u0002\u0002\u039f",
    "\u03b2\u0003\u0002\u0002\u0002\u03a0\u03a2\u0007\t\u0002\u0002\u03a1",
    "\u03a3\u0007t\u0002\u0002\u03a2\u03a1\u0003\u0002\u0002\u0002\u03a2",
    "\u03a3\u0003\u0002\u0002\u0002\u03a3\u03a4\u0003\u0002\u0002\u0002\u03a4",
    "\u03b2\u0007H\u0002\u0002\u03a5\u03a7\u0007\u0010\u0002\u0002\u03a6",
    "\u03a8\u0007t\u0002\u0002\u03a7\u03a6\u0003\u0002\u0002\u0002\u03a7",
    "\u03a8\u0003\u0002\u0002\u0002\u03a8\u03a9\u0003\u0002\u0002\u0002\u03a9",
    "\u03b2\u0007H\u0002\u0002\u03aa\u03b2\u0007H\u0002\u0002\u03ab\u03ac",
    "\u0005\u00a6T\u0002\u03ac\u03ad\u0007H\u0002\u0002\u03ad\u03b2\u0003",
    "\u0002\u0002\u0002\u03ae\u03af\u0007t\u0002\u0002\u03af\u03b0\u0007",
    "Q\u0002\u0002\u03b0\u03b2\u0005\u008aF\u0002\u03b1\u0349\u0003\u0002",
    "\u0002\u0002\u03b1\u034a\u0003\u0002\u0002\u0002\u03b1\u0352\u0003\u0002",
    "\u0002\u0002\u03b1\u0359\u0003\u0002\u0002\u0002\u03b1\u035f\u0003\u0002",
    "\u0002\u0002\u03b1\u0363\u0003\u0002\u0002\u0002\u03b1\u0369\u0003\u0002",
    "\u0002\u0002\u03b1\u0376\u0003\u0002\u0002\u0002\u03b1\u0382\u0003\u0002",
    "\u0002\u0002\u03b1\u0393\u0003\u0002\u0002\u0002\u03b1\u0397\u0003\u0002",
    "\u0002\u0002\u03b1\u039c\u0003\u0002\u0002\u0002\u03b1\u03a0\u0003\u0002",
    "\u0002\u0002\u03b1\u03a5\u0003\u0002\u0002\u0002\u03b1\u03aa\u0003\u0002",
    "\u0002\u0002\u03b1\u03ab\u0003\u0002\u0002\u0002\u03b1\u03ae\u0003\u0002",
    "\u0002\u0002\u03b2\u008b\u0003\u0002\u0002\u0002\u03b3\u03b4\u0007\f",
    "\u0002\u0002\u03b4\u03b8\u0007B\u0002\u0002\u03b5\u03b7\u0005\u000e",
    "\b\u0002\u03b6\u03b5\u0003\u0002\u0002\u0002\u03b7\u03ba\u0003\u0002",
    "\u0002\u0002\u03b8\u03b6\u0003\u0002\u0002\u0002\u03b8\u03b9\u0003\u0002",
    "\u0002\u0002\u03b9\u03bb\u0003\u0002\u0002\u0002\u03ba\u03b8\u0003\u0002",
    "\u0002\u0002\u03bb\u03bc\u0005\u008eH\u0002\u03bc\u03bd\u0007t\u0002",
    "\u0002\u03bd\u03be\u0007C\u0002\u0002\u03be\u03bf\u0005\u0080A\u0002",
    "\u03bf\u008d\u0003\u0002\u0002\u0002\u03c0\u03c5\u0005^0\u0002\u03c1",
    "\u03c2\u0007_\u0002\u0002\u03c2\u03c4\u0005^0\u0002\u03c3\u03c1\u0003",
    "\u0002\u0002\u0002\u03c4\u03c7\u0003\u0002\u0002\u0002\u03c5\u03c3\u0003",
    "\u0002\u0002\u0002\u03c5\u03c6\u0003\u0002\u0002\u0002\u03c6\u008f\u0003",
    "\u0002\u0002\u0002\u03c7\u03c5\u0003\u0002\u0002\u0002\u03c8\u03c9\u0007",
    "\u0018\u0002\u0002\u03c9\u03ca\u0005\u0080A\u0002\u03ca\u0091\u0003",
    "\u0002\u0002\u0002\u03cb\u03cc\u0007B\u0002\u0002\u03cc\u03ce\u0005",
    "\u0094K\u0002\u03cd\u03cf\u0007H\u0002\u0002\u03ce\u03cd\u0003\u0002",
    "\u0002\u0002\u03ce\u03cf\u0003\u0002\u0002\u0002\u03cf\u03d0\u0003\u0002",
    "\u0002\u0002\u03d0\u03d1\u0007C\u0002\u0002\u03d1\u0093\u0003\u0002",
    "\u0002\u0002\u03d2\u03d7\u0005\u0096L\u0002\u03d3\u03d4\u0007H\u0002",
    "\u0002\u03d4\u03d6\u0005\u0096L\u0002\u03d5\u03d3\u0003\u0002\u0002",
    "\u0002\u03d6\u03d9\u0003\u0002\u0002\u0002\u03d7\u03d5\u0003\u0002\u0002",
    "\u0002\u03d7\u03d8\u0003\u0002\u0002\u0002\u03d8\u0095\u0003\u0002\u0002",
    "\u0002\u03d9\u03d7\u0003\u0002\u0002\u0002\u03da\u03dc\u0005\u000e\b",
    "\u0002\u03db\u03da\u0003\u0002\u0002\u0002\u03dc\u03df\u0003\u0002\u0002",
    "\u0002\u03dd\u03db\u0003\u0002\u0002\u0002\u03dd\u03de\u0003\u0002\u0002",
    "\u0002\u03de\u03e0\u0003\u0002\u0002\u0002\u03df\u03dd\u0003\u0002\u0002",
    "\u0002\u03e0\u03e1\u0005P)\u0002\u03e1\u03e2\u0005J&\u0002\u03e2\u03e3",
    "\u0007K\u0002\u0002\u03e3\u03e4\u0005\u00a6T\u0002\u03e4\u0097\u0003",
    "\u0002\u0002\u0002\u03e5\u03e7\u0005\u009aN\u0002\u03e6\u03e5\u0003",
    "\u0002\u0002\u0002\u03e7\u03e8\u0003\u0002\u0002\u0002\u03e8\u03e6\u0003",
    "\u0002\u0002\u0002\u03e8\u03e9\u0003\u0002\u0002\u0002\u03e9\u03eb\u0003",
    "\u0002\u0002\u0002\u03ea\u03ec\u0005\u0084C\u0002\u03eb\u03ea\u0003",
    "\u0002\u0002\u0002\u03ec\u03ed\u0003\u0002\u0002\u0002\u03ed\u03eb\u0003",
    "\u0002\u0002\u0002\u03ed\u03ee\u0003\u0002\u0002\u0002\u03ee\u0099\u0003",
    "\u0002\u0002\u0002\u03ef\u03f2\u0007\u000b\u0002\u0002\u03f0\u03f3\u0005",
    "\u00a6T\u0002\u03f1\u03f3\u0007t\u0002\u0002\u03f2\u03f0\u0003\u0002",
    "\u0002\u0002\u03f2\u03f1\u0003\u0002\u0002\u0002\u03f3\u03f4\u0003\u0002",
    "\u0002\u0002\u03f4\u03f8\u0007Q\u0002\u0002\u03f5\u03f6\u0007\u0011",
    "\u0002\u0002\u03f6\u03f8\u0007Q\u0002\u0002\u03f7\u03ef\u0003\u0002",
    "\u0002\u0002\u03f7\u03f5\u0003\u0002\u0002\u0002\u03f8\u009b\u0003\u0002",
    "\u0002\u0002\u03f9\u0406\u0005\u00a0Q\u0002\u03fa\u03fc\u0005\u009e",
    "P\u0002\u03fb\u03fa\u0003\u0002\u0002\u0002\u03fb\u03fc\u0003\u0002",
    "\u0002\u0002\u03fc\u03fd\u0003\u0002\u0002\u0002\u03fd\u03ff\u0007H",
    "\u0002\u0002\u03fe\u0400\u0005\u00a6T\u0002\u03ff\u03fe\u0003\u0002",
    "\u0002\u0002\u03ff\u0400\u0003\u0002\u0002\u0002\u0400\u0401\u0003\u0002",
    "\u0002\u0002\u0401\u0403\u0007H\u0002\u0002\u0402\u0404\u0005\u00a4",
    "S\u0002\u0403\u0402\u0003\u0002\u0002\u0002\u0403\u0404\u0003\u0002",
    "\u0002\u0002\u0404\u0406\u0003\u0002\u0002\u0002\u0405\u03f9\u0003\u0002",
    "\u0002\u0002\u0405\u03fb\u0003\u0002\u0002\u0002\u0406\u009d\u0003\u0002",
    "\u0002\u0002\u0407\u040a\u0005\u0086D\u0002\u0408\u040a\u0005\u00a4",
    "S\u0002\u0409\u0407\u0003\u0002\u0002\u0002\u0409\u0408\u0003\u0002",
    "\u0002\u0002\u040a\u009f\u0003\u0002\u0002\u0002\u040b\u040d\u0005\u000e",
    "\b\u0002\u040c\u040b\u0003\u0002\u0002\u0002\u040d\u0410\u0003\u0002",
    "\u0002\u0002\u040e\u040c\u0003\u0002\u0002\u0002\u040e\u040f\u0003\u0002",
    "\u0002\u0002\u040f\u0411\u0003\u0002\u0002\u0002\u0410\u040e\u0003\u0002",
    "\u0002\u0002\u0411\u0412\u0005\u00c6d\u0002\u0412\u0413\u0005J&\u0002",
    "\u0413\u0414\u0007Q\u0002\u0002\u0414\u0415\u0005\u00a6T\u0002\u0415",
    "\u00a1\u0003\u0002\u0002\u0002\u0416\u0417\u0007B\u0002\u0002\u0417",
    "\u0418\u0005\u00a6T\u0002\u0418\u0419\u0007C\u0002\u0002\u0419\u00a3",
    "\u0003\u0002\u0002\u0002\u041a\u041f\u0005\u00a6T\u0002\u041b\u041c",
    "\u0007I\u0002\u0002\u041c\u041e\u0005\u00a6T\u0002\u041d\u041b\u0003",
    "\u0002\u0002\u0002\u041e\u0421\u0003\u0002\u0002\u0002\u041f\u041d\u0003",
    "\u0002\u0002\u0002\u041f\u0420\u0003\u0002\u0002\u0002\u0420\u00a5\u0003",
    "\u0002\u0002\u0002\u0421\u041f\u0003\u0002\u0002\u0002\u0422\u0423\b",
    "T\u0001\u0002\u0423\u0441\u0005\u00aeX\u0002\u0424\u0425\u0007$\u0002",
    "\u0002\u0425\u0441\u0005\u00b2Z\u0002\u0426\u0427\u0007B\u0002\u0002",
    "\u0427\u0428\u0005\u00c6d\u0002\u0428\u0429\u0007C\u0002\u0002\u0429",
    "\u042a\u0005\u00a6T\u0017\u042a\u0441\u0003\u0002\u0002\u0002\u042b",
    "\u042c\t\u0005\u0002\u0002\u042c\u0441\u0005\u00a6T\u0015\u042d\u042e",
    "\t\u0006\u0002\u0002\u042e\u0441\u0005\u00a6T\u0014\u042f\u0441\u0005",
    "\u00a8U\u0002\u0430\u0431\u0005\u00c6d\u0002\u0431\u0437\u0007n\u0002",
    "\u0002\u0432\u0434\u0005\u00ccg\u0002\u0433\u0432\u0003\u0002\u0002",
    "\u0002\u0433\u0434\u0003\u0002\u0002\u0002\u0434\u0435\u0003\u0002\u0002",
    "\u0002\u0435\u0438\u0007t\u0002\u0002\u0436\u0438\u0007$\u0002\u0002",
    "\u0437\u0433\u0003\u0002\u0002\u0002\u0437\u0436\u0003\u0002\u0002\u0002",
    "\u0438\u0441\u0003\u0002\u0002\u0002\u0439\u043a\u0005\u00b0Y\u0002",
    "\u043a\u043c\u0007n\u0002\u0002\u043b\u043d\u0005\u00ccg\u0002\u043c",
    "\u043b\u0003\u0002\u0002\u0002\u043c\u043d\u0003\u0002\u0002\u0002\u043d",
    "\u043e\u0003\u0002\u0002\u0002\u043e\u043f\u0007$\u0002\u0002\u043f",
    "\u0441\u0003\u0002\u0002\u0002\u0440\u0422\u0003\u0002\u0002\u0002\u0440",
    "\u0424\u0003\u0002\u0002\u0002\u0440\u0426\u0003\u0002\u0002\u0002\u0440",
    "\u042b\u0003\u0002\u0002\u0002\u0440\u042d\u0003\u0002\u0002\u0002\u0440",
    "\u042f\u0003\u0002\u0002\u0002\u0440\u0430\u0003\u0002\u0002\u0002\u0440",
    "\u0439\u0003\u0002\u0002\u0002\u0441\u0497\u0003\u0002\u0002\u0002\u0442",
    "\u0443\f\u0013\u0002\u0002\u0443\u0444\t\u0007\u0002\u0002\u0444\u0496",
    "\u0005\u00a6T\u0014\u0445\u0446\f\u0012\u0002\u0002\u0446\u0447\t\b",
    "\u0002\u0002\u0447\u0496\u0005\u00a6T\u0013\u0448\u0450\f\u0011\u0002",
    "\u0002\u0449\u044a\u0007M\u0002\u0002\u044a\u0451\u0007M\u0002\u0002",
    "\u044b\u044c\u0007L\u0002\u0002\u044c\u044d\u0007L\u0002\u0002\u044d",
    "\u0451\u0007L\u0002\u0002\u044e\u044f\u0007L\u0002\u0002\u044f\u0451",
    "\u0007L\u0002\u0002\u0450\u0449\u0003\u0002\u0002\u0002\u0450\u044b",
    "\u0003\u0002\u0002\u0002\u0450\u044e\u0003\u0002\u0002\u0002\u0451\u0452",
    "\u0003\u0002\u0002\u0002\u0452\u0496\u0005\u00a6T\u0012\u0453\u0454",
    "\f\u0010\u0002\u0002\u0454\u0455\t\t\u0002\u0002\u0455\u0496\u0005\u00a6",
    "T\u0011\u0456\u0457\f\u000e\u0002\u0002\u0457\u0458\t\n\u0002\u0002",
    "\u0458\u0496\u0005\u00a6T\u000f\u0459\u045a\f\r\u0002\u0002\u045a\u045b",
    "\u0007^\u0002\u0002\u045b\u0496\u0005\u00a6T\u000e\u045c\u045d\f\f\u0002",
    "\u0002\u045d\u045e\u0007`\u0002\u0002\u045e\u0496\u0005\u00a6T\r\u045f",
    "\u0460\f\u000b\u0002\u0002\u0460\u0461\u0007_\u0002\u0002\u0461\u0496",
    "\u0005\u00a6T\f\u0462\u0463\f\n\u0002\u0002\u0463\u0464\u0007V\u0002",
    "\u0002\u0464\u0496\u0005\u00a6T\u000b\u0465\u0466\f\t\u0002\u0002\u0466",
    "\u0467\u0007W\u0002\u0002\u0467\u0496\u0005\u00a6T\n\u0468\u0469\f\b",
    "\u0002\u0002\u0469\u046a\u0007P\u0002\u0002\u046a\u046b\u0005\u00a6",
    "T\u0002\u046b\u046c\u0007Q\u0002\u0002\u046c\u046d\u0005\u00a6T\t\u046d",
    "\u0496\u0003\u0002\u0002\u0002\u046e\u046f\f\u0007\u0002\u0002\u046f",
    "\u0470\t\u000b\u0002\u0002\u0470\u0496\u0005\u00a6T\u0007\u0471\u0472",
    "\f\u001b\u0002\u0002\u0472\u047d\u0007J\u0002\u0002\u0473\u047e\u0007",
    "t\u0002\u0002\u0474\u047e\u00070\u0002\u0002\u0475\u0477\u0007$\u0002",
    "\u0002\u0476\u0478\u0005\u00c2b\u0002\u0477\u0476\u0003\u0002\u0002",
    "\u0002\u0477\u0478\u0003\u0002\u0002\u0002\u0478\u0479\u0003\u0002\u0002",
    "\u0002\u0479\u047e\u0005\u00b6\\\u0002\u047a\u047b\u0007-\u0002\u0002",
    "\u047b\u047e\u0005\u00ceh\u0002\u047c\u047e\u0005\u00bc_\u0002\u047d",
    "\u0473\u0003\u0002\u0002\u0002\u047d\u0474\u0003\u0002\u0002\u0002\u047d",
    "\u0475\u0003\u0002\u0002\u0002\u047d\u047a\u0003\u0002\u0002\u0002\u047d",
    "\u047c\u0003\u0002\u0002\u0002\u047e\u0496\u0003\u0002\u0002\u0002\u047f",
    "\u0480\f\u001a\u0002\u0002\u0480\u0481\u0007F\u0002\u0002\u0481\u0482",
    "\u0005\u00a6T\u0002\u0482\u0483\u0007G\u0002\u0002\u0483\u0496\u0003",
    "\u0002\u0002\u0002\u0484\u0485\f\u0019\u0002\u0002\u0485\u0487\u0007",
    "B\u0002\u0002\u0486\u0488\u0005\u00a4S\u0002\u0487\u0486\u0003\u0002",
    "\u0002\u0002\u0487\u0488\u0003\u0002\u0002\u0002\u0488\u0489\u0003\u0002",
    "\u0002\u0002\u0489\u0496\u0007C\u0002\u0002\u048a\u048b\f\u0016\u0002",
    "\u0002\u048b\u0496\t\f\u0002\u0002\u048c\u048d\f\u000f\u0002\u0002\u048d",
    "\u048e\u0007\u001f\u0002\u0002\u048e\u0496\u0005\u00c6d\u0002\u048f",
    "\u0490\f\u0005\u0002\u0002\u0490\u0492\u0007n\u0002\u0002\u0491\u0493",
    "\u0005\u00ccg\u0002\u0492\u0491\u0003\u0002\u0002\u0002\u0492\u0493",
    "\u0003\u0002\u0002\u0002\u0493\u0494\u0003\u0002\u0002\u0002\u0494\u0496",
    "\u0007t\u0002\u0002\u0495\u0442\u0003\u0002\u0002\u0002\u0495\u0445",
    "\u0003\u0002\u0002\u0002\u0495\u0448\u0003\u0002\u0002\u0002\u0495\u0453",
    "\u0003\u0002\u0002\u0002\u0495\u0456\u0003\u0002\u0002\u0002\u0495\u0459",
    "\u0003\u0002\u0002\u0002\u0495\u045c\u0003\u0002\u0002\u0002\u0495\u045f",
    "\u0003\u0002\u0002\u0002\u0495\u0462\u0003\u0002\u0002\u0002\u0495\u0465",
    "\u0003\u0002\u0002\u0002\u0495\u0468\u0003\u0002\u0002\u0002\u0495\u046e",
    "\u0003\u0002\u0002\u0002\u0495\u0471\u0003\u0002\u0002\u0002\u0495\u047f",
    "\u0003\u0002\u0002\u0002\u0495\u0484\u0003\u0002\u0002\u0002\u0495\u048a",
    "\u0003\u0002\u0002\u0002\u0495\u048c\u0003\u0002\u0002\u0002\u0495\u048f",
    "\u0003\u0002\u0002\u0002\u0496\u0499\u0003\u0002\u0002\u0002\u0497\u0495",
    "\u0003\u0002\u0002\u0002\u0497\u0498\u0003\u0002\u0002\u0002\u0498\u00a7",
    "\u0003\u0002\u0002\u0002\u0499\u0497\u0003\u0002\u0002\u0002\u049a\u049b",
    "\u0005\u00aaV\u0002\u049b\u049c\u0007m\u0002\u0002\u049c\u049d\u0005",
    "\u00acW\u0002\u049d\u00a9\u0003\u0002\u0002\u0002\u049e\u04af\u0007",
    "t\u0002\u0002\u049f\u04a1\u0007B\u0002\u0002\u04a0\u04a2\u0005X-\u0002",
    "\u04a1\u04a0\u0003\u0002\u0002\u0002\u04a1\u04a2\u0003\u0002\u0002\u0002",
    "\u04a2\u04a3\u0003\u0002\u0002\u0002\u04a3\u04af\u0007C\u0002\u0002",
    "\u04a4\u04a5\u0007B\u0002\u0002\u04a5\u04aa\u0007t\u0002\u0002\u04a6",
    "\u04a7\u0007I\u0002\u0002\u04a7\u04a9\u0007t\u0002\u0002\u04a8\u04a6",
    "\u0003\u0002\u0002\u0002\u04a9\u04ac\u0003\u0002\u0002\u0002\u04aa\u04a8",
    "\u0003\u0002\u0002\u0002\u04aa\u04ab\u0003\u0002\u0002\u0002\u04ab\u04ad",
    "\u0003\u0002\u0002\u0002\u04ac\u04aa\u0003\u0002\u0002\u0002\u04ad\u04af",
    "\u0007C\u0002\u0002\u04ae\u049e\u0003\u0002\u0002\u0002\u04ae\u049f",
    "\u0003\u0002\u0002\u0002\u04ae\u04a4\u0003\u0002\u0002\u0002\u04af\u00ab",
    "\u0003\u0002\u0002\u0002\u04b0\u04b3\u0005\u00a6T\u0002\u04b1\u04b3",
    "\u0005\u0080A\u0002\u04b2\u04b0\u0003\u0002\u0002\u0002\u04b2\u04b1",
    "\u0003\u0002\u0002\u0002\u04b3\u00ad\u0003\u0002\u0002\u0002\u04b4\u04b5",
    "\u0007B\u0002\u0002\u04b5\u04b6\u0005\u00a6T\u0002\u04b6\u04b7\u0007",
    "C\u0002\u0002\u04b7\u04c9\u0003\u0002\u0002\u0002\u04b8\u04c9\u0007",
    "0\u0002\u0002\u04b9\u04c9\u0007-\u0002\u0002\u04ba\u04c9\u0005`1\u0002",
    "\u04bb\u04c9\u0007t\u0002\u0002\u04bc\u04bd\u0007P\u0002\u0002\u04bd",
    "\u04c9\u0007t\u0002\u0002\u04be\u04bf\u0005.\u0018\u0002\u04bf\u04c0",
    "\u0007J\u0002\u0002\u04c0\u04c1\u0007\u000e\u0002\u0002\u04c1\u04c9",
    "\u0003\u0002\u0002\u0002\u04c2\u04c6\u0005\u00c2b\u0002\u04c3\u04c7",
    "\u0005\u00d0i\u0002\u04c4\u04c5\u00070\u0002\u0002\u04c5\u04c7\u0005",
    "\u00d2j\u0002\u04c6\u04c3\u0003\u0002\u0002\u0002\u04c6\u04c4\u0003",
    "\u0002\u0002\u0002\u04c7\u04c9\u0003\u0002\u0002\u0002\u04c8\u04b4\u0003",
    "\u0002\u0002\u0002\u04c8\u04b8\u0003\u0002\u0002\u0002\u04c8\u04b9\u0003",
    "\u0002\u0002\u0002\u04c8\u04ba\u0003\u0002\u0002\u0002\u04c8\u04bb\u0003",
    "\u0002\u0002\u0002\u04c8\u04bc\u0003\u0002\u0002\u0002\u04c8\u04be\u0003",
    "\u0002\u0002\u0002\u04c8\u04c2\u0003\u0002\u0002\u0002\u04c9\u00af\u0003",
    "\u0002\u0002\u0002\u04ca\u04cb\u0005P)\u0002\u04cb\u04cc\u0007J\u0002",
    "\u0002\u04cc\u04ce\u0003\u0002\u0002\u0002\u04cd\u04ca\u0003\u0002\u0002",
    "\u0002\u04cd\u04ce\u0003\u0002\u0002\u0002\u04ce\u04d2\u0003\u0002\u0002",
    "\u0002\u04cf\u04d1\u0005f4\u0002\u04d0\u04cf\u0003\u0002\u0002\u0002",
    "\u04d1\u04d4\u0003\u0002\u0002\u0002\u04d2\u04d0\u0003\u0002\u0002\u0002",
    "\u04d2\u04d3\u0003\u0002\u0002\u0002\u04d3\u04d5\u0003\u0002\u0002\u0002",
    "\u04d4\u04d2\u0003\u0002\u0002\u0002\u04d5\u04d7\u0007t\u0002\u0002",
    "\u04d6\u04d8\u0005\u00ccg\u0002\u04d7\u04d6\u0003\u0002\u0002\u0002",
    "\u04d7\u04d8\u0003\u0002\u0002\u0002\u04d8\u00b1\u0003\u0002\u0002\u0002",
    "\u04d9\u04da\u0005\u00c2b\u0002\u04da\u04db\u0005\u00b4[\u0002\u04db",
    "\u04dc\u0005\u00ba^\u0002\u04dc\u04e3\u0003\u0002\u0002\u0002\u04dd",
    "\u04e0\u0005\u00b4[\u0002\u04de\u04e1\u0005\u00b8]\u0002\u04df\u04e1",
    "\u0005\u00ba^\u0002\u04e0\u04de\u0003\u0002\u0002\u0002\u04e0\u04df",
    "\u0003\u0002\u0002\u0002\u04e1\u04e3\u0003\u0002\u0002\u0002\u04e2\u04d9",
    "\u0003\u0002\u0002\u0002\u04e2\u04dd\u0003\u0002\u0002\u0002\u04e3\u00b3",
    "\u0003\u0002\u0002\u0002\u04e4\u04e6\u0007t\u0002\u0002\u04e5\u04e7",
    "\u0005\u00be`\u0002\u04e6\u04e5\u0003\u0002\u0002\u0002\u04e6\u04e7",
    "\u0003\u0002\u0002\u0002\u04e7\u04ef\u0003\u0002\u0002\u0002\u04e8\u04e9",
    "\u0007J\u0002\u0002\u04e9\u04eb\u0007t\u0002\u0002\u04ea\u04ec\u0005",
    "\u00be`\u0002\u04eb\u04ea\u0003\u0002\u0002\u0002\u04eb\u04ec\u0003",
    "\u0002\u0002\u0002\u04ec\u04ee\u0003\u0002\u0002\u0002\u04ed\u04e8\u0003",
    "\u0002\u0002\u0002\u04ee\u04f1\u0003\u0002\u0002\u0002\u04ef\u04ed\u0003",
    "\u0002\u0002\u0002\u04ef\u04f0\u0003\u0002\u0002\u0002\u04f0\u04f4\u0003",
    "\u0002\u0002\u0002\u04f1\u04ef\u0003\u0002\u0002\u0002\u04f2\u04f4\u0005",
    "\u00c8e\u0002\u04f3\u04e4\u0003\u0002\u0002\u0002\u04f3\u04f2\u0003",
    "\u0002\u0002\u0002\u04f4\u00b5\u0003\u0002\u0002\u0002\u04f5\u04f7\u0007",
    "t\u0002\u0002\u04f6\u04f8\u0005\u00c0a\u0002\u04f7\u04f6\u0003\u0002",
    "\u0002\u0002\u04f7\u04f8\u0003\u0002\u0002\u0002\u04f8\u04f9\u0003\u0002",
    "\u0002\u0002\u04f9\u04fa\u0005\u00ba^\u0002\u04fa\u00b7\u0003\u0002",
    "\u0002\u0002\u04fb\u0517\u0007F\u0002\u0002\u04fc\u0501\u0007G\u0002",
    "\u0002\u04fd\u04fe\u0007F\u0002\u0002\u04fe\u0500\u0007G\u0002\u0002",
    "\u04ff\u04fd\u0003\u0002\u0002\u0002\u0500\u0503\u0003\u0002\u0002\u0002",
    "\u0501\u04ff\u0003\u0002\u0002\u0002\u0501\u0502\u0003\u0002\u0002\u0002",
    "\u0502\u0504\u0003\u0002\u0002\u0002\u0503\u0501\u0003\u0002\u0002\u0002",
    "\u0504\u0518\u0005N(\u0002\u0505\u0506\u0005\u00a6T\u0002\u0506\u050d",
    "\u0007G\u0002\u0002\u0507\u0508\u0007F\u0002\u0002\u0508\u0509\u0005",
    "\u00a6T\u0002\u0509\u050a\u0007G\u0002\u0002\u050a\u050c\u0003\u0002",
    "\u0002\u0002\u050b\u0507\u0003\u0002\u0002\u0002\u050c\u050f\u0003\u0002",
    "\u0002\u0002\u050d\u050b\u0003\u0002\u0002\u0002\u050d\u050e\u0003\u0002",
    "\u0002\u0002\u050e\u0514\u0003\u0002\u0002\u0002\u050f\u050d\u0003\u0002",
    "\u0002\u0002\u0510\u0511\u0007F\u0002\u0002\u0511\u0513\u0007G\u0002",
    "\u0002\u0512\u0510\u0003\u0002\u0002\u0002\u0513\u0516\u0003\u0002\u0002",
    "\u0002\u0514\u0512\u0003\u0002\u0002\u0002\u0514\u0515\u0003\u0002\u0002",
    "\u0002\u0515\u0518\u0003\u0002\u0002\u0002\u0516\u0514\u0003\u0002\u0002",
    "\u0002\u0517\u04fc\u0003\u0002\u0002\u0002\u0517\u0505\u0003\u0002\u0002",
    "\u0002\u0518\u00b9\u0003\u0002\u0002\u0002\u0519\u051b\u0005\u00d2j",
    "\u0002\u051a\u051c\u0005\"\u0012\u0002\u051b\u051a\u0003\u0002\u0002",
    "\u0002\u051b\u051c\u0003\u0002\u0002\u0002\u051c\u00bb\u0003\u0002\u0002",
    "\u0002\u051d\u051e\u0005\u00c2b\u0002\u051e\u051f\u0005\u00d0i\u0002",
    "\u051f\u00bd\u0003\u0002\u0002\u0002\u0520\u0521\u0007M\u0002\u0002",
    "\u0521\u0524\u0007L\u0002\u0002\u0522\u0524\u0005\u00ccg\u0002\u0523",
    "\u0520\u0003\u0002\u0002\u0002\u0523\u0522\u0003\u0002\u0002\u0002\u0524",
    "\u00bf\u0003\u0002\u0002\u0002\u0525\u0526\u0007M\u0002\u0002\u0526",
    "\u0529\u0007L\u0002\u0002\u0527\u0529\u0005\u00c2b\u0002\u0528\u0525",
    "\u0003\u0002\u0002\u0002\u0528\u0527\u0003\u0002\u0002\u0002\u0529\u00c1",
    "\u0003\u0002\u0002\u0002\u052a\u052b\u0007M\u0002\u0002\u052b\u052c",
    "\u0005\u00c4c\u0002\u052c\u052d\u0007L\u0002\u0002\u052d\u00c3\u0003",
    "\u0002\u0002\u0002\u052e\u0533\u0005\u00c6d\u0002\u052f\u0530\u0007",
    "I\u0002\u0002\u0530\u0532\u0005\u00c6d\u0002\u0531\u052f\u0003\u0002",
    "\u0002\u0002\u0532\u0535\u0003\u0002\u0002\u0002\u0533\u0531\u0003\u0002",
    "\u0002\u0002\u0533\u0534\u0003\u0002\u0002\u0002\u0534\u00c5\u0003\u0002",
    "\u0002\u0002\u0535\u0533\u0003\u0002\u0002\u0002\u0536\u0538\u0005f",
    "4\u0002\u0537\u0536\u0003\u0002\u0002\u0002\u0537\u0538\u0003\u0002",
    "\u0002\u0002\u0538\u053d\u0003\u0002\u0002\u0002\u0539\u053e\u0005\u00d4",
    "k\u0002\u053a\u053e\u0005P)\u0002\u053b\u053e\u0005\u00c8e\u0002\u053c",
    "\u053e\u0005\u00caf\u0002\u053d\u0539\u0003\u0002\u0002\u0002\u053d",
    "\u053a\u0003\u0002\u0002\u0002\u053d\u053b\u0003\u0002\u0002\u0002\u053d",
    "\u053c\u0003\u0002\u0002\u0002\u053e\u0543\u0003\u0002\u0002\u0002\u053f",
    "\u0540\u0007F\u0002\u0002\u0540\u0542\u0007G\u0002\u0002\u0541\u053f",
    "\u0003\u0002\u0002\u0002\u0542\u0545\u0003\u0002\u0002\u0002\u0543\u0541",
    "\u0003\u0002\u0002\u0002\u0543\u0544\u0003\u0002\u0002\u0002\u0544\u00c7",
    "\u0003\u0002\u0002\u0002\u0545\u0543\u0003\u0002\u0002\u0002\u0546\u0547",
    "\t\r\u0002\u0002\u0547\u00c9\u0003\u0002\u0002\u0002\u0548\u0549\t\u000e",
    "\u0002\u0002\u0549\u00cb\u0003\u0002\u0002\u0002\u054a\u054b\u0007M",
    "\u0002\u0002\u054b\u0550\u0005R*\u0002\u054c\u054d\u0007I\u0002\u0002",
    "\u054d\u054f\u0005R*\u0002\u054e\u054c\u0003\u0002\u0002\u0002\u054f",
    "\u0552\u0003\u0002\u0002\u0002\u0550\u054e\u0003\u0002\u0002\u0002\u0550",
    "\u0551\u0003\u0002\u0002\u0002\u0551\u0553\u0003\u0002\u0002\u0002\u0552",
    "\u0550\u0003\u0002\u0002\u0002\u0553\u0554\u0007L\u0002\u0002\u0554",
    "\u00cd\u0003\u0002\u0002\u0002\u0555\u055c\u0005\u00d2j\u0002\u0556",
    "\u0557\u0007J\u0002\u0002\u0557\u0559\u0007t\u0002\u0002\u0558\u055a",
    "\u0005\u00d2j\u0002\u0559\u0558\u0003\u0002\u0002\u0002\u0559\u055a",
    "\u0003\u0002\u0002\u0002\u055a\u055c\u0003\u0002\u0002\u0002\u055b\u0555",
    "\u0003\u0002\u0002\u0002\u055b\u0556\u0003\u0002\u0002\u0002\u055c\u00cf",
    "\u0003\u0002\u0002\u0002\u055d\u055e\u0007-\u0002\u0002\u055e\u0562",
    "\u0005\u00ceh\u0002\u055f\u0560\u0007t\u0002\u0002\u0560\u0562\u0005",
    "\u00d2j\u0002\u0561\u055d\u0003\u0002\u0002\u0002\u0561\u055f\u0003",
    "\u0002\u0002\u0002\u0562\u00d1\u0003\u0002\u0002\u0002\u0563\u0565\u0007",
    "B\u0002\u0002\u0564\u0566\u0005\u00a4S\u0002\u0565\u0564\u0003\u0002",
    "\u0002\u0002\u0565\u0566\u0003\u0002\u0002\u0002\u0566\u0567\u0003\u0002",
    "\u0002\u0002\u0567\u0568\u0007C\u0002\u0002\u0568\u00d3\u0003\u0002",
    "\u0002\u0002\u0569\u056a\u0007K\u0002\u0002\u056a\u056f\u0007t\u0002",
    "\u0002\u056b\u056c\u0007K\u0002\u0002\u056c\u056d\u0007P\u0002\u0002",
    "\u056d\u056f\u0007t\u0002\u0002\u056e\u0569\u0003\u0002\u0002\u0002",
    "\u056e\u056b\u0003\u0002\u0002\u0002\u056f\u00d5\u0003\u0002\u0002\u0002",
    "\u00ac\u00d7\u00dc\u00e2\u00ea\u00f3\u00f8\u00ff\u0106\u0109\u0110\u011a",
    "\u011e\u0123\u0127\u012b\u0135\u013d\u0143\u014a\u0151\u0155\u0158\u015b",
    "\u0164\u016a\u016f\u0172\u0178\u017e\u0182\u018a\u0193\u019a\u01a0\u01a4",
    "\u01af\u01b8\u01bd\u01c3\u01c7\u01d3\u01de\u01e3\u01ec\u01f4\u01fe\u0207",
    "\u020f\u0214\u021c\u0221\u022b\u0235\u023b\u0240\u0246\u024b\u0253\u0257",
    "\u0259\u025f\u0264\u0268\u026f\u0271\u0278\u027d\u0286\u028b\u028e\u0293",
    "\u029c\u02a8\u02b4\u02bf\u02c2\u02c9\u02d3\u02db\u02de\u02e1\u02ee\u02f6",
    "\u02fb\u0303\u0307\u030b\u030f\u0311\u0315\u031b\u0329\u0331\u0336\u033f",
    "\u0344\u0347\u034e\u0357\u036e\u0371\u0374\u037c\u0380\u0388\u038e\u0399",
    "\u03a2\u03a7\u03b1\u03b8\u03c5\u03ce\u03d7\u03dd\u03e8\u03ed\u03f2\u03f7",
    "\u03fb\u03ff\u0403\u0405\u0409\u040e\u041f\u0433\u0437\u043c\u0440\u0450",
    "\u0477\u047d\u0487\u0492\u0495\u0497\u04a1\u04aa\u04ae\u04b2\u04c6\u04c8",
    "\u04cd\u04d2\u04d7\u04e0\u04e2\u04e6\u04eb\u04ef\u04f3\u04f7\u0501\u050d",
    "\u0514\u0517\u051b\u0523\u0528\u0533\u0537\u053d\u0543\u0550\u0559\u055b",
    "\u0561\u0565\u056e"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ null, "'?primitive'", "'?numeric'", "'?='", "'abstract'", 
                     "'assert'", "'boolean'", "'break'", "'byte'", "'case'", 
                     "'catch'", "'char'", "'class'", "'const'", "'continue'", 
                     "'default'", "'do'", "'double'", "'else'", "'enum'", 
                     "'extends'", "'final'", "'finally'", "'float'", "'for'", 
                     "'if'", "'goto'", "'implements'", "'import'", "'instanceof'", 
                     "'int'", "'interface'", "'long'", "'native'", "'new'", 
                     "'package'", "'private'", "'protected'", "'public'", 
                     "'return'", "'short'", "'static'", "'strictfp'", "'super'", 
                     "'switch'", "'synchronized'", "'this'", "'throw'", 
                     "'throws'", "'transient'", "'try'", "'void'", "'volatile'", 
                     "'while'", null, null, null, null, null, null, null, 
                     null, null, "'null'", "'('", "')'", "'{'", "'}'", "'['", 
                     "']'", "';'", "','", "'.'", "'='", "'>'", "'<'", "'!'", 
                     "'~'", "'?'", "':'", "'=='", "'<='", "'>='", "'!='", 
                     "'&&'", "'||'", "'++'", "'--'", "'+'", "'-'", "'*'", 
                     "'/'", "'&'", "'|'", "'^'", "'%'", "'+='", "'-='", 
                     "'*='", "'/='", "'&='", "'|='", "'^='", "'%='", "'<<='", 
                     "'>>='", "'>>>='", "'->'", "'::'", "'@'", "'...'" ];

var symbolicNames = [ null, "RANDOM_PRIMITIVE", "RANDOM_NUMERIC", "RANDOM_ASSIGN", 
                      "ABSTRACT", "ASSERT", "BOOLEAN", "BREAK", "BYTE", 
                      "CASE", "CATCH", "CHAR", "CLASS", "CONST", "CONTINUE", 
                      "DEFAULT", "DO", "DOUBLE", "ELSE", "ENUM", "EXTENDS", 
                      "FINAL", "FINALLY", "FLOAT", "FOR", "IF", "GOTO", 
                      "IMPLEMENTS", "IMPORT", "INSTANCEOF", "INT", "INTERFACE", 
                      "LONG", "NATIVE", "NEW", "PACKAGE", "PRIVATE", "PROTECTED", 
                      "PUBLIC", "RETURN", "SHORT", "STATIC", "STRICTFP", 
                      "SUPER", "SWITCH", "SYNCHRONIZED", "THIS", "THROW", 
                      "THROWS", "TRANSIENT", "TRY", "VOID", "VOLATILE", 
                      "WHILE", "DECIMAL_LITERAL", "HEX_LITERAL", "OCT_LITERAL", 
                      "BINARY_LITERAL", "FLOAT_LITERAL", "HEX_FLOAT_LITERAL", 
                      "BOOL_LITERAL", "CHAR_LITERAL", "STRING_LITERAL", 
                      "NULL_LITERAL", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
                      "LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", "ASSIGN", 
                      "GT", "LT", "BANG", "TILDE", "QUESTION", "COLON", 
                      "EQUAL", "LE", "GE", "NOTEQUAL", "AND", "OR", "INC", 
                      "DEC", "ADD", "SUB", "MUL", "DIV", "BITAND", "BITOR", 
                      "CARET", "MOD", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", 
                      "DIV_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", 
                      "MOD_ASSIGN", "LSHIFT_ASSIGN", "RSHIFT_ASSIGN", "URSHIFT_ASSIGN", 
                      "ARROW", "COLONCOLON", "AT", "ELLIPSIS", "WS", "COMMENT", 
                      "LINE_COMMENT", "IDENTIFIER" ];

var ruleNames =  [ "compilationUnit", "packageDeclaration", "importDeclaration", 
                   "typeDeclaration", "modifier", "classOrInterfaceModifier", 
                   "variableModifier", "classDeclaration", "typeParameters", 
                   "typeParameter", "typeBound", "enumDeclaration", "enumConstants", 
                   "enumConstant", "enumBodyDeclarations", "interfaceDeclaration", 
                   "classBody", "interfaceBody", "classBodyDeclaration", 
                   "memberDeclaration", "methodDeclaration", "methodBody", 
                   "typeTypeOrVoid", "genericMethodDeclaration", "genericConstructorDeclaration", 
                   "constructorDeclaration", "fieldDeclaration", "interfaceBodyDeclaration", 
                   "interfaceMemberDeclaration", "constDeclaration", "constantDeclarator", 
                   "interfaceMethodDeclaration", "interfaceMethodModifier", 
                   "genericInterfaceMethodDeclaration", "variableDeclarators", 
                   "variableDeclarator", "variableDeclaratorId", "variableInitializer", 
                   "arrayInitializer", "classOrInterfaceType", "typeArgument", 
                   "qualifiedNameList", "formalParameters", "formalParameterList", 
                   "formalParameter", "lastFormalParameter", "qualifiedName", 
                   "literal", "integerLiteral", "floatLiteral", "annotation", 
                   "elementValuePairs", "elementValuePair", "elementValue", 
                   "elementValueArrayInitializer", "annotationTypeDeclaration", 
                   "annotationTypeBody", "annotationTypeElementDeclaration", 
                   "annotationTypeElementRest", "annotationMethodOrConstantRest", 
                   "annotationMethodRest", "annotationConstantRest", "defaultValue", 
                   "block", "blockStatements", "blockStatement", "localVariableDeclaration", 
                   "localTypeDeclaration", "statement", "catchClause", "catchType", 
                   "finallyBlock", "resourceSpecification", "resources", 
                   "resource", "switchBlockStatementGroup", "switchLabel", 
                   "forControl", "forInit", "enhancedForControl", "parExpression", 
                   "expressionList", "expression", "lambdaExpression", "lambdaParameters", 
                   "lambdaBody", "primary", "classType", "creator", "createdName", 
                   "innerCreator", "arrayCreatorRest", "classCreatorRest", 
                   "explicitGenericInvocation", "typeArgumentsOrDiamond", 
                   "nonWildcardTypeArgumentsOrDiamond", "nonWildcardTypeArguments", 
                   "typeList", "typeType", "primitiveType", "fuzzyPrimitiveType", 
                   "typeArguments", "superSuffix", "explicitGenericInvocationSuffix", 
                   "arguments", "backReferenceType" ];

function FuzzyJavaParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

FuzzyJavaParser.prototype = Object.create(antlr4.Parser.prototype);
FuzzyJavaParser.prototype.constructor = FuzzyJavaParser;

Object.defineProperty(FuzzyJavaParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

FuzzyJavaParser.EOF = antlr4.Token.EOF;
FuzzyJavaParser.RANDOM_PRIMITIVE = 1;
FuzzyJavaParser.RANDOM_NUMERIC = 2;
FuzzyJavaParser.RANDOM_ASSIGN = 3;
FuzzyJavaParser.ABSTRACT = 4;
FuzzyJavaParser.ASSERT = 5;
FuzzyJavaParser.BOOLEAN = 6;
FuzzyJavaParser.BREAK = 7;
FuzzyJavaParser.BYTE = 8;
FuzzyJavaParser.CASE = 9;
FuzzyJavaParser.CATCH = 10;
FuzzyJavaParser.CHAR = 11;
FuzzyJavaParser.CLASS = 12;
FuzzyJavaParser.CONST = 13;
FuzzyJavaParser.CONTINUE = 14;
FuzzyJavaParser.DEFAULT = 15;
FuzzyJavaParser.DO = 16;
FuzzyJavaParser.DOUBLE = 17;
FuzzyJavaParser.ELSE = 18;
FuzzyJavaParser.ENUM = 19;
FuzzyJavaParser.EXTENDS = 20;
FuzzyJavaParser.FINAL = 21;
FuzzyJavaParser.FINALLY = 22;
FuzzyJavaParser.FLOAT = 23;
FuzzyJavaParser.FOR = 24;
FuzzyJavaParser.IF = 25;
FuzzyJavaParser.GOTO = 26;
FuzzyJavaParser.IMPLEMENTS = 27;
FuzzyJavaParser.IMPORT = 28;
FuzzyJavaParser.INSTANCEOF = 29;
FuzzyJavaParser.INT = 30;
FuzzyJavaParser.INTERFACE = 31;
FuzzyJavaParser.LONG = 32;
FuzzyJavaParser.NATIVE = 33;
FuzzyJavaParser.NEW = 34;
FuzzyJavaParser.PACKAGE = 35;
FuzzyJavaParser.PRIVATE = 36;
FuzzyJavaParser.PROTECTED = 37;
FuzzyJavaParser.PUBLIC = 38;
FuzzyJavaParser.RETURN = 39;
FuzzyJavaParser.SHORT = 40;
FuzzyJavaParser.STATIC = 41;
FuzzyJavaParser.STRICTFP = 42;
FuzzyJavaParser.SUPER = 43;
FuzzyJavaParser.SWITCH = 44;
FuzzyJavaParser.SYNCHRONIZED = 45;
FuzzyJavaParser.THIS = 46;
FuzzyJavaParser.THROW = 47;
FuzzyJavaParser.THROWS = 48;
FuzzyJavaParser.TRANSIENT = 49;
FuzzyJavaParser.TRY = 50;
FuzzyJavaParser.VOID = 51;
FuzzyJavaParser.VOLATILE = 52;
FuzzyJavaParser.WHILE = 53;
FuzzyJavaParser.DECIMAL_LITERAL = 54;
FuzzyJavaParser.HEX_LITERAL = 55;
FuzzyJavaParser.OCT_LITERAL = 56;
FuzzyJavaParser.BINARY_LITERAL = 57;
FuzzyJavaParser.FLOAT_LITERAL = 58;
FuzzyJavaParser.HEX_FLOAT_LITERAL = 59;
FuzzyJavaParser.BOOL_LITERAL = 60;
FuzzyJavaParser.CHAR_LITERAL = 61;
FuzzyJavaParser.STRING_LITERAL = 62;
FuzzyJavaParser.NULL_LITERAL = 63;
FuzzyJavaParser.LPAREN = 64;
FuzzyJavaParser.RPAREN = 65;
FuzzyJavaParser.LBRACE = 66;
FuzzyJavaParser.RBRACE = 67;
FuzzyJavaParser.LBRACK = 68;
FuzzyJavaParser.RBRACK = 69;
FuzzyJavaParser.SEMI = 70;
FuzzyJavaParser.COMMA = 71;
FuzzyJavaParser.DOT = 72;
FuzzyJavaParser.ASSIGN = 73;
FuzzyJavaParser.GT = 74;
FuzzyJavaParser.LT = 75;
FuzzyJavaParser.BANG = 76;
FuzzyJavaParser.TILDE = 77;
FuzzyJavaParser.QUESTION = 78;
FuzzyJavaParser.COLON = 79;
FuzzyJavaParser.EQUAL = 80;
FuzzyJavaParser.LE = 81;
FuzzyJavaParser.GE = 82;
FuzzyJavaParser.NOTEQUAL = 83;
FuzzyJavaParser.AND = 84;
FuzzyJavaParser.OR = 85;
FuzzyJavaParser.INC = 86;
FuzzyJavaParser.DEC = 87;
FuzzyJavaParser.ADD = 88;
FuzzyJavaParser.SUB = 89;
FuzzyJavaParser.MUL = 90;
FuzzyJavaParser.DIV = 91;
FuzzyJavaParser.BITAND = 92;
FuzzyJavaParser.BITOR = 93;
FuzzyJavaParser.CARET = 94;
FuzzyJavaParser.MOD = 95;
FuzzyJavaParser.ADD_ASSIGN = 96;
FuzzyJavaParser.SUB_ASSIGN = 97;
FuzzyJavaParser.MUL_ASSIGN = 98;
FuzzyJavaParser.DIV_ASSIGN = 99;
FuzzyJavaParser.AND_ASSIGN = 100;
FuzzyJavaParser.OR_ASSIGN = 101;
FuzzyJavaParser.XOR_ASSIGN = 102;
FuzzyJavaParser.MOD_ASSIGN = 103;
FuzzyJavaParser.LSHIFT_ASSIGN = 104;
FuzzyJavaParser.RSHIFT_ASSIGN = 105;
FuzzyJavaParser.URSHIFT_ASSIGN = 106;
FuzzyJavaParser.ARROW = 107;
FuzzyJavaParser.COLONCOLON = 108;
FuzzyJavaParser.AT = 109;
FuzzyJavaParser.ELLIPSIS = 110;
FuzzyJavaParser.WS = 111;
FuzzyJavaParser.COMMENT = 112;
FuzzyJavaParser.LINE_COMMENT = 113;
FuzzyJavaParser.IDENTIFIER = 114;

FuzzyJavaParser.RULE_compilationUnit = 0;
FuzzyJavaParser.RULE_packageDeclaration = 1;
FuzzyJavaParser.RULE_importDeclaration = 2;
FuzzyJavaParser.RULE_typeDeclaration = 3;
FuzzyJavaParser.RULE_modifier = 4;
FuzzyJavaParser.RULE_classOrInterfaceModifier = 5;
FuzzyJavaParser.RULE_variableModifier = 6;
FuzzyJavaParser.RULE_classDeclaration = 7;
FuzzyJavaParser.RULE_typeParameters = 8;
FuzzyJavaParser.RULE_typeParameter = 9;
FuzzyJavaParser.RULE_typeBound = 10;
FuzzyJavaParser.RULE_enumDeclaration = 11;
FuzzyJavaParser.RULE_enumConstants = 12;
FuzzyJavaParser.RULE_enumConstant = 13;
FuzzyJavaParser.RULE_enumBodyDeclarations = 14;
FuzzyJavaParser.RULE_interfaceDeclaration = 15;
FuzzyJavaParser.RULE_classBody = 16;
FuzzyJavaParser.RULE_interfaceBody = 17;
FuzzyJavaParser.RULE_classBodyDeclaration = 18;
FuzzyJavaParser.RULE_memberDeclaration = 19;
FuzzyJavaParser.RULE_methodDeclaration = 20;
FuzzyJavaParser.RULE_methodBody = 21;
FuzzyJavaParser.RULE_typeTypeOrVoid = 22;
FuzzyJavaParser.RULE_genericMethodDeclaration = 23;
FuzzyJavaParser.RULE_genericConstructorDeclaration = 24;
FuzzyJavaParser.RULE_constructorDeclaration = 25;
FuzzyJavaParser.RULE_fieldDeclaration = 26;
FuzzyJavaParser.RULE_interfaceBodyDeclaration = 27;
FuzzyJavaParser.RULE_interfaceMemberDeclaration = 28;
FuzzyJavaParser.RULE_constDeclaration = 29;
FuzzyJavaParser.RULE_constantDeclarator = 30;
FuzzyJavaParser.RULE_interfaceMethodDeclaration = 31;
FuzzyJavaParser.RULE_interfaceMethodModifier = 32;
FuzzyJavaParser.RULE_genericInterfaceMethodDeclaration = 33;
FuzzyJavaParser.RULE_variableDeclarators = 34;
FuzzyJavaParser.RULE_variableDeclarator = 35;
FuzzyJavaParser.RULE_variableDeclaratorId = 36;
FuzzyJavaParser.RULE_variableInitializer = 37;
FuzzyJavaParser.RULE_arrayInitializer = 38;
FuzzyJavaParser.RULE_classOrInterfaceType = 39;
FuzzyJavaParser.RULE_typeArgument = 40;
FuzzyJavaParser.RULE_qualifiedNameList = 41;
FuzzyJavaParser.RULE_formalParameters = 42;
FuzzyJavaParser.RULE_formalParameterList = 43;
FuzzyJavaParser.RULE_formalParameter = 44;
FuzzyJavaParser.RULE_lastFormalParameter = 45;
FuzzyJavaParser.RULE_qualifiedName = 46;
FuzzyJavaParser.RULE_literal = 47;
FuzzyJavaParser.RULE_integerLiteral = 48;
FuzzyJavaParser.RULE_floatLiteral = 49;
FuzzyJavaParser.RULE_annotation = 50;
FuzzyJavaParser.RULE_elementValuePairs = 51;
FuzzyJavaParser.RULE_elementValuePair = 52;
FuzzyJavaParser.RULE_elementValue = 53;
FuzzyJavaParser.RULE_elementValueArrayInitializer = 54;
FuzzyJavaParser.RULE_annotationTypeDeclaration = 55;
FuzzyJavaParser.RULE_annotationTypeBody = 56;
FuzzyJavaParser.RULE_annotationTypeElementDeclaration = 57;
FuzzyJavaParser.RULE_annotationTypeElementRest = 58;
FuzzyJavaParser.RULE_annotationMethodOrConstantRest = 59;
FuzzyJavaParser.RULE_annotationMethodRest = 60;
FuzzyJavaParser.RULE_annotationConstantRest = 61;
FuzzyJavaParser.RULE_defaultValue = 62;
FuzzyJavaParser.RULE_block = 63;
FuzzyJavaParser.RULE_blockStatements = 64;
FuzzyJavaParser.RULE_blockStatement = 65;
FuzzyJavaParser.RULE_localVariableDeclaration = 66;
FuzzyJavaParser.RULE_localTypeDeclaration = 67;
FuzzyJavaParser.RULE_statement = 68;
FuzzyJavaParser.RULE_catchClause = 69;
FuzzyJavaParser.RULE_catchType = 70;
FuzzyJavaParser.RULE_finallyBlock = 71;
FuzzyJavaParser.RULE_resourceSpecification = 72;
FuzzyJavaParser.RULE_resources = 73;
FuzzyJavaParser.RULE_resource = 74;
FuzzyJavaParser.RULE_switchBlockStatementGroup = 75;
FuzzyJavaParser.RULE_switchLabel = 76;
FuzzyJavaParser.RULE_forControl = 77;
FuzzyJavaParser.RULE_forInit = 78;
FuzzyJavaParser.RULE_enhancedForControl = 79;
FuzzyJavaParser.RULE_parExpression = 80;
FuzzyJavaParser.RULE_expressionList = 81;
FuzzyJavaParser.RULE_expression = 82;
FuzzyJavaParser.RULE_lambdaExpression = 83;
FuzzyJavaParser.RULE_lambdaParameters = 84;
FuzzyJavaParser.RULE_lambdaBody = 85;
FuzzyJavaParser.RULE_primary = 86;
FuzzyJavaParser.RULE_classType = 87;
FuzzyJavaParser.RULE_creator = 88;
FuzzyJavaParser.RULE_createdName = 89;
FuzzyJavaParser.RULE_innerCreator = 90;
FuzzyJavaParser.RULE_arrayCreatorRest = 91;
FuzzyJavaParser.RULE_classCreatorRest = 92;
FuzzyJavaParser.RULE_explicitGenericInvocation = 93;
FuzzyJavaParser.RULE_typeArgumentsOrDiamond = 94;
FuzzyJavaParser.RULE_nonWildcardTypeArgumentsOrDiamond = 95;
FuzzyJavaParser.RULE_nonWildcardTypeArguments = 96;
FuzzyJavaParser.RULE_typeList = 97;
FuzzyJavaParser.RULE_typeType = 98;
FuzzyJavaParser.RULE_primitiveType = 99;
FuzzyJavaParser.RULE_fuzzyPrimitiveType = 100;
FuzzyJavaParser.RULE_typeArguments = 101;
FuzzyJavaParser.RULE_superSuffix = 102;
FuzzyJavaParser.RULE_explicitGenericInvocationSuffix = 103;
FuzzyJavaParser.RULE_arguments = 104;
FuzzyJavaParser.RULE_backReferenceType = 105;

function CompilationUnitContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_compilationUnit;
    return this;
}

CompilationUnitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CompilationUnitContext.prototype.constructor = CompilationUnitContext;

CompilationUnitContext.prototype.EOF = function() {
    return this.getToken(FuzzyJavaParser.EOF, 0);
};

CompilationUnitContext.prototype.packageDeclaration = function() {
    return this.getTypedRuleContext(PackageDeclarationContext,0);
};

CompilationUnitContext.prototype.importDeclaration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ImportDeclarationContext);
    } else {
        return this.getTypedRuleContext(ImportDeclarationContext,i);
    }
};

CompilationUnitContext.prototype.typeDeclaration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeDeclarationContext);
    } else {
        return this.getTypedRuleContext(TypeDeclarationContext,i);
    }
};

CompilationUnitContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitCompilationUnit(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.CompilationUnitContext = CompilationUnitContext;

FuzzyJavaParser.prototype.compilationUnit = function() {

    var localctx = new CompilationUnitContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, FuzzyJavaParser.RULE_compilationUnit);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 213;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,0,this._ctx);
        if(la_===1) {
            this.state = 212;
            this.packageDeclaration();

        }
        this.state = 218;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.IMPORT) {
            this.state = 215;
            this.importDeclaration();
            this.state = 220;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 224;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.ABSTRACT) | (1 << FuzzyJavaParser.CLASS) | (1 << FuzzyJavaParser.ENUM) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.INTERFACE))) !== 0) || ((((_la - 36)) & ~0x1f) == 0 && ((1 << (_la - 36)) & ((1 << (FuzzyJavaParser.PRIVATE - 36)) | (1 << (FuzzyJavaParser.PROTECTED - 36)) | (1 << (FuzzyJavaParser.PUBLIC - 36)) | (1 << (FuzzyJavaParser.STATIC - 36)) | (1 << (FuzzyJavaParser.STRICTFP - 36)))) !== 0) || _la===FuzzyJavaParser.SEMI || _la===FuzzyJavaParser.AT) {
            this.state = 221;
            this.typeDeclaration();
            this.state = 226;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 227;
        this.match(FuzzyJavaParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PackageDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_packageDeclaration;
    return this;
}

PackageDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PackageDeclarationContext.prototype.constructor = PackageDeclarationContext;

PackageDeclarationContext.prototype.PACKAGE = function() {
    return this.getToken(FuzzyJavaParser.PACKAGE, 0);
};

PackageDeclarationContext.prototype.qualifiedName = function() {
    return this.getTypedRuleContext(QualifiedNameContext,0);
};

PackageDeclarationContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

PackageDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitPackageDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.PackageDeclarationContext = PackageDeclarationContext;

FuzzyJavaParser.prototype.packageDeclaration = function() {

    var localctx = new PackageDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, FuzzyJavaParser.RULE_packageDeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 232;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.AT) {
            this.state = 229;
            this.annotation();
            this.state = 234;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 235;
        this.match(FuzzyJavaParser.PACKAGE);
        this.state = 236;
        this.qualifiedName();
        this.state = 237;
        this.match(FuzzyJavaParser.SEMI);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ImportDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_importDeclaration;
    return this;
}

ImportDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ImportDeclarationContext.prototype.constructor = ImportDeclarationContext;

ImportDeclarationContext.prototype.IMPORT = function() {
    return this.getToken(FuzzyJavaParser.IMPORT, 0);
};

ImportDeclarationContext.prototype.qualifiedName = function() {
    return this.getTypedRuleContext(QualifiedNameContext,0);
};

ImportDeclarationContext.prototype.STATIC = function() {
    return this.getToken(FuzzyJavaParser.STATIC, 0);
};

ImportDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitImportDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ImportDeclarationContext = ImportDeclarationContext;

FuzzyJavaParser.prototype.importDeclaration = function() {

    var localctx = new ImportDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, FuzzyJavaParser.RULE_importDeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 239;
        this.match(FuzzyJavaParser.IMPORT);
        this.state = 241;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.STATIC) {
            this.state = 240;
            this.match(FuzzyJavaParser.STATIC);
        }

        this.state = 243;
        this.qualifiedName();
        this.state = 246;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.DOT) {
            this.state = 244;
            this.match(FuzzyJavaParser.DOT);
            this.state = 245;
            this.match(FuzzyJavaParser.MUL);
        }

        this.state = 248;
        this.match(FuzzyJavaParser.SEMI);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeDeclaration;
    return this;
}

TypeDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeDeclarationContext.prototype.constructor = TypeDeclarationContext;

TypeDeclarationContext.prototype.classDeclaration = function() {
    return this.getTypedRuleContext(ClassDeclarationContext,0);
};

TypeDeclarationContext.prototype.enumDeclaration = function() {
    return this.getTypedRuleContext(EnumDeclarationContext,0);
};

TypeDeclarationContext.prototype.interfaceDeclaration = function() {
    return this.getTypedRuleContext(InterfaceDeclarationContext,0);
};

TypeDeclarationContext.prototype.annotationTypeDeclaration = function() {
    return this.getTypedRuleContext(AnnotationTypeDeclarationContext,0);
};

TypeDeclarationContext.prototype.classOrInterfaceModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ClassOrInterfaceModifierContext);
    } else {
        return this.getTypedRuleContext(ClassOrInterfaceModifierContext,i);
    }
};

TypeDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeDeclarationContext = TypeDeclarationContext;

FuzzyJavaParser.prototype.typeDeclaration = function() {

    var localctx = new TypeDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, FuzzyJavaParser.RULE_typeDeclaration);
    try {
        this.state = 263;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.ABSTRACT:
        case FuzzyJavaParser.CLASS:
        case FuzzyJavaParser.ENUM:
        case FuzzyJavaParser.FINAL:
        case FuzzyJavaParser.INTERFACE:
        case FuzzyJavaParser.PRIVATE:
        case FuzzyJavaParser.PROTECTED:
        case FuzzyJavaParser.PUBLIC:
        case FuzzyJavaParser.STATIC:
        case FuzzyJavaParser.STRICTFP:
        case FuzzyJavaParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 253;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,6,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 250;
                    this.classOrInterfaceModifier(); 
                }
                this.state = 255;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,6,this._ctx);
            }

            this.state = 260;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case FuzzyJavaParser.CLASS:
                this.state = 256;
                this.classDeclaration();
                break;
            case FuzzyJavaParser.ENUM:
                this.state = 257;
                this.enumDeclaration();
                break;
            case FuzzyJavaParser.INTERFACE:
                this.state = 258;
                this.interfaceDeclaration();
                break;
            case FuzzyJavaParser.AT:
                this.state = 259;
                this.annotationTypeDeclaration();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            break;
        case FuzzyJavaParser.SEMI:
            this.enterOuterAlt(localctx, 2);
            this.state = 262;
            this.match(FuzzyJavaParser.SEMI);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_modifier;
    return this;
}

ModifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModifierContext.prototype.constructor = ModifierContext;

ModifierContext.prototype.classOrInterfaceModifier = function() {
    return this.getTypedRuleContext(ClassOrInterfaceModifierContext,0);
};

ModifierContext.prototype.NATIVE = function() {
    return this.getToken(FuzzyJavaParser.NATIVE, 0);
};

ModifierContext.prototype.SYNCHRONIZED = function() {
    return this.getToken(FuzzyJavaParser.SYNCHRONIZED, 0);
};

ModifierContext.prototype.TRANSIENT = function() {
    return this.getToken(FuzzyJavaParser.TRANSIENT, 0);
};

ModifierContext.prototype.VOLATILE = function() {
    return this.getToken(FuzzyJavaParser.VOLATILE, 0);
};

ModifierContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitModifier(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ModifierContext = ModifierContext;

FuzzyJavaParser.prototype.modifier = function() {

    var localctx = new ModifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, FuzzyJavaParser.RULE_modifier);
    try {
        this.state = 270;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.ABSTRACT:
        case FuzzyJavaParser.FINAL:
        case FuzzyJavaParser.PRIVATE:
        case FuzzyJavaParser.PROTECTED:
        case FuzzyJavaParser.PUBLIC:
        case FuzzyJavaParser.STATIC:
        case FuzzyJavaParser.STRICTFP:
        case FuzzyJavaParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 265;
            this.classOrInterfaceModifier();
            break;
        case FuzzyJavaParser.NATIVE:
            this.enterOuterAlt(localctx, 2);
            this.state = 266;
            this.match(FuzzyJavaParser.NATIVE);
            break;
        case FuzzyJavaParser.SYNCHRONIZED:
            this.enterOuterAlt(localctx, 3);
            this.state = 267;
            this.match(FuzzyJavaParser.SYNCHRONIZED);
            break;
        case FuzzyJavaParser.TRANSIENT:
            this.enterOuterAlt(localctx, 4);
            this.state = 268;
            this.match(FuzzyJavaParser.TRANSIENT);
            break;
        case FuzzyJavaParser.VOLATILE:
            this.enterOuterAlt(localctx, 5);
            this.state = 269;
            this.match(FuzzyJavaParser.VOLATILE);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassOrInterfaceModifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_classOrInterfaceModifier;
    return this;
}

ClassOrInterfaceModifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassOrInterfaceModifierContext.prototype.constructor = ClassOrInterfaceModifierContext;

ClassOrInterfaceModifierContext.prototype.annotation = function() {
    return this.getTypedRuleContext(AnnotationContext,0);
};

ClassOrInterfaceModifierContext.prototype.PUBLIC = function() {
    return this.getToken(FuzzyJavaParser.PUBLIC, 0);
};

ClassOrInterfaceModifierContext.prototype.PROTECTED = function() {
    return this.getToken(FuzzyJavaParser.PROTECTED, 0);
};

ClassOrInterfaceModifierContext.prototype.PRIVATE = function() {
    return this.getToken(FuzzyJavaParser.PRIVATE, 0);
};

ClassOrInterfaceModifierContext.prototype.STATIC = function() {
    return this.getToken(FuzzyJavaParser.STATIC, 0);
};

ClassOrInterfaceModifierContext.prototype.ABSTRACT = function() {
    return this.getToken(FuzzyJavaParser.ABSTRACT, 0);
};

ClassOrInterfaceModifierContext.prototype.FINAL = function() {
    return this.getToken(FuzzyJavaParser.FINAL, 0);
};

ClassOrInterfaceModifierContext.prototype.STRICTFP = function() {
    return this.getToken(FuzzyJavaParser.STRICTFP, 0);
};

ClassOrInterfaceModifierContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitClassOrInterfaceModifier(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ClassOrInterfaceModifierContext = ClassOrInterfaceModifierContext;

FuzzyJavaParser.prototype.classOrInterfaceModifier = function() {

    var localctx = new ClassOrInterfaceModifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, FuzzyJavaParser.RULE_classOrInterfaceModifier);
    try {
        this.state = 280;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 272;
            this.annotation();
            break;
        case FuzzyJavaParser.PUBLIC:
            this.enterOuterAlt(localctx, 2);
            this.state = 273;
            this.match(FuzzyJavaParser.PUBLIC);
            break;
        case FuzzyJavaParser.PROTECTED:
            this.enterOuterAlt(localctx, 3);
            this.state = 274;
            this.match(FuzzyJavaParser.PROTECTED);
            break;
        case FuzzyJavaParser.PRIVATE:
            this.enterOuterAlt(localctx, 4);
            this.state = 275;
            this.match(FuzzyJavaParser.PRIVATE);
            break;
        case FuzzyJavaParser.STATIC:
            this.enterOuterAlt(localctx, 5);
            this.state = 276;
            this.match(FuzzyJavaParser.STATIC);
            break;
        case FuzzyJavaParser.ABSTRACT:
            this.enterOuterAlt(localctx, 6);
            this.state = 277;
            this.match(FuzzyJavaParser.ABSTRACT);
            break;
        case FuzzyJavaParser.FINAL:
            this.enterOuterAlt(localctx, 7);
            this.state = 278;
            this.match(FuzzyJavaParser.FINAL);
            break;
        case FuzzyJavaParser.STRICTFP:
            this.enterOuterAlt(localctx, 8);
            this.state = 279;
            this.match(FuzzyJavaParser.STRICTFP);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VariableModifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_variableModifier;
    return this;
}

VariableModifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableModifierContext.prototype.constructor = VariableModifierContext;

VariableModifierContext.prototype.FINAL = function() {
    return this.getToken(FuzzyJavaParser.FINAL, 0);
};

VariableModifierContext.prototype.annotation = function() {
    return this.getTypedRuleContext(AnnotationContext,0);
};

VariableModifierContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitVariableModifier(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.VariableModifierContext = VariableModifierContext;

FuzzyJavaParser.prototype.variableModifier = function() {

    var localctx = new VariableModifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, FuzzyJavaParser.RULE_variableModifier);
    try {
        this.state = 284;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.FINAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 282;
            this.match(FuzzyJavaParser.FINAL);
            break;
        case FuzzyJavaParser.AT:
            this.enterOuterAlt(localctx, 2);
            this.state = 283;
            this.annotation();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_classDeclaration;
    return this;
}

ClassDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassDeclarationContext.prototype.constructor = ClassDeclarationContext;

ClassDeclarationContext.prototype.CLASS = function() {
    return this.getToken(FuzzyJavaParser.CLASS, 0);
};

ClassDeclarationContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

ClassDeclarationContext.prototype.classBody = function() {
    return this.getTypedRuleContext(ClassBodyContext,0);
};

ClassDeclarationContext.prototype.typeParameters = function() {
    return this.getTypedRuleContext(TypeParametersContext,0);
};

ClassDeclarationContext.prototype.EXTENDS = function() {
    return this.getToken(FuzzyJavaParser.EXTENDS, 0);
};

ClassDeclarationContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

ClassDeclarationContext.prototype.IMPLEMENTS = function() {
    return this.getToken(FuzzyJavaParser.IMPLEMENTS, 0);
};

ClassDeclarationContext.prototype.typeList = function() {
    return this.getTypedRuleContext(TypeListContext,0);
};

ClassDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitClassDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ClassDeclarationContext = ClassDeclarationContext;

FuzzyJavaParser.prototype.classDeclaration = function() {

    var localctx = new ClassDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, FuzzyJavaParser.RULE_classDeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 286;
        this.match(FuzzyJavaParser.CLASS);
        this.state = 287;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 289;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.LT) {
            this.state = 288;
            this.typeParameters();
        }

        this.state = 293;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.EXTENDS) {
            this.state = 291;
            this.match(FuzzyJavaParser.EXTENDS);
            this.state = 292;
            this.typeType();
        }

        this.state = 297;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.IMPLEMENTS) {
            this.state = 295;
            this.match(FuzzyJavaParser.IMPLEMENTS);
            this.state = 296;
            this.typeList();
        }

        this.state = 299;
        this.classBody();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeParametersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeParameters;
    return this;
}

TypeParametersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeParametersContext.prototype.constructor = TypeParametersContext;

TypeParametersContext.prototype.typeParameter = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeParameterContext);
    } else {
        return this.getTypedRuleContext(TypeParameterContext,i);
    }
};

TypeParametersContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeParameters(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeParametersContext = TypeParametersContext;

FuzzyJavaParser.prototype.typeParameters = function() {

    var localctx = new TypeParametersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, FuzzyJavaParser.RULE_typeParameters);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 301;
        this.match(FuzzyJavaParser.LT);
        this.state = 302;
        this.typeParameter();
        this.state = 307;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.COMMA) {
            this.state = 303;
            this.match(FuzzyJavaParser.COMMA);
            this.state = 304;
            this.typeParameter();
            this.state = 309;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 310;
        this.match(FuzzyJavaParser.GT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeParameterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeParameter;
    return this;
}

TypeParameterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeParameterContext.prototype.constructor = TypeParameterContext;

TypeParameterContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

TypeParameterContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

TypeParameterContext.prototype.EXTENDS = function() {
    return this.getToken(FuzzyJavaParser.EXTENDS, 0);
};

TypeParameterContext.prototype.typeBound = function() {
    return this.getTypedRuleContext(TypeBoundContext,0);
};

TypeParameterContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeParameter(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeParameterContext = TypeParameterContext;

FuzzyJavaParser.prototype.typeParameter = function() {

    var localctx = new TypeParameterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, FuzzyJavaParser.RULE_typeParameter);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 315;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.AT) {
            this.state = 312;
            this.annotation();
            this.state = 317;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 318;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 321;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.EXTENDS) {
            this.state = 319;
            this.match(FuzzyJavaParser.EXTENDS);
            this.state = 320;
            this.typeBound();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeBoundContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeBound;
    return this;
}

TypeBoundContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeBoundContext.prototype.constructor = TypeBoundContext;

TypeBoundContext.prototype.typeType = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeTypeContext);
    } else {
        return this.getTypedRuleContext(TypeTypeContext,i);
    }
};

TypeBoundContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeBound(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeBoundContext = TypeBoundContext;

FuzzyJavaParser.prototype.typeBound = function() {

    var localctx = new TypeBoundContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, FuzzyJavaParser.RULE_typeBound);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 323;
        this.typeType();
        this.state = 328;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.BITAND) {
            this.state = 324;
            this.match(FuzzyJavaParser.BITAND);
            this.state = 325;
            this.typeType();
            this.state = 330;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_enumDeclaration;
    return this;
}

EnumDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumDeclarationContext.prototype.constructor = EnumDeclarationContext;

EnumDeclarationContext.prototype.ENUM = function() {
    return this.getToken(FuzzyJavaParser.ENUM, 0);
};

EnumDeclarationContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

EnumDeclarationContext.prototype.IMPLEMENTS = function() {
    return this.getToken(FuzzyJavaParser.IMPLEMENTS, 0);
};

EnumDeclarationContext.prototype.typeList = function() {
    return this.getTypedRuleContext(TypeListContext,0);
};

EnumDeclarationContext.prototype.enumConstants = function() {
    return this.getTypedRuleContext(EnumConstantsContext,0);
};

EnumDeclarationContext.prototype.enumBodyDeclarations = function() {
    return this.getTypedRuleContext(EnumBodyDeclarationsContext,0);
};

EnumDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitEnumDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.EnumDeclarationContext = EnumDeclarationContext;

FuzzyJavaParser.prototype.enumDeclaration = function() {

    var localctx = new EnumDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, FuzzyJavaParser.RULE_enumDeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 331;
        this.match(FuzzyJavaParser.ENUM);
        this.state = 332;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 335;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.IMPLEMENTS) {
            this.state = 333;
            this.match(FuzzyJavaParser.IMPLEMENTS);
            this.state = 334;
            this.typeList();
        }

        this.state = 337;
        this.match(FuzzyJavaParser.LBRACE);
        this.state = 339;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 338;
            this.enumConstants();
        }

        this.state = 342;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.COMMA) {
            this.state = 341;
            this.match(FuzzyJavaParser.COMMA);
        }

        this.state = 345;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.SEMI) {
            this.state = 344;
            this.enumBodyDeclarations();
        }

        this.state = 347;
        this.match(FuzzyJavaParser.RBRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumConstantsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_enumConstants;
    return this;
}

EnumConstantsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumConstantsContext.prototype.constructor = EnumConstantsContext;

EnumConstantsContext.prototype.enumConstant = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(EnumConstantContext);
    } else {
        return this.getTypedRuleContext(EnumConstantContext,i);
    }
};

EnumConstantsContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitEnumConstants(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.EnumConstantsContext = EnumConstantsContext;

FuzzyJavaParser.prototype.enumConstants = function() {

    var localctx = new EnumConstantsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, FuzzyJavaParser.RULE_enumConstants);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 349;
        this.enumConstant();
        this.state = 354;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,23,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 350;
                this.match(FuzzyJavaParser.COMMA);
                this.state = 351;
                this.enumConstant(); 
            }
            this.state = 356;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,23,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumConstantContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_enumConstant;
    return this;
}

EnumConstantContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumConstantContext.prototype.constructor = EnumConstantContext;

EnumConstantContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

EnumConstantContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

EnumConstantContext.prototype.arguments = function() {
    return this.getTypedRuleContext(ArgumentsContext,0);
};

EnumConstantContext.prototype.classBody = function() {
    return this.getTypedRuleContext(ClassBodyContext,0);
};

EnumConstantContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitEnumConstant(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.EnumConstantContext = EnumConstantContext;

FuzzyJavaParser.prototype.enumConstant = function() {

    var localctx = new EnumConstantContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, FuzzyJavaParser.RULE_enumConstant);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 360;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.AT) {
            this.state = 357;
            this.annotation();
            this.state = 362;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 363;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 365;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.LPAREN) {
            this.state = 364;
            this.arguments();
        }

        this.state = 368;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.LBRACE) {
            this.state = 367;
            this.classBody();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumBodyDeclarationsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_enumBodyDeclarations;
    return this;
}

EnumBodyDeclarationsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumBodyDeclarationsContext.prototype.constructor = EnumBodyDeclarationsContext;

EnumBodyDeclarationsContext.prototype.classBodyDeclaration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ClassBodyDeclarationContext);
    } else {
        return this.getTypedRuleContext(ClassBodyDeclarationContext,i);
    }
};

EnumBodyDeclarationsContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitEnumBodyDeclarations(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.EnumBodyDeclarationsContext = EnumBodyDeclarationsContext;

FuzzyJavaParser.prototype.enumBodyDeclarations = function() {

    var localctx = new EnumBodyDeclarationsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, FuzzyJavaParser.RULE_enumBodyDeclarations);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 370;
        this.match(FuzzyJavaParser.SEMI);
        this.state = 374;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.ABSTRACT) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.CLASS) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.ENUM) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT) | (1 << FuzzyJavaParser.INTERFACE))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NATIVE - 32)) | (1 << (FuzzyJavaParser.PRIVATE - 32)) | (1 << (FuzzyJavaParser.PROTECTED - 32)) | (1 << (FuzzyJavaParser.PUBLIC - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.STATIC - 32)) | (1 << (FuzzyJavaParser.STRICTFP - 32)) | (1 << (FuzzyJavaParser.SYNCHRONIZED - 32)) | (1 << (FuzzyJavaParser.TRANSIENT - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.VOLATILE - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (FuzzyJavaParser.LBRACE - 66)) | (1 << (FuzzyJavaParser.SEMI - 66)) | (1 << (FuzzyJavaParser.ASSIGN - 66)) | (1 << (FuzzyJavaParser.LT - 66)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 371;
            this.classBodyDeclaration();
            this.state = 376;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InterfaceDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_interfaceDeclaration;
    return this;
}

InterfaceDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InterfaceDeclarationContext.prototype.constructor = InterfaceDeclarationContext;

InterfaceDeclarationContext.prototype.INTERFACE = function() {
    return this.getToken(FuzzyJavaParser.INTERFACE, 0);
};

InterfaceDeclarationContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

InterfaceDeclarationContext.prototype.interfaceBody = function() {
    return this.getTypedRuleContext(InterfaceBodyContext,0);
};

InterfaceDeclarationContext.prototype.typeParameters = function() {
    return this.getTypedRuleContext(TypeParametersContext,0);
};

InterfaceDeclarationContext.prototype.EXTENDS = function() {
    return this.getToken(FuzzyJavaParser.EXTENDS, 0);
};

InterfaceDeclarationContext.prototype.typeList = function() {
    return this.getTypedRuleContext(TypeListContext,0);
};

InterfaceDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitInterfaceDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.InterfaceDeclarationContext = InterfaceDeclarationContext;

FuzzyJavaParser.prototype.interfaceDeclaration = function() {

    var localctx = new InterfaceDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, FuzzyJavaParser.RULE_interfaceDeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 377;
        this.match(FuzzyJavaParser.INTERFACE);
        this.state = 378;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 380;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.LT) {
            this.state = 379;
            this.typeParameters();
        }

        this.state = 384;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.EXTENDS) {
            this.state = 382;
            this.match(FuzzyJavaParser.EXTENDS);
            this.state = 383;
            this.typeList();
        }

        this.state = 386;
        this.interfaceBody();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassBodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_classBody;
    return this;
}

ClassBodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassBodyContext.prototype.constructor = ClassBodyContext;

ClassBodyContext.prototype.classBodyDeclaration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ClassBodyDeclarationContext);
    } else {
        return this.getTypedRuleContext(ClassBodyDeclarationContext,i);
    }
};

ClassBodyContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitClassBody(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ClassBodyContext = ClassBodyContext;

FuzzyJavaParser.prototype.classBody = function() {

    var localctx = new ClassBodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, FuzzyJavaParser.RULE_classBody);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 388;
        this.match(FuzzyJavaParser.LBRACE);
        this.state = 392;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.ABSTRACT) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.CLASS) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.ENUM) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT) | (1 << FuzzyJavaParser.INTERFACE))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NATIVE - 32)) | (1 << (FuzzyJavaParser.PRIVATE - 32)) | (1 << (FuzzyJavaParser.PROTECTED - 32)) | (1 << (FuzzyJavaParser.PUBLIC - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.STATIC - 32)) | (1 << (FuzzyJavaParser.STRICTFP - 32)) | (1 << (FuzzyJavaParser.SYNCHRONIZED - 32)) | (1 << (FuzzyJavaParser.TRANSIENT - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.VOLATILE - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (FuzzyJavaParser.LBRACE - 66)) | (1 << (FuzzyJavaParser.SEMI - 66)) | (1 << (FuzzyJavaParser.ASSIGN - 66)) | (1 << (FuzzyJavaParser.LT - 66)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 389;
            this.classBodyDeclaration();
            this.state = 394;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 395;
        this.match(FuzzyJavaParser.RBRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InterfaceBodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_interfaceBody;
    return this;
}

InterfaceBodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InterfaceBodyContext.prototype.constructor = InterfaceBodyContext;

InterfaceBodyContext.prototype.interfaceBodyDeclaration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(InterfaceBodyDeclarationContext);
    } else {
        return this.getTypedRuleContext(InterfaceBodyDeclarationContext,i);
    }
};

InterfaceBodyContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitInterfaceBody(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.InterfaceBodyContext = InterfaceBodyContext;

FuzzyJavaParser.prototype.interfaceBody = function() {

    var localctx = new InterfaceBodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, FuzzyJavaParser.RULE_interfaceBody);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 397;
        this.match(FuzzyJavaParser.LBRACE);
        this.state = 401;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.ABSTRACT) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.CLASS) | (1 << FuzzyJavaParser.DEFAULT) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.ENUM) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT) | (1 << FuzzyJavaParser.INTERFACE))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NATIVE - 32)) | (1 << (FuzzyJavaParser.PRIVATE - 32)) | (1 << (FuzzyJavaParser.PROTECTED - 32)) | (1 << (FuzzyJavaParser.PUBLIC - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.STATIC - 32)) | (1 << (FuzzyJavaParser.STRICTFP - 32)) | (1 << (FuzzyJavaParser.SYNCHRONIZED - 32)) | (1 << (FuzzyJavaParser.TRANSIENT - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.VOLATILE - 32)))) !== 0) || ((((_la - 70)) & ~0x1f) == 0 && ((1 << (_la - 70)) & ((1 << (FuzzyJavaParser.SEMI - 70)) | (1 << (FuzzyJavaParser.ASSIGN - 70)) | (1 << (FuzzyJavaParser.LT - 70)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 398;
            this.interfaceBodyDeclaration();
            this.state = 403;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 404;
        this.match(FuzzyJavaParser.RBRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassBodyDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_classBodyDeclaration;
    return this;
}

ClassBodyDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassBodyDeclarationContext.prototype.constructor = ClassBodyDeclarationContext;

ClassBodyDeclarationContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

ClassBodyDeclarationContext.prototype.STATIC = function() {
    return this.getToken(FuzzyJavaParser.STATIC, 0);
};

ClassBodyDeclarationContext.prototype.memberDeclaration = function() {
    return this.getTypedRuleContext(MemberDeclarationContext,0);
};

ClassBodyDeclarationContext.prototype.modifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModifierContext);
    } else {
        return this.getTypedRuleContext(ModifierContext,i);
    }
};

ClassBodyDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitClassBodyDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ClassBodyDeclarationContext = ClassBodyDeclarationContext;

FuzzyJavaParser.prototype.classBodyDeclaration = function() {

    var localctx = new ClassBodyDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, FuzzyJavaParser.RULE_classBodyDeclaration);
    var _la = 0; // Token type
    try {
        this.state = 418;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,34,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 406;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 408;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.STATIC) {
                this.state = 407;
                this.match(FuzzyJavaParser.STATIC);
            }

            this.state = 410;
            this.block();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 414;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,33,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 411;
                    this.modifier(); 
                }
                this.state = 416;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,33,this._ctx);
            }

            this.state = 417;
            this.memberDeclaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MemberDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_memberDeclaration;
    return this;
}

MemberDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MemberDeclarationContext.prototype.constructor = MemberDeclarationContext;

MemberDeclarationContext.prototype.methodDeclaration = function() {
    return this.getTypedRuleContext(MethodDeclarationContext,0);
};

MemberDeclarationContext.prototype.genericMethodDeclaration = function() {
    return this.getTypedRuleContext(GenericMethodDeclarationContext,0);
};

MemberDeclarationContext.prototype.fieldDeclaration = function() {
    return this.getTypedRuleContext(FieldDeclarationContext,0);
};

MemberDeclarationContext.prototype.constructorDeclaration = function() {
    return this.getTypedRuleContext(ConstructorDeclarationContext,0);
};

MemberDeclarationContext.prototype.genericConstructorDeclaration = function() {
    return this.getTypedRuleContext(GenericConstructorDeclarationContext,0);
};

MemberDeclarationContext.prototype.interfaceDeclaration = function() {
    return this.getTypedRuleContext(InterfaceDeclarationContext,0);
};

MemberDeclarationContext.prototype.annotationTypeDeclaration = function() {
    return this.getTypedRuleContext(AnnotationTypeDeclarationContext,0);
};

MemberDeclarationContext.prototype.classDeclaration = function() {
    return this.getTypedRuleContext(ClassDeclarationContext,0);
};

MemberDeclarationContext.prototype.enumDeclaration = function() {
    return this.getTypedRuleContext(EnumDeclarationContext,0);
};

MemberDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitMemberDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.MemberDeclarationContext = MemberDeclarationContext;

FuzzyJavaParser.prototype.memberDeclaration = function() {

    var localctx = new MemberDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, FuzzyJavaParser.RULE_memberDeclaration);
    try {
        this.state = 429;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,35,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 420;
            this.methodDeclaration();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 421;
            this.genericMethodDeclaration();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 422;
            this.fieldDeclaration();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 423;
            this.constructorDeclaration();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 424;
            this.genericConstructorDeclaration();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 425;
            this.interfaceDeclaration();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 426;
            this.annotationTypeDeclaration();
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 427;
            this.classDeclaration();
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 428;
            this.enumDeclaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MethodDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_methodDeclaration;
    return this;
}

MethodDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MethodDeclarationContext.prototype.constructor = MethodDeclarationContext;

MethodDeclarationContext.prototype.typeTypeOrVoid = function() {
    return this.getTypedRuleContext(TypeTypeOrVoidContext,0);
};

MethodDeclarationContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

MethodDeclarationContext.prototype.formalParameters = function() {
    return this.getTypedRuleContext(FormalParametersContext,0);
};

MethodDeclarationContext.prototype.methodBody = function() {
    return this.getTypedRuleContext(MethodBodyContext,0);
};

MethodDeclarationContext.prototype.THROWS = function() {
    return this.getToken(FuzzyJavaParser.THROWS, 0);
};

MethodDeclarationContext.prototype.qualifiedNameList = function() {
    return this.getTypedRuleContext(QualifiedNameListContext,0);
};

MethodDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitMethodDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.MethodDeclarationContext = MethodDeclarationContext;

FuzzyJavaParser.prototype.methodDeclaration = function() {

    var localctx = new MethodDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, FuzzyJavaParser.RULE_methodDeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 431;
        this.typeTypeOrVoid();
        this.state = 432;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 433;
        this.formalParameters();
        this.state = 438;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.LBRACK) {
            this.state = 434;
            this.match(FuzzyJavaParser.LBRACK);
            this.state = 435;
            this.match(FuzzyJavaParser.RBRACK);
            this.state = 440;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 443;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.THROWS) {
            this.state = 441;
            this.match(FuzzyJavaParser.THROWS);
            this.state = 442;
            this.qualifiedNameList();
        }

        this.state = 445;
        this.methodBody();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MethodBodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_methodBody;
    return this;
}

MethodBodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MethodBodyContext.prototype.constructor = MethodBodyContext;

MethodBodyContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

MethodBodyContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitMethodBody(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.MethodBodyContext = MethodBodyContext;

FuzzyJavaParser.prototype.methodBody = function() {

    var localctx = new MethodBodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, FuzzyJavaParser.RULE_methodBody);
    try {
        this.state = 449;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.LBRACE:
            this.enterOuterAlt(localctx, 1);
            this.state = 447;
            this.block();
            break;
        case FuzzyJavaParser.SEMI:
            this.enterOuterAlt(localctx, 2);
            this.state = 448;
            this.match(FuzzyJavaParser.SEMI);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeTypeOrVoidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeTypeOrVoid;
    return this;
}

TypeTypeOrVoidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeTypeOrVoidContext.prototype.constructor = TypeTypeOrVoidContext;

TypeTypeOrVoidContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

TypeTypeOrVoidContext.prototype.VOID = function() {
    return this.getToken(FuzzyJavaParser.VOID, 0);
};

TypeTypeOrVoidContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeTypeOrVoid(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeTypeOrVoidContext = TypeTypeOrVoidContext;

FuzzyJavaParser.prototype.typeTypeOrVoid = function() {

    var localctx = new TypeTypeOrVoidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, FuzzyJavaParser.RULE_typeTypeOrVoid);
    try {
        this.state = 453;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.RANDOM_PRIMITIVE:
        case FuzzyJavaParser.RANDOM_NUMERIC:
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.SHORT:
        case FuzzyJavaParser.ASSIGN:
        case FuzzyJavaParser.AT:
        case FuzzyJavaParser.IDENTIFIER:
            this.enterOuterAlt(localctx, 1);
            this.state = 451;
            this.typeType();
            break;
        case FuzzyJavaParser.VOID:
            this.enterOuterAlt(localctx, 2);
            this.state = 452;
            this.match(FuzzyJavaParser.VOID);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function GenericMethodDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_genericMethodDeclaration;
    return this;
}

GenericMethodDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GenericMethodDeclarationContext.prototype.constructor = GenericMethodDeclarationContext;

GenericMethodDeclarationContext.prototype.typeParameters = function() {
    return this.getTypedRuleContext(TypeParametersContext,0);
};

GenericMethodDeclarationContext.prototype.methodDeclaration = function() {
    return this.getTypedRuleContext(MethodDeclarationContext,0);
};

GenericMethodDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitGenericMethodDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.GenericMethodDeclarationContext = GenericMethodDeclarationContext;

FuzzyJavaParser.prototype.genericMethodDeclaration = function() {

    var localctx = new GenericMethodDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, FuzzyJavaParser.RULE_genericMethodDeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 455;
        this.typeParameters();
        this.state = 456;
        this.methodDeclaration();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function GenericConstructorDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_genericConstructorDeclaration;
    return this;
}

GenericConstructorDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GenericConstructorDeclarationContext.prototype.constructor = GenericConstructorDeclarationContext;

GenericConstructorDeclarationContext.prototype.typeParameters = function() {
    return this.getTypedRuleContext(TypeParametersContext,0);
};

GenericConstructorDeclarationContext.prototype.constructorDeclaration = function() {
    return this.getTypedRuleContext(ConstructorDeclarationContext,0);
};

GenericConstructorDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitGenericConstructorDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.GenericConstructorDeclarationContext = GenericConstructorDeclarationContext;

FuzzyJavaParser.prototype.genericConstructorDeclaration = function() {

    var localctx = new GenericConstructorDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, FuzzyJavaParser.RULE_genericConstructorDeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 458;
        this.typeParameters();
        this.state = 459;
        this.constructorDeclaration();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConstructorDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_constructorDeclaration;
    this.constructorBody = null; // BlockContext
    return this;
}

ConstructorDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstructorDeclarationContext.prototype.constructor = ConstructorDeclarationContext;

ConstructorDeclarationContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

ConstructorDeclarationContext.prototype.formalParameters = function() {
    return this.getTypedRuleContext(FormalParametersContext,0);
};

ConstructorDeclarationContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

ConstructorDeclarationContext.prototype.THROWS = function() {
    return this.getToken(FuzzyJavaParser.THROWS, 0);
};

ConstructorDeclarationContext.prototype.qualifiedNameList = function() {
    return this.getTypedRuleContext(QualifiedNameListContext,0);
};

ConstructorDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitConstructorDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ConstructorDeclarationContext = ConstructorDeclarationContext;

FuzzyJavaParser.prototype.constructorDeclaration = function() {

    var localctx = new ConstructorDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, FuzzyJavaParser.RULE_constructorDeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 461;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 462;
        this.formalParameters();
        this.state = 465;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.THROWS) {
            this.state = 463;
            this.match(FuzzyJavaParser.THROWS);
            this.state = 464;
            this.qualifiedNameList();
        }

        this.state = 467;
        localctx.constructorBody = this.block();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FieldDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_fieldDeclaration;
    return this;
}

FieldDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FieldDeclarationContext.prototype.constructor = FieldDeclarationContext;

FieldDeclarationContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

FieldDeclarationContext.prototype.variableDeclarators = function() {
    return this.getTypedRuleContext(VariableDeclaratorsContext,0);
};

FieldDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitFieldDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.FieldDeclarationContext = FieldDeclarationContext;

FuzzyJavaParser.prototype.fieldDeclaration = function() {

    var localctx = new FieldDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, FuzzyJavaParser.RULE_fieldDeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 469;
        this.typeType();
        this.state = 470;
        this.variableDeclarators();
        this.state = 471;
        this.match(FuzzyJavaParser.SEMI);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InterfaceBodyDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_interfaceBodyDeclaration;
    return this;
}

InterfaceBodyDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InterfaceBodyDeclarationContext.prototype.constructor = InterfaceBodyDeclarationContext;

InterfaceBodyDeclarationContext.prototype.interfaceMemberDeclaration = function() {
    return this.getTypedRuleContext(InterfaceMemberDeclarationContext,0);
};

InterfaceBodyDeclarationContext.prototype.modifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModifierContext);
    } else {
        return this.getTypedRuleContext(ModifierContext,i);
    }
};

InterfaceBodyDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitInterfaceBodyDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.InterfaceBodyDeclarationContext = InterfaceBodyDeclarationContext;

FuzzyJavaParser.prototype.interfaceBodyDeclaration = function() {

    var localctx = new InterfaceBodyDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, FuzzyJavaParser.RULE_interfaceBodyDeclaration);
    try {
        this.state = 481;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.RANDOM_PRIMITIVE:
        case FuzzyJavaParser.RANDOM_NUMERIC:
        case FuzzyJavaParser.ABSTRACT:
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.CLASS:
        case FuzzyJavaParser.DEFAULT:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.ENUM:
        case FuzzyJavaParser.FINAL:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.INTERFACE:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.NATIVE:
        case FuzzyJavaParser.PRIVATE:
        case FuzzyJavaParser.PROTECTED:
        case FuzzyJavaParser.PUBLIC:
        case FuzzyJavaParser.SHORT:
        case FuzzyJavaParser.STATIC:
        case FuzzyJavaParser.STRICTFP:
        case FuzzyJavaParser.SYNCHRONIZED:
        case FuzzyJavaParser.TRANSIENT:
        case FuzzyJavaParser.VOID:
        case FuzzyJavaParser.VOLATILE:
        case FuzzyJavaParser.ASSIGN:
        case FuzzyJavaParser.LT:
        case FuzzyJavaParser.AT:
        case FuzzyJavaParser.IDENTIFIER:
            this.enterOuterAlt(localctx, 1);
            this.state = 476;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,41,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 473;
                    this.modifier(); 
                }
                this.state = 478;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,41,this._ctx);
            }

            this.state = 479;
            this.interfaceMemberDeclaration();
            break;
        case FuzzyJavaParser.SEMI:
            this.enterOuterAlt(localctx, 2);
            this.state = 480;
            this.match(FuzzyJavaParser.SEMI);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InterfaceMemberDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_interfaceMemberDeclaration;
    return this;
}

InterfaceMemberDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InterfaceMemberDeclarationContext.prototype.constructor = InterfaceMemberDeclarationContext;

InterfaceMemberDeclarationContext.prototype.constDeclaration = function() {
    return this.getTypedRuleContext(ConstDeclarationContext,0);
};

InterfaceMemberDeclarationContext.prototype.interfaceMethodDeclaration = function() {
    return this.getTypedRuleContext(InterfaceMethodDeclarationContext,0);
};

InterfaceMemberDeclarationContext.prototype.genericInterfaceMethodDeclaration = function() {
    return this.getTypedRuleContext(GenericInterfaceMethodDeclarationContext,0);
};

InterfaceMemberDeclarationContext.prototype.interfaceDeclaration = function() {
    return this.getTypedRuleContext(InterfaceDeclarationContext,0);
};

InterfaceMemberDeclarationContext.prototype.annotationTypeDeclaration = function() {
    return this.getTypedRuleContext(AnnotationTypeDeclarationContext,0);
};

InterfaceMemberDeclarationContext.prototype.classDeclaration = function() {
    return this.getTypedRuleContext(ClassDeclarationContext,0);
};

InterfaceMemberDeclarationContext.prototype.enumDeclaration = function() {
    return this.getTypedRuleContext(EnumDeclarationContext,0);
};

InterfaceMemberDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitInterfaceMemberDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.InterfaceMemberDeclarationContext = InterfaceMemberDeclarationContext;

FuzzyJavaParser.prototype.interfaceMemberDeclaration = function() {

    var localctx = new InterfaceMemberDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, FuzzyJavaParser.RULE_interfaceMemberDeclaration);
    try {
        this.state = 490;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,43,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 483;
            this.constDeclaration();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 484;
            this.interfaceMethodDeclaration();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 485;
            this.genericInterfaceMethodDeclaration();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 486;
            this.interfaceDeclaration();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 487;
            this.annotationTypeDeclaration();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 488;
            this.classDeclaration();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 489;
            this.enumDeclaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConstDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_constDeclaration;
    return this;
}

ConstDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstDeclarationContext.prototype.constructor = ConstDeclarationContext;

ConstDeclarationContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

ConstDeclarationContext.prototype.constantDeclarator = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ConstantDeclaratorContext);
    } else {
        return this.getTypedRuleContext(ConstantDeclaratorContext,i);
    }
};

ConstDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitConstDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ConstDeclarationContext = ConstDeclarationContext;

FuzzyJavaParser.prototype.constDeclaration = function() {

    var localctx = new ConstDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, FuzzyJavaParser.RULE_constDeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 492;
        this.typeType();
        this.state = 493;
        this.constantDeclarator();
        this.state = 498;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.COMMA) {
            this.state = 494;
            this.match(FuzzyJavaParser.COMMA);
            this.state = 495;
            this.constantDeclarator();
            this.state = 500;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 501;
        this.match(FuzzyJavaParser.SEMI);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConstantDeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_constantDeclarator;
    return this;
}

ConstantDeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstantDeclaratorContext.prototype.constructor = ConstantDeclaratorContext;

ConstantDeclaratorContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

ConstantDeclaratorContext.prototype.variableInitializer = function() {
    return this.getTypedRuleContext(VariableInitializerContext,0);
};

ConstantDeclaratorContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitConstantDeclarator(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ConstantDeclaratorContext = ConstantDeclaratorContext;

FuzzyJavaParser.prototype.constantDeclarator = function() {

    var localctx = new ConstantDeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, FuzzyJavaParser.RULE_constantDeclarator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 503;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 508;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.LBRACK) {
            this.state = 504;
            this.match(FuzzyJavaParser.LBRACK);
            this.state = 505;
            this.match(FuzzyJavaParser.RBRACK);
            this.state = 510;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 511;
        this.match(FuzzyJavaParser.ASSIGN);
        this.state = 512;
        this.variableInitializer();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InterfaceMethodDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_interfaceMethodDeclaration;
    return this;
}

InterfaceMethodDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InterfaceMethodDeclarationContext.prototype.constructor = InterfaceMethodDeclarationContext;

InterfaceMethodDeclarationContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

InterfaceMethodDeclarationContext.prototype.formalParameters = function() {
    return this.getTypedRuleContext(FormalParametersContext,0);
};

InterfaceMethodDeclarationContext.prototype.methodBody = function() {
    return this.getTypedRuleContext(MethodBodyContext,0);
};

InterfaceMethodDeclarationContext.prototype.typeTypeOrVoid = function() {
    return this.getTypedRuleContext(TypeTypeOrVoidContext,0);
};

InterfaceMethodDeclarationContext.prototype.typeParameters = function() {
    return this.getTypedRuleContext(TypeParametersContext,0);
};

InterfaceMethodDeclarationContext.prototype.interfaceMethodModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(InterfaceMethodModifierContext);
    } else {
        return this.getTypedRuleContext(InterfaceMethodModifierContext,i);
    }
};

InterfaceMethodDeclarationContext.prototype.THROWS = function() {
    return this.getToken(FuzzyJavaParser.THROWS, 0);
};

InterfaceMethodDeclarationContext.prototype.qualifiedNameList = function() {
    return this.getTypedRuleContext(QualifiedNameListContext,0);
};

InterfaceMethodDeclarationContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

InterfaceMethodDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitInterfaceMethodDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.InterfaceMethodDeclarationContext = InterfaceMethodDeclarationContext;

FuzzyJavaParser.prototype.interfaceMethodDeclaration = function() {

    var localctx = new InterfaceMethodDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, FuzzyJavaParser.RULE_interfaceMethodDeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 517;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,46,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 514;
                this.interfaceMethodModifier(); 
            }
            this.state = 519;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,46,this._ctx);
        }

        this.state = 530;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.RANDOM_PRIMITIVE:
        case FuzzyJavaParser.RANDOM_NUMERIC:
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.SHORT:
        case FuzzyJavaParser.VOID:
        case FuzzyJavaParser.ASSIGN:
        case FuzzyJavaParser.AT:
        case FuzzyJavaParser.IDENTIFIER:
            this.state = 520;
            this.typeTypeOrVoid();
            break;
        case FuzzyJavaParser.LT:
            this.state = 521;
            this.typeParameters();
            this.state = 525;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,47,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 522;
                    this.annotation(); 
                }
                this.state = 527;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,47,this._ctx);
            }

            this.state = 528;
            this.typeTypeOrVoid();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 532;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 533;
        this.formalParameters();
        this.state = 538;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.LBRACK) {
            this.state = 534;
            this.match(FuzzyJavaParser.LBRACK);
            this.state = 535;
            this.match(FuzzyJavaParser.RBRACK);
            this.state = 540;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 543;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.THROWS) {
            this.state = 541;
            this.match(FuzzyJavaParser.THROWS);
            this.state = 542;
            this.qualifiedNameList();
        }

        this.state = 545;
        this.methodBody();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InterfaceMethodModifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_interfaceMethodModifier;
    return this;
}

InterfaceMethodModifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InterfaceMethodModifierContext.prototype.constructor = InterfaceMethodModifierContext;

InterfaceMethodModifierContext.prototype.annotation = function() {
    return this.getTypedRuleContext(AnnotationContext,0);
};

InterfaceMethodModifierContext.prototype.PUBLIC = function() {
    return this.getToken(FuzzyJavaParser.PUBLIC, 0);
};

InterfaceMethodModifierContext.prototype.ABSTRACT = function() {
    return this.getToken(FuzzyJavaParser.ABSTRACT, 0);
};

InterfaceMethodModifierContext.prototype.DEFAULT = function() {
    return this.getToken(FuzzyJavaParser.DEFAULT, 0);
};

InterfaceMethodModifierContext.prototype.STATIC = function() {
    return this.getToken(FuzzyJavaParser.STATIC, 0);
};

InterfaceMethodModifierContext.prototype.STRICTFP = function() {
    return this.getToken(FuzzyJavaParser.STRICTFP, 0);
};

InterfaceMethodModifierContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitInterfaceMethodModifier(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.InterfaceMethodModifierContext = InterfaceMethodModifierContext;

FuzzyJavaParser.prototype.interfaceMethodModifier = function() {

    var localctx = new InterfaceMethodModifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, FuzzyJavaParser.RULE_interfaceMethodModifier);
    try {
        this.state = 553;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 547;
            this.annotation();
            break;
        case FuzzyJavaParser.PUBLIC:
            this.enterOuterAlt(localctx, 2);
            this.state = 548;
            this.match(FuzzyJavaParser.PUBLIC);
            break;
        case FuzzyJavaParser.ABSTRACT:
            this.enterOuterAlt(localctx, 3);
            this.state = 549;
            this.match(FuzzyJavaParser.ABSTRACT);
            break;
        case FuzzyJavaParser.DEFAULT:
            this.enterOuterAlt(localctx, 4);
            this.state = 550;
            this.match(FuzzyJavaParser.DEFAULT);
            break;
        case FuzzyJavaParser.STATIC:
            this.enterOuterAlt(localctx, 5);
            this.state = 551;
            this.match(FuzzyJavaParser.STATIC);
            break;
        case FuzzyJavaParser.STRICTFP:
            this.enterOuterAlt(localctx, 6);
            this.state = 552;
            this.match(FuzzyJavaParser.STRICTFP);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function GenericInterfaceMethodDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_genericInterfaceMethodDeclaration;
    return this;
}

GenericInterfaceMethodDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GenericInterfaceMethodDeclarationContext.prototype.constructor = GenericInterfaceMethodDeclarationContext;

GenericInterfaceMethodDeclarationContext.prototype.typeParameters = function() {
    return this.getTypedRuleContext(TypeParametersContext,0);
};

GenericInterfaceMethodDeclarationContext.prototype.interfaceMethodDeclaration = function() {
    return this.getTypedRuleContext(InterfaceMethodDeclarationContext,0);
};

GenericInterfaceMethodDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitGenericInterfaceMethodDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.GenericInterfaceMethodDeclarationContext = GenericInterfaceMethodDeclarationContext;

FuzzyJavaParser.prototype.genericInterfaceMethodDeclaration = function() {

    var localctx = new GenericInterfaceMethodDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 66, FuzzyJavaParser.RULE_genericInterfaceMethodDeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 555;
        this.typeParameters();
        this.state = 556;
        this.interfaceMethodDeclaration();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VariableDeclaratorsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_variableDeclarators;
    return this;
}

VariableDeclaratorsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableDeclaratorsContext.prototype.constructor = VariableDeclaratorsContext;

VariableDeclaratorsContext.prototype.variableDeclarator = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariableDeclaratorContext);
    } else {
        return this.getTypedRuleContext(VariableDeclaratorContext,i);
    }
};

VariableDeclaratorsContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitVariableDeclarators(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.VariableDeclaratorsContext = VariableDeclaratorsContext;

FuzzyJavaParser.prototype.variableDeclarators = function() {

    var localctx = new VariableDeclaratorsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 68, FuzzyJavaParser.RULE_variableDeclarators);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 558;
        this.variableDeclarator();
        this.state = 563;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.COMMA) {
            this.state = 559;
            this.match(FuzzyJavaParser.COMMA);
            this.state = 560;
            this.variableDeclarator();
            this.state = 565;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VariableDeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_variableDeclarator;
    return this;
}

VariableDeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableDeclaratorContext.prototype.constructor = VariableDeclaratorContext;

VariableDeclaratorContext.prototype.variableDeclaratorId = function() {
    return this.getTypedRuleContext(VariableDeclaratorIdContext,0);
};

VariableDeclaratorContext.prototype.variableInitializer = function() {
    return this.getTypedRuleContext(VariableInitializerContext,0);
};

VariableDeclaratorContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitVariableDeclarator(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.VariableDeclaratorContext = VariableDeclaratorContext;

FuzzyJavaParser.prototype.variableDeclarator = function() {

    var localctx = new VariableDeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, FuzzyJavaParser.RULE_variableDeclarator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 566;
        this.variableDeclaratorId();
        this.state = 569;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.ASSIGN) {
            this.state = 567;
            this.match(FuzzyJavaParser.ASSIGN);
            this.state = 568;
            this.variableInitializer();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VariableDeclaratorIdContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_variableDeclaratorId;
    return this;
}

VariableDeclaratorIdContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableDeclaratorIdContext.prototype.constructor = VariableDeclaratorIdContext;

VariableDeclaratorIdContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

VariableDeclaratorIdContext.prototype.QUESTION = function() {
    return this.getToken(FuzzyJavaParser.QUESTION, 0);
};

VariableDeclaratorIdContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitVariableDeclaratorId(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.VariableDeclaratorIdContext = VariableDeclaratorIdContext;

FuzzyJavaParser.prototype.variableDeclaratorId = function() {

    var localctx = new VariableDeclaratorIdContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, FuzzyJavaParser.RULE_variableDeclaratorId);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 574;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.IDENTIFIER:
            this.state = 571;
            this.match(FuzzyJavaParser.IDENTIFIER);
            break;
        case FuzzyJavaParser.QUESTION:
            this.state = 572;
            this.match(FuzzyJavaParser.QUESTION);
            this.state = 573;
            this.match(FuzzyJavaParser.IDENTIFIER);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 580;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.LBRACK) {
            this.state = 576;
            this.match(FuzzyJavaParser.LBRACK);
            this.state = 577;
            this.match(FuzzyJavaParser.RBRACK);
            this.state = 582;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VariableInitializerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_variableInitializer;
    return this;
}

VariableInitializerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableInitializerContext.prototype.constructor = VariableInitializerContext;

VariableInitializerContext.prototype.arrayInitializer = function() {
    return this.getTypedRuleContext(ArrayInitializerContext,0);
};

VariableInitializerContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

VariableInitializerContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitVariableInitializer(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.VariableInitializerContext = VariableInitializerContext;

FuzzyJavaParser.prototype.variableInitializer = function() {

    var localctx = new VariableInitializerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 74, FuzzyJavaParser.RULE_variableInitializer);
    try {
        this.state = 585;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.LBRACE:
            this.enterOuterAlt(localctx, 1);
            this.state = 583;
            this.arrayInitializer();
            break;
        case FuzzyJavaParser.RANDOM_PRIMITIVE:
        case FuzzyJavaParser.RANDOM_NUMERIC:
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.NEW:
        case FuzzyJavaParser.SHORT:
        case FuzzyJavaParser.SUPER:
        case FuzzyJavaParser.THIS:
        case FuzzyJavaParser.VOID:
        case FuzzyJavaParser.DECIMAL_LITERAL:
        case FuzzyJavaParser.HEX_LITERAL:
        case FuzzyJavaParser.OCT_LITERAL:
        case FuzzyJavaParser.BINARY_LITERAL:
        case FuzzyJavaParser.FLOAT_LITERAL:
        case FuzzyJavaParser.HEX_FLOAT_LITERAL:
        case FuzzyJavaParser.BOOL_LITERAL:
        case FuzzyJavaParser.CHAR_LITERAL:
        case FuzzyJavaParser.STRING_LITERAL:
        case FuzzyJavaParser.NULL_LITERAL:
        case FuzzyJavaParser.LPAREN:
        case FuzzyJavaParser.ASSIGN:
        case FuzzyJavaParser.LT:
        case FuzzyJavaParser.BANG:
        case FuzzyJavaParser.TILDE:
        case FuzzyJavaParser.QUESTION:
        case FuzzyJavaParser.INC:
        case FuzzyJavaParser.DEC:
        case FuzzyJavaParser.ADD:
        case FuzzyJavaParser.SUB:
        case FuzzyJavaParser.AT:
        case FuzzyJavaParser.IDENTIFIER:
            this.enterOuterAlt(localctx, 2);
            this.state = 584;
            this.expression(0);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ArrayInitializerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_arrayInitializer;
    return this;
}

ArrayInitializerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArrayInitializerContext.prototype.constructor = ArrayInitializerContext;

ArrayInitializerContext.prototype.variableInitializer = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariableInitializerContext);
    } else {
        return this.getTypedRuleContext(VariableInitializerContext,i);
    }
};

ArrayInitializerContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitArrayInitializer(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ArrayInitializerContext = ArrayInitializerContext;

FuzzyJavaParser.prototype.arrayInitializer = function() {

    var localctx = new ArrayInitializerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 76, FuzzyJavaParser.RULE_arrayInitializer);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 587;
        this.match(FuzzyJavaParser.LBRACE);
        this.state = 599;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.LBRACE - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 588;
            this.variableInitializer();
            this.state = 593;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,57,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 589;
                    this.match(FuzzyJavaParser.COMMA);
                    this.state = 590;
                    this.variableInitializer(); 
                }
                this.state = 595;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,57,this._ctx);
            }

            this.state = 597;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.COMMA) {
                this.state = 596;
                this.match(FuzzyJavaParser.COMMA);
            }

        }

        this.state = 601;
        this.match(FuzzyJavaParser.RBRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassOrInterfaceTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_classOrInterfaceType;
    return this;
}

ClassOrInterfaceTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassOrInterfaceTypeContext.prototype.constructor = ClassOrInterfaceTypeContext;

ClassOrInterfaceTypeContext.prototype.IDENTIFIER = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(FuzzyJavaParser.IDENTIFIER);
    } else {
        return this.getToken(FuzzyJavaParser.IDENTIFIER, i);
    }
};


ClassOrInterfaceTypeContext.prototype.typeArguments = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeArgumentsContext);
    } else {
        return this.getTypedRuleContext(TypeArgumentsContext,i);
    }
};

ClassOrInterfaceTypeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitClassOrInterfaceType(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ClassOrInterfaceTypeContext = ClassOrInterfaceTypeContext;

FuzzyJavaParser.prototype.classOrInterfaceType = function() {

    var localctx = new ClassOrInterfaceTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 78, FuzzyJavaParser.RULE_classOrInterfaceType);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 603;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 605;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,60,this._ctx);
        if(la_===1) {
            this.state = 604;
            this.typeArguments();

        }
        this.state = 614;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,62,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 607;
                this.match(FuzzyJavaParser.DOT);
                this.state = 608;
                this.match(FuzzyJavaParser.IDENTIFIER);
                this.state = 610;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,61,this._ctx);
                if(la_===1) {
                    this.state = 609;
                    this.typeArguments();

                } 
            }
            this.state = 616;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,62,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeArgumentContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeArgument;
    return this;
}

TypeArgumentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeArgumentContext.prototype.constructor = TypeArgumentContext;

TypeArgumentContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

TypeArgumentContext.prototype.EXTENDS = function() {
    return this.getToken(FuzzyJavaParser.EXTENDS, 0);
};

TypeArgumentContext.prototype.SUPER = function() {
    return this.getToken(FuzzyJavaParser.SUPER, 0);
};

TypeArgumentContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeArgument(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeArgumentContext = TypeArgumentContext;

FuzzyJavaParser.prototype.typeArgument = function() {

    var localctx = new TypeArgumentContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, FuzzyJavaParser.RULE_typeArgument);
    var _la = 0; // Token type
    try {
        this.state = 623;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.RANDOM_PRIMITIVE:
        case FuzzyJavaParser.RANDOM_NUMERIC:
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.SHORT:
        case FuzzyJavaParser.ASSIGN:
        case FuzzyJavaParser.AT:
        case FuzzyJavaParser.IDENTIFIER:
            this.enterOuterAlt(localctx, 1);
            this.state = 617;
            this.typeType();
            break;
        case FuzzyJavaParser.QUESTION:
            this.enterOuterAlt(localctx, 2);
            this.state = 618;
            this.match(FuzzyJavaParser.QUESTION);
            this.state = 621;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.EXTENDS || _la===FuzzyJavaParser.SUPER) {
                this.state = 619;
                _la = this._input.LA(1);
                if(!(_la===FuzzyJavaParser.EXTENDS || _la===FuzzyJavaParser.SUPER)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                }
                this.state = 620;
                this.typeType();
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function QualifiedNameListContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_qualifiedNameList;
    return this;
}

QualifiedNameListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QualifiedNameListContext.prototype.constructor = QualifiedNameListContext;

QualifiedNameListContext.prototype.qualifiedName = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(QualifiedNameContext);
    } else {
        return this.getTypedRuleContext(QualifiedNameContext,i);
    }
};

QualifiedNameListContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitQualifiedNameList(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.QualifiedNameListContext = QualifiedNameListContext;

FuzzyJavaParser.prototype.qualifiedNameList = function() {

    var localctx = new QualifiedNameListContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, FuzzyJavaParser.RULE_qualifiedNameList);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 625;
        this.qualifiedName();
        this.state = 630;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.COMMA) {
            this.state = 626;
            this.match(FuzzyJavaParser.COMMA);
            this.state = 627;
            this.qualifiedName();
            this.state = 632;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FormalParametersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_formalParameters;
    return this;
}

FormalParametersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FormalParametersContext.prototype.constructor = FormalParametersContext;

FormalParametersContext.prototype.formalParameterList = function() {
    return this.getTypedRuleContext(FormalParameterListContext,0);
};

FormalParametersContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitFormalParameters(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.FormalParametersContext = FormalParametersContext;

FuzzyJavaParser.prototype.formalParameters = function() {

    var localctx = new FormalParametersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, FuzzyJavaParser.RULE_formalParameters);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 633;
        this.match(FuzzyJavaParser.LPAREN);
        this.state = 635;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || _la===FuzzyJavaParser.LONG || _la===FuzzyJavaParser.SHORT || _la===FuzzyJavaParser.ASSIGN || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 634;
            this.formalParameterList();
        }

        this.state = 637;
        this.match(FuzzyJavaParser.RPAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FormalParameterListContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_formalParameterList;
    return this;
}

FormalParameterListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FormalParameterListContext.prototype.constructor = FormalParameterListContext;

FormalParameterListContext.prototype.formalParameter = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(FormalParameterContext);
    } else {
        return this.getTypedRuleContext(FormalParameterContext,i);
    }
};

FormalParameterListContext.prototype.lastFormalParameter = function() {
    return this.getTypedRuleContext(LastFormalParameterContext,0);
};

FormalParameterListContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitFormalParameterList(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.FormalParameterListContext = FormalParameterListContext;

FuzzyJavaParser.prototype.formalParameterList = function() {

    var localctx = new FormalParameterListContext(this, this._ctx, this.state);
    this.enterRule(localctx, 86, FuzzyJavaParser.RULE_formalParameterList);
    var _la = 0; // Token type
    try {
        this.state = 652;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,69,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 639;
            this.formalParameter();
            this.state = 644;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,67,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 640;
                    this.match(FuzzyJavaParser.COMMA);
                    this.state = 641;
                    this.formalParameter(); 
                }
                this.state = 646;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,67,this._ctx);
            }

            this.state = 649;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.COMMA) {
                this.state = 647;
                this.match(FuzzyJavaParser.COMMA);
                this.state = 648;
                this.lastFormalParameter();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 651;
            this.lastFormalParameter();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FormalParameterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_formalParameter;
    return this;
}

FormalParameterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FormalParameterContext.prototype.constructor = FormalParameterContext;

FormalParameterContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

FormalParameterContext.prototype.variableDeclaratorId = function() {
    return this.getTypedRuleContext(VariableDeclaratorIdContext,0);
};

FormalParameterContext.prototype.variableModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariableModifierContext);
    } else {
        return this.getTypedRuleContext(VariableModifierContext,i);
    }
};

FormalParameterContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitFormalParameter(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.FormalParameterContext = FormalParameterContext;

FuzzyJavaParser.prototype.formalParameter = function() {

    var localctx = new FormalParameterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 88, FuzzyJavaParser.RULE_formalParameter);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 657;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,70,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 654;
                this.variableModifier(); 
            }
            this.state = 659;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,70,this._ctx);
        }

        this.state = 660;
        this.typeType();
        this.state = 661;
        this.variableDeclaratorId();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LastFormalParameterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_lastFormalParameter;
    return this;
}

LastFormalParameterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LastFormalParameterContext.prototype.constructor = LastFormalParameterContext;

LastFormalParameterContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

LastFormalParameterContext.prototype.variableDeclaratorId = function() {
    return this.getTypedRuleContext(VariableDeclaratorIdContext,0);
};

LastFormalParameterContext.prototype.variableModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariableModifierContext);
    } else {
        return this.getTypedRuleContext(VariableModifierContext,i);
    }
};

LastFormalParameterContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitLastFormalParameter(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.LastFormalParameterContext = LastFormalParameterContext;

FuzzyJavaParser.prototype.lastFormalParameter = function() {

    var localctx = new LastFormalParameterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, FuzzyJavaParser.RULE_lastFormalParameter);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 666;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,71,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 663;
                this.variableModifier(); 
            }
            this.state = 668;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,71,this._ctx);
        }

        this.state = 669;
        this.typeType();
        this.state = 670;
        this.match(FuzzyJavaParser.ELLIPSIS);
        this.state = 671;
        this.variableDeclaratorId();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function QualifiedNameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_qualifiedName;
    return this;
}

QualifiedNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QualifiedNameContext.prototype.constructor = QualifiedNameContext;

QualifiedNameContext.prototype.IDENTIFIER = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(FuzzyJavaParser.IDENTIFIER);
    } else {
        return this.getToken(FuzzyJavaParser.IDENTIFIER, i);
    }
};


QualifiedNameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitQualifiedName(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.QualifiedNameContext = QualifiedNameContext;

FuzzyJavaParser.prototype.qualifiedName = function() {

    var localctx = new QualifiedNameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 92, FuzzyJavaParser.RULE_qualifiedName);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 673;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 678;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,72,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 674;
                this.match(FuzzyJavaParser.DOT);
                this.state = 675;
                this.match(FuzzyJavaParser.IDENTIFIER); 
            }
            this.state = 680;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,72,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LiteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_literal;
    return this;
}

LiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LiteralContext.prototype.constructor = LiteralContext;

LiteralContext.prototype.integerLiteral = function() {
    return this.getTypedRuleContext(IntegerLiteralContext,0);
};

LiteralContext.prototype.floatLiteral = function() {
    return this.getTypedRuleContext(FloatLiteralContext,0);
};

LiteralContext.prototype.CHAR_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.CHAR_LITERAL, 0);
};

LiteralContext.prototype.STRING_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.STRING_LITERAL, 0);
};

LiteralContext.prototype.BOOL_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.BOOL_LITERAL, 0);
};

LiteralContext.prototype.NULL_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.NULL_LITERAL, 0);
};

LiteralContext.prototype.QUESTION = function() {
    return this.getToken(FuzzyJavaParser.QUESTION, 0);
};

LiteralContext.prototype.primitiveType = function() {
    return this.getTypedRuleContext(PrimitiveTypeContext,0);
};

LiteralContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitLiteral(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.LiteralContext = LiteralContext;

FuzzyJavaParser.prototype.literal = function() {

    var localctx = new LiteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 94, FuzzyJavaParser.RULE_literal);
    try {
        this.state = 690;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,73,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 681;
            this.integerLiteral();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 682;
            this.floatLiteral();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 683;
            this.match(FuzzyJavaParser.CHAR_LITERAL);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 684;
            this.match(FuzzyJavaParser.STRING_LITERAL);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 685;
            this.match(FuzzyJavaParser.BOOL_LITERAL);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 686;
            this.match(FuzzyJavaParser.NULL_LITERAL);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 687;
            this.match(FuzzyJavaParser.QUESTION);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 688;
            this.match(FuzzyJavaParser.QUESTION);
            this.state = 689;
            this.primitiveType();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IntegerLiteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_integerLiteral;
    return this;
}

IntegerLiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IntegerLiteralContext.prototype.constructor = IntegerLiteralContext;

IntegerLiteralContext.prototype.DECIMAL_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.DECIMAL_LITERAL, 0);
};

IntegerLiteralContext.prototype.HEX_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.HEX_LITERAL, 0);
};

IntegerLiteralContext.prototype.OCT_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.OCT_LITERAL, 0);
};

IntegerLiteralContext.prototype.BINARY_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.BINARY_LITERAL, 0);
};

IntegerLiteralContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitIntegerLiteral(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.IntegerLiteralContext = IntegerLiteralContext;

FuzzyJavaParser.prototype.integerLiteral = function() {

    var localctx = new IntegerLiteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, FuzzyJavaParser.RULE_integerLiteral);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 692;
        _la = this._input.LA(1);
        if(!(((((_la - 54)) & ~0x1f) == 0 && ((1 << (_la - 54)) & ((1 << (FuzzyJavaParser.DECIMAL_LITERAL - 54)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 54)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 54)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 54)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FloatLiteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_floatLiteral;
    return this;
}

FloatLiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FloatLiteralContext.prototype.constructor = FloatLiteralContext;

FloatLiteralContext.prototype.FLOAT_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.FLOAT_LITERAL, 0);
};

FloatLiteralContext.prototype.HEX_FLOAT_LITERAL = function() {
    return this.getToken(FuzzyJavaParser.HEX_FLOAT_LITERAL, 0);
};

FloatLiteralContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitFloatLiteral(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.FloatLiteralContext = FloatLiteralContext;

FuzzyJavaParser.prototype.floatLiteral = function() {

    var localctx = new FloatLiteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, FuzzyJavaParser.RULE_floatLiteral);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 694;
        _la = this._input.LA(1);
        if(!(_la===FuzzyJavaParser.FLOAT_LITERAL || _la===FuzzyJavaParser.HEX_FLOAT_LITERAL)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_annotation;
    return this;
}

AnnotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationContext.prototype.constructor = AnnotationContext;

AnnotationContext.prototype.qualifiedName = function() {
    return this.getTypedRuleContext(QualifiedNameContext,0);
};

AnnotationContext.prototype.elementValuePairs = function() {
    return this.getTypedRuleContext(ElementValuePairsContext,0);
};

AnnotationContext.prototype.elementValue = function() {
    return this.getTypedRuleContext(ElementValueContext,0);
};

AnnotationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitAnnotation(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.AnnotationContext = AnnotationContext;

FuzzyJavaParser.prototype.annotation = function() {

    var localctx = new AnnotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, FuzzyJavaParser.RULE_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 696;
        this.match(FuzzyJavaParser.AT);
        this.state = 697;
        this.qualifiedName();
        this.state = 704;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.LPAREN) {
            this.state = 698;
            this.match(FuzzyJavaParser.LPAREN);
            this.state = 701;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,74,this._ctx);
            if(la_===1) {
                this.state = 699;
                this.elementValuePairs();

            } else if(la_===2) {
                this.state = 700;
                this.elementValue();

            }
            this.state = 703;
            this.match(FuzzyJavaParser.RPAREN);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ElementValuePairsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_elementValuePairs;
    return this;
}

ElementValuePairsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ElementValuePairsContext.prototype.constructor = ElementValuePairsContext;

ElementValuePairsContext.prototype.elementValuePair = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ElementValuePairContext);
    } else {
        return this.getTypedRuleContext(ElementValuePairContext,i);
    }
};

ElementValuePairsContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitElementValuePairs(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ElementValuePairsContext = ElementValuePairsContext;

FuzzyJavaParser.prototype.elementValuePairs = function() {

    var localctx = new ElementValuePairsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, FuzzyJavaParser.RULE_elementValuePairs);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 706;
        this.elementValuePair();
        this.state = 711;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.COMMA) {
            this.state = 707;
            this.match(FuzzyJavaParser.COMMA);
            this.state = 708;
            this.elementValuePair();
            this.state = 713;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ElementValuePairContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_elementValuePair;
    return this;
}

ElementValuePairContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ElementValuePairContext.prototype.constructor = ElementValuePairContext;

ElementValuePairContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

ElementValuePairContext.prototype.elementValue = function() {
    return this.getTypedRuleContext(ElementValueContext,0);
};

ElementValuePairContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitElementValuePair(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ElementValuePairContext = ElementValuePairContext;

FuzzyJavaParser.prototype.elementValuePair = function() {

    var localctx = new ElementValuePairContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, FuzzyJavaParser.RULE_elementValuePair);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 714;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 715;
        this.match(FuzzyJavaParser.ASSIGN);
        this.state = 716;
        this.elementValue();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ElementValueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_elementValue;
    return this;
}

ElementValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ElementValueContext.prototype.constructor = ElementValueContext;

ElementValueContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

ElementValueContext.prototype.annotation = function() {
    return this.getTypedRuleContext(AnnotationContext,0);
};

ElementValueContext.prototype.elementValueArrayInitializer = function() {
    return this.getTypedRuleContext(ElementValueArrayInitializerContext,0);
};

ElementValueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitElementValue(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ElementValueContext = ElementValueContext;

FuzzyJavaParser.prototype.elementValue = function() {

    var localctx = new ElementValueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, FuzzyJavaParser.RULE_elementValue);
    try {
        this.state = 721;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,77,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 718;
            this.expression(0);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 719;
            this.annotation();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 720;
            this.elementValueArrayInitializer();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ElementValueArrayInitializerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_elementValueArrayInitializer;
    return this;
}

ElementValueArrayInitializerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ElementValueArrayInitializerContext.prototype.constructor = ElementValueArrayInitializerContext;

ElementValueArrayInitializerContext.prototype.elementValue = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ElementValueContext);
    } else {
        return this.getTypedRuleContext(ElementValueContext,i);
    }
};

ElementValueArrayInitializerContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitElementValueArrayInitializer(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ElementValueArrayInitializerContext = ElementValueArrayInitializerContext;

FuzzyJavaParser.prototype.elementValueArrayInitializer = function() {

    var localctx = new ElementValueArrayInitializerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, FuzzyJavaParser.RULE_elementValueArrayInitializer);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 723;
        this.match(FuzzyJavaParser.LBRACE);
        this.state = 732;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.LBRACE - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 724;
            this.elementValue();
            this.state = 729;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,78,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 725;
                    this.match(FuzzyJavaParser.COMMA);
                    this.state = 726;
                    this.elementValue(); 
                }
                this.state = 731;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,78,this._ctx);
            }

        }

        this.state = 735;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.COMMA) {
            this.state = 734;
            this.match(FuzzyJavaParser.COMMA);
        }

        this.state = 737;
        this.match(FuzzyJavaParser.RBRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationTypeDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_annotationTypeDeclaration;
    return this;
}

AnnotationTypeDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationTypeDeclarationContext.prototype.constructor = AnnotationTypeDeclarationContext;

AnnotationTypeDeclarationContext.prototype.INTERFACE = function() {
    return this.getToken(FuzzyJavaParser.INTERFACE, 0);
};

AnnotationTypeDeclarationContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

AnnotationTypeDeclarationContext.prototype.annotationTypeBody = function() {
    return this.getTypedRuleContext(AnnotationTypeBodyContext,0);
};

AnnotationTypeDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitAnnotationTypeDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.AnnotationTypeDeclarationContext = AnnotationTypeDeclarationContext;

FuzzyJavaParser.prototype.annotationTypeDeclaration = function() {

    var localctx = new AnnotationTypeDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, FuzzyJavaParser.RULE_annotationTypeDeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 739;
        this.match(FuzzyJavaParser.AT);
        this.state = 740;
        this.match(FuzzyJavaParser.INTERFACE);
        this.state = 741;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 742;
        this.annotationTypeBody();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationTypeBodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_annotationTypeBody;
    return this;
}

AnnotationTypeBodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationTypeBodyContext.prototype.constructor = AnnotationTypeBodyContext;

AnnotationTypeBodyContext.prototype.annotationTypeElementDeclaration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationTypeElementDeclarationContext);
    } else {
        return this.getTypedRuleContext(AnnotationTypeElementDeclarationContext,i);
    }
};

AnnotationTypeBodyContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitAnnotationTypeBody(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.AnnotationTypeBodyContext = AnnotationTypeBodyContext;

FuzzyJavaParser.prototype.annotationTypeBody = function() {

    var localctx = new AnnotationTypeBodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, FuzzyJavaParser.RULE_annotationTypeBody);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 744;
        this.match(FuzzyJavaParser.LBRACE);
        this.state = 748;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.ABSTRACT) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.CLASS) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.ENUM) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT) | (1 << FuzzyJavaParser.INTERFACE))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NATIVE - 32)) | (1 << (FuzzyJavaParser.PRIVATE - 32)) | (1 << (FuzzyJavaParser.PROTECTED - 32)) | (1 << (FuzzyJavaParser.PUBLIC - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.STATIC - 32)) | (1 << (FuzzyJavaParser.STRICTFP - 32)) | (1 << (FuzzyJavaParser.SYNCHRONIZED - 32)) | (1 << (FuzzyJavaParser.TRANSIENT - 32)) | (1 << (FuzzyJavaParser.VOLATILE - 32)))) !== 0) || _la===FuzzyJavaParser.SEMI || _la===FuzzyJavaParser.ASSIGN || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 745;
            this.annotationTypeElementDeclaration();
            this.state = 750;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 751;
        this.match(FuzzyJavaParser.RBRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationTypeElementDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_annotationTypeElementDeclaration;
    return this;
}

AnnotationTypeElementDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationTypeElementDeclarationContext.prototype.constructor = AnnotationTypeElementDeclarationContext;

AnnotationTypeElementDeclarationContext.prototype.annotationTypeElementRest = function() {
    return this.getTypedRuleContext(AnnotationTypeElementRestContext,0);
};

AnnotationTypeElementDeclarationContext.prototype.modifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModifierContext);
    } else {
        return this.getTypedRuleContext(ModifierContext,i);
    }
};

AnnotationTypeElementDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitAnnotationTypeElementDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.AnnotationTypeElementDeclarationContext = AnnotationTypeElementDeclarationContext;

FuzzyJavaParser.prototype.annotationTypeElementDeclaration = function() {

    var localctx = new AnnotationTypeElementDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, FuzzyJavaParser.RULE_annotationTypeElementDeclaration);
    try {
        this.state = 761;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.RANDOM_PRIMITIVE:
        case FuzzyJavaParser.RANDOM_NUMERIC:
        case FuzzyJavaParser.ABSTRACT:
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.CLASS:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.ENUM:
        case FuzzyJavaParser.FINAL:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.INTERFACE:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.NATIVE:
        case FuzzyJavaParser.PRIVATE:
        case FuzzyJavaParser.PROTECTED:
        case FuzzyJavaParser.PUBLIC:
        case FuzzyJavaParser.SHORT:
        case FuzzyJavaParser.STATIC:
        case FuzzyJavaParser.STRICTFP:
        case FuzzyJavaParser.SYNCHRONIZED:
        case FuzzyJavaParser.TRANSIENT:
        case FuzzyJavaParser.VOLATILE:
        case FuzzyJavaParser.ASSIGN:
        case FuzzyJavaParser.AT:
        case FuzzyJavaParser.IDENTIFIER:
            this.enterOuterAlt(localctx, 1);
            this.state = 756;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,82,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 753;
                    this.modifier(); 
                }
                this.state = 758;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,82,this._ctx);
            }

            this.state = 759;
            this.annotationTypeElementRest();
            break;
        case FuzzyJavaParser.SEMI:
            this.enterOuterAlt(localctx, 2);
            this.state = 760;
            this.match(FuzzyJavaParser.SEMI);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationTypeElementRestContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_annotationTypeElementRest;
    return this;
}

AnnotationTypeElementRestContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationTypeElementRestContext.prototype.constructor = AnnotationTypeElementRestContext;

AnnotationTypeElementRestContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

AnnotationTypeElementRestContext.prototype.annotationMethodOrConstantRest = function() {
    return this.getTypedRuleContext(AnnotationMethodOrConstantRestContext,0);
};

AnnotationTypeElementRestContext.prototype.classDeclaration = function() {
    return this.getTypedRuleContext(ClassDeclarationContext,0);
};

AnnotationTypeElementRestContext.prototype.interfaceDeclaration = function() {
    return this.getTypedRuleContext(InterfaceDeclarationContext,0);
};

AnnotationTypeElementRestContext.prototype.enumDeclaration = function() {
    return this.getTypedRuleContext(EnumDeclarationContext,0);
};

AnnotationTypeElementRestContext.prototype.annotationTypeDeclaration = function() {
    return this.getTypedRuleContext(AnnotationTypeDeclarationContext,0);
};

AnnotationTypeElementRestContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitAnnotationTypeElementRest(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.AnnotationTypeElementRestContext = AnnotationTypeElementRestContext;

FuzzyJavaParser.prototype.annotationTypeElementRest = function() {

    var localctx = new AnnotationTypeElementRestContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, FuzzyJavaParser.RULE_annotationTypeElementRest);
    try {
        this.state = 783;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,88,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 763;
            this.typeType();
            this.state = 764;
            this.annotationMethodOrConstantRest();
            this.state = 765;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 767;
            this.classDeclaration();
            this.state = 769;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,84,this._ctx);
            if(la_===1) {
                this.state = 768;
                this.match(FuzzyJavaParser.SEMI);

            }
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 771;
            this.interfaceDeclaration();
            this.state = 773;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,85,this._ctx);
            if(la_===1) {
                this.state = 772;
                this.match(FuzzyJavaParser.SEMI);

            }
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 775;
            this.enumDeclaration();
            this.state = 777;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,86,this._ctx);
            if(la_===1) {
                this.state = 776;
                this.match(FuzzyJavaParser.SEMI);

            }
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 779;
            this.annotationTypeDeclaration();
            this.state = 781;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,87,this._ctx);
            if(la_===1) {
                this.state = 780;
                this.match(FuzzyJavaParser.SEMI);

            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationMethodOrConstantRestContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_annotationMethodOrConstantRest;
    return this;
}

AnnotationMethodOrConstantRestContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationMethodOrConstantRestContext.prototype.constructor = AnnotationMethodOrConstantRestContext;

AnnotationMethodOrConstantRestContext.prototype.annotationMethodRest = function() {
    return this.getTypedRuleContext(AnnotationMethodRestContext,0);
};

AnnotationMethodOrConstantRestContext.prototype.annotationConstantRest = function() {
    return this.getTypedRuleContext(AnnotationConstantRestContext,0);
};

AnnotationMethodOrConstantRestContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitAnnotationMethodOrConstantRest(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.AnnotationMethodOrConstantRestContext = AnnotationMethodOrConstantRestContext;

FuzzyJavaParser.prototype.annotationMethodOrConstantRest = function() {

    var localctx = new AnnotationMethodOrConstantRestContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, FuzzyJavaParser.RULE_annotationMethodOrConstantRest);
    try {
        this.state = 787;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,89,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 785;
            this.annotationMethodRest();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 786;
            this.annotationConstantRest();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationMethodRestContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_annotationMethodRest;
    return this;
}

AnnotationMethodRestContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationMethodRestContext.prototype.constructor = AnnotationMethodRestContext;

AnnotationMethodRestContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

AnnotationMethodRestContext.prototype.defaultValue = function() {
    return this.getTypedRuleContext(DefaultValueContext,0);
};

AnnotationMethodRestContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitAnnotationMethodRest(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.AnnotationMethodRestContext = AnnotationMethodRestContext;

FuzzyJavaParser.prototype.annotationMethodRest = function() {

    var localctx = new AnnotationMethodRestContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, FuzzyJavaParser.RULE_annotationMethodRest);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 789;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 790;
        this.match(FuzzyJavaParser.LPAREN);
        this.state = 791;
        this.match(FuzzyJavaParser.RPAREN);
        this.state = 793;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.DEFAULT) {
            this.state = 792;
            this.defaultValue();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationConstantRestContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_annotationConstantRest;
    return this;
}

AnnotationConstantRestContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationConstantRestContext.prototype.constructor = AnnotationConstantRestContext;

AnnotationConstantRestContext.prototype.variableDeclarators = function() {
    return this.getTypedRuleContext(VariableDeclaratorsContext,0);
};

AnnotationConstantRestContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitAnnotationConstantRest(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.AnnotationConstantRestContext = AnnotationConstantRestContext;

FuzzyJavaParser.prototype.annotationConstantRest = function() {

    var localctx = new AnnotationConstantRestContext(this, this._ctx, this.state);
    this.enterRule(localctx, 122, FuzzyJavaParser.RULE_annotationConstantRest);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 795;
        this.variableDeclarators();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DefaultValueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_defaultValue;
    return this;
}

DefaultValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DefaultValueContext.prototype.constructor = DefaultValueContext;

DefaultValueContext.prototype.DEFAULT = function() {
    return this.getToken(FuzzyJavaParser.DEFAULT, 0);
};

DefaultValueContext.prototype.elementValue = function() {
    return this.getTypedRuleContext(ElementValueContext,0);
};

DefaultValueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitDefaultValue(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.DefaultValueContext = DefaultValueContext;

FuzzyJavaParser.prototype.defaultValue = function() {

    var localctx = new DefaultValueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 124, FuzzyJavaParser.RULE_defaultValue);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 797;
        this.match(FuzzyJavaParser.DEFAULT);
        this.state = 798;
        this.elementValue();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BlockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_block;
    return this;
}

BlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BlockContext.prototype.constructor = BlockContext;

BlockContext.prototype.blockStatements = function() {
    return this.getTypedRuleContext(BlockStatementsContext,0);
};

BlockContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitBlock(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.BlockContext = BlockContext;

FuzzyJavaParser.prototype.block = function() {

    var localctx = new BlockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 126, FuzzyJavaParser.RULE_block);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 800;
        this.match(FuzzyJavaParser.LBRACE);
        this.state = 801;
        this.blockStatements();
        this.state = 802;
        this.match(FuzzyJavaParser.RBRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BlockStatementsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_blockStatements;
    return this;
}

BlockStatementsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BlockStatementsContext.prototype.constructor = BlockStatementsContext;

BlockStatementsContext.prototype.blockStatement = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(BlockStatementContext);
    } else {
        return this.getTypedRuleContext(BlockStatementContext,i);
    }
};

BlockStatementsContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitBlockStatements(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.BlockStatementsContext = BlockStatementsContext;

FuzzyJavaParser.prototype.blockStatements = function() {

    var localctx = new BlockStatementsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 128, FuzzyJavaParser.RULE_blockStatements);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 807;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.ABSTRACT) | (1 << FuzzyJavaParser.ASSERT) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BREAK) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.CLASS) | (1 << FuzzyJavaParser.CONTINUE) | (1 << FuzzyJavaParser.DO) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.FOR) | (1 << FuzzyJavaParser.IF) | (1 << FuzzyJavaParser.INT) | (1 << FuzzyJavaParser.INTERFACE))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.PRIVATE - 32)) | (1 << (FuzzyJavaParser.PROTECTED - 32)) | (1 << (FuzzyJavaParser.PUBLIC - 32)) | (1 << (FuzzyJavaParser.RETURN - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.STATIC - 32)) | (1 << (FuzzyJavaParser.STRICTFP - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.SWITCH - 32)) | (1 << (FuzzyJavaParser.SYNCHRONIZED - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.THROW - 32)) | (1 << (FuzzyJavaParser.TRY - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.WHILE - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.LBRACE - 64)) | (1 << (FuzzyJavaParser.SEMI - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 804;
            this.blockStatement();
            this.state = 809;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BlockStatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_blockStatement;
    return this;
}

BlockStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BlockStatementContext.prototype.constructor = BlockStatementContext;

BlockStatementContext.prototype.localVariableDeclaration = function() {
    return this.getTypedRuleContext(LocalVariableDeclarationContext,0);
};

BlockStatementContext.prototype.statement = function() {
    return this.getTypedRuleContext(StatementContext,0);
};

BlockStatementContext.prototype.localTypeDeclaration = function() {
    return this.getTypedRuleContext(LocalTypeDeclarationContext,0);
};

BlockStatementContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitBlockStatement(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.BlockStatementContext = BlockStatementContext;

FuzzyJavaParser.prototype.blockStatement = function() {

    var localctx = new BlockStatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, FuzzyJavaParser.RULE_blockStatement);
    try {
        this.state = 815;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,92,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 810;
            this.localVariableDeclaration();
            this.state = 811;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 813;
            this.statement();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 814;
            this.localTypeDeclaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LocalVariableDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_localVariableDeclaration;
    return this;
}

LocalVariableDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LocalVariableDeclarationContext.prototype.constructor = LocalVariableDeclarationContext;

LocalVariableDeclarationContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

LocalVariableDeclarationContext.prototype.variableDeclarators = function() {
    return this.getTypedRuleContext(VariableDeclaratorsContext,0);
};

LocalVariableDeclarationContext.prototype.variableModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariableModifierContext);
    } else {
        return this.getTypedRuleContext(VariableModifierContext,i);
    }
};

LocalVariableDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitLocalVariableDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.LocalVariableDeclarationContext = LocalVariableDeclarationContext;

FuzzyJavaParser.prototype.localVariableDeclaration = function() {

    var localctx = new LocalVariableDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 132, FuzzyJavaParser.RULE_localVariableDeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 820;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,93,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 817;
                this.variableModifier(); 
            }
            this.state = 822;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,93,this._ctx);
        }

        this.state = 823;
        this.typeType();
        this.state = 824;
        this.variableDeclarators();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LocalTypeDeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_localTypeDeclaration;
    return this;
}

LocalTypeDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LocalTypeDeclarationContext.prototype.constructor = LocalTypeDeclarationContext;

LocalTypeDeclarationContext.prototype.classDeclaration = function() {
    return this.getTypedRuleContext(ClassDeclarationContext,0);
};

LocalTypeDeclarationContext.prototype.interfaceDeclaration = function() {
    return this.getTypedRuleContext(InterfaceDeclarationContext,0);
};

LocalTypeDeclarationContext.prototype.classOrInterfaceModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ClassOrInterfaceModifierContext);
    } else {
        return this.getTypedRuleContext(ClassOrInterfaceModifierContext,i);
    }
};

LocalTypeDeclarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitLocalTypeDeclaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.LocalTypeDeclarationContext = LocalTypeDeclarationContext;

FuzzyJavaParser.prototype.localTypeDeclaration = function() {

    var localctx = new LocalTypeDeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, FuzzyJavaParser.RULE_localTypeDeclaration);
    var _la = 0; // Token type
    try {
        this.state = 837;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.ABSTRACT:
        case FuzzyJavaParser.CLASS:
        case FuzzyJavaParser.FINAL:
        case FuzzyJavaParser.INTERFACE:
        case FuzzyJavaParser.PRIVATE:
        case FuzzyJavaParser.PROTECTED:
        case FuzzyJavaParser.PUBLIC:
        case FuzzyJavaParser.STATIC:
        case FuzzyJavaParser.STRICTFP:
        case FuzzyJavaParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 829;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===FuzzyJavaParser.ABSTRACT || _la===FuzzyJavaParser.FINAL || ((((_la - 36)) & ~0x1f) == 0 && ((1 << (_la - 36)) & ((1 << (FuzzyJavaParser.PRIVATE - 36)) | (1 << (FuzzyJavaParser.PROTECTED - 36)) | (1 << (FuzzyJavaParser.PUBLIC - 36)) | (1 << (FuzzyJavaParser.STATIC - 36)) | (1 << (FuzzyJavaParser.STRICTFP - 36)))) !== 0) || _la===FuzzyJavaParser.AT) {
                this.state = 826;
                this.classOrInterfaceModifier();
                this.state = 831;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 834;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case FuzzyJavaParser.CLASS:
                this.state = 832;
                this.classDeclaration();
                break;
            case FuzzyJavaParser.INTERFACE:
                this.state = 833;
                this.interfaceDeclaration();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            break;
        case FuzzyJavaParser.SEMI:
            this.enterOuterAlt(localctx, 2);
            this.state = 836;
            this.match(FuzzyJavaParser.SEMI);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function StatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_statement;
    this.blockLabel = null; // BlockContext
    this.statementExpression = null; // ExpressionContext
    this.identifierLabel = null; // Token
    return this;
}

StatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StatementContext.prototype.constructor = StatementContext;

StatementContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

StatementContext.prototype.ASSERT = function() {
    return this.getToken(FuzzyJavaParser.ASSERT, 0);
};

StatementContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

StatementContext.prototype.IF = function() {
    return this.getToken(FuzzyJavaParser.IF, 0);
};

StatementContext.prototype.parExpression = function() {
    return this.getTypedRuleContext(ParExpressionContext,0);
};

StatementContext.prototype.statement = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(StatementContext);
    } else {
        return this.getTypedRuleContext(StatementContext,i);
    }
};

StatementContext.prototype.ELSE = function() {
    return this.getToken(FuzzyJavaParser.ELSE, 0);
};

StatementContext.prototype.FOR = function() {
    return this.getToken(FuzzyJavaParser.FOR, 0);
};

StatementContext.prototype.forControl = function() {
    return this.getTypedRuleContext(ForControlContext,0);
};

StatementContext.prototype.WHILE = function() {
    return this.getToken(FuzzyJavaParser.WHILE, 0);
};

StatementContext.prototype.DO = function() {
    return this.getToken(FuzzyJavaParser.DO, 0);
};

StatementContext.prototype.TRY = function() {
    return this.getToken(FuzzyJavaParser.TRY, 0);
};

StatementContext.prototype.finallyBlock = function() {
    return this.getTypedRuleContext(FinallyBlockContext,0);
};

StatementContext.prototype.catchClause = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(CatchClauseContext);
    } else {
        return this.getTypedRuleContext(CatchClauseContext,i);
    }
};

StatementContext.prototype.resourceSpecification = function() {
    return this.getTypedRuleContext(ResourceSpecificationContext,0);
};

StatementContext.prototype.SWITCH = function() {
    return this.getToken(FuzzyJavaParser.SWITCH, 0);
};

StatementContext.prototype.switchBlockStatementGroup = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(SwitchBlockStatementGroupContext);
    } else {
        return this.getTypedRuleContext(SwitchBlockStatementGroupContext,i);
    }
};

StatementContext.prototype.switchLabel = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(SwitchLabelContext);
    } else {
        return this.getTypedRuleContext(SwitchLabelContext,i);
    }
};

StatementContext.prototype.SYNCHRONIZED = function() {
    return this.getToken(FuzzyJavaParser.SYNCHRONIZED, 0);
};

StatementContext.prototype.RETURN = function() {
    return this.getToken(FuzzyJavaParser.RETURN, 0);
};

StatementContext.prototype.THROW = function() {
    return this.getToken(FuzzyJavaParser.THROW, 0);
};

StatementContext.prototype.BREAK = function() {
    return this.getToken(FuzzyJavaParser.BREAK, 0);
};

StatementContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

StatementContext.prototype.CONTINUE = function() {
    return this.getToken(FuzzyJavaParser.CONTINUE, 0);
};

StatementContext.prototype.SEMI = function() {
    return this.getToken(FuzzyJavaParser.SEMI, 0);
};

StatementContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitStatement(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.StatementContext = StatementContext;

FuzzyJavaParser.prototype.statement = function() {

    var localctx = new StatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, FuzzyJavaParser.RULE_statement);
    var _la = 0; // Token type
    try {
        this.state = 943;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,109,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 839;
            localctx.blockLabel = this.block();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 840;
            this.match(FuzzyJavaParser.ASSERT);
            this.state = 841;
            this.expression(0);
            this.state = 844;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.COLON) {
                this.state = 842;
                this.match(FuzzyJavaParser.COLON);
                this.state = 843;
                this.expression(0);
            }

            this.state = 846;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 848;
            this.match(FuzzyJavaParser.IF);
            this.state = 849;
            this.parExpression();
            this.state = 850;
            this.statement();
            this.state = 853;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,98,this._ctx);
            if(la_===1) {
                this.state = 851;
                this.match(FuzzyJavaParser.ELSE);
                this.state = 852;
                this.statement();

            }
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 855;
            this.match(FuzzyJavaParser.FOR);
            this.state = 856;
            this.match(FuzzyJavaParser.LPAREN);
            this.state = 857;
            this.forControl();
            this.state = 858;
            this.match(FuzzyJavaParser.RPAREN);
            this.state = 859;
            this.statement();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 861;
            this.match(FuzzyJavaParser.WHILE);
            this.state = 862;
            this.parExpression();
            this.state = 863;
            this.statement();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 865;
            this.match(FuzzyJavaParser.DO);
            this.state = 866;
            this.statement();
            this.state = 867;
            this.match(FuzzyJavaParser.WHILE);
            this.state = 868;
            this.parExpression();
            this.state = 869;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 871;
            this.match(FuzzyJavaParser.TRY);
            this.state = 872;
            this.block();
            this.state = 882;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case FuzzyJavaParser.CATCH:
                this.state = 874; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 873;
                    this.catchClause();
                    this.state = 876; 
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while(_la===FuzzyJavaParser.CATCH);
                this.state = 879;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===FuzzyJavaParser.FINALLY) {
                    this.state = 878;
                    this.finallyBlock();
                }

                break;
            case FuzzyJavaParser.FINALLY:
                this.state = 881;
                this.finallyBlock();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 884;
            this.match(FuzzyJavaParser.TRY);
            this.state = 885;
            this.resourceSpecification();
            this.state = 886;
            this.block();
            this.state = 890;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===FuzzyJavaParser.CATCH) {
                this.state = 887;
                this.catchClause();
                this.state = 892;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 894;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.FINALLY) {
                this.state = 893;
                this.finallyBlock();
            }

            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 896;
            this.match(FuzzyJavaParser.SWITCH);
            this.state = 897;
            this.parExpression();
            this.state = 898;
            this.match(FuzzyJavaParser.LBRACE);
            this.state = 902;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,104,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 899;
                    this.switchBlockStatementGroup(); 
                }
                this.state = 904;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,104,this._ctx);
            }

            this.state = 908;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===FuzzyJavaParser.CASE || _la===FuzzyJavaParser.DEFAULT) {
                this.state = 905;
                this.switchLabel();
                this.state = 910;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 911;
            this.match(FuzzyJavaParser.RBRACE);
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 913;
            this.match(FuzzyJavaParser.SYNCHRONIZED);
            this.state = 914;
            this.parExpression();
            this.state = 915;
            this.block();
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 917;
            this.match(FuzzyJavaParser.RETURN);
            this.state = 919;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
                this.state = 918;
                this.expression(0);
            }

            this.state = 921;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 12:
            this.enterOuterAlt(localctx, 12);
            this.state = 922;
            this.match(FuzzyJavaParser.THROW);
            this.state = 923;
            this.expression(0);
            this.state = 924;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 13:
            this.enterOuterAlt(localctx, 13);
            this.state = 926;
            this.match(FuzzyJavaParser.BREAK);
            this.state = 928;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.IDENTIFIER) {
                this.state = 927;
                this.match(FuzzyJavaParser.IDENTIFIER);
            }

            this.state = 930;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 14:
            this.enterOuterAlt(localctx, 14);
            this.state = 931;
            this.match(FuzzyJavaParser.CONTINUE);
            this.state = 933;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.IDENTIFIER) {
                this.state = 932;
                this.match(FuzzyJavaParser.IDENTIFIER);
            }

            this.state = 935;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 15:
            this.enterOuterAlt(localctx, 15);
            this.state = 936;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 16:
            this.enterOuterAlt(localctx, 16);
            this.state = 937;
            localctx.statementExpression = this.expression(0);
            this.state = 938;
            this.match(FuzzyJavaParser.SEMI);
            break;

        case 17:
            this.enterOuterAlt(localctx, 17);
            this.state = 940;
            localctx.identifierLabel = this.match(FuzzyJavaParser.IDENTIFIER);
            this.state = 941;
            this.match(FuzzyJavaParser.COLON);
            this.state = 942;
            this.statement();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CatchClauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_catchClause;
    return this;
}

CatchClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CatchClauseContext.prototype.constructor = CatchClauseContext;

CatchClauseContext.prototype.CATCH = function() {
    return this.getToken(FuzzyJavaParser.CATCH, 0);
};

CatchClauseContext.prototype.catchType = function() {
    return this.getTypedRuleContext(CatchTypeContext,0);
};

CatchClauseContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

CatchClauseContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

CatchClauseContext.prototype.variableModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariableModifierContext);
    } else {
        return this.getTypedRuleContext(VariableModifierContext,i);
    }
};

CatchClauseContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitCatchClause(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.CatchClauseContext = CatchClauseContext;

FuzzyJavaParser.prototype.catchClause = function() {

    var localctx = new CatchClauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, FuzzyJavaParser.RULE_catchClause);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 945;
        this.match(FuzzyJavaParser.CATCH);
        this.state = 946;
        this.match(FuzzyJavaParser.LPAREN);
        this.state = 950;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.FINAL || _la===FuzzyJavaParser.AT) {
            this.state = 947;
            this.variableModifier();
            this.state = 952;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 953;
        this.catchType();
        this.state = 954;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 955;
        this.match(FuzzyJavaParser.RPAREN);
        this.state = 956;
        this.block();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CatchTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_catchType;
    return this;
}

CatchTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CatchTypeContext.prototype.constructor = CatchTypeContext;

CatchTypeContext.prototype.qualifiedName = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(QualifiedNameContext);
    } else {
        return this.getTypedRuleContext(QualifiedNameContext,i);
    }
};

CatchTypeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitCatchType(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.CatchTypeContext = CatchTypeContext;

FuzzyJavaParser.prototype.catchType = function() {

    var localctx = new CatchTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, FuzzyJavaParser.RULE_catchType);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 958;
        this.qualifiedName();
        this.state = 963;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.BITOR) {
            this.state = 959;
            this.match(FuzzyJavaParser.BITOR);
            this.state = 960;
            this.qualifiedName();
            this.state = 965;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FinallyBlockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_finallyBlock;
    return this;
}

FinallyBlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FinallyBlockContext.prototype.constructor = FinallyBlockContext;

FinallyBlockContext.prototype.FINALLY = function() {
    return this.getToken(FuzzyJavaParser.FINALLY, 0);
};

FinallyBlockContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

FinallyBlockContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitFinallyBlock(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.FinallyBlockContext = FinallyBlockContext;

FuzzyJavaParser.prototype.finallyBlock = function() {

    var localctx = new FinallyBlockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, FuzzyJavaParser.RULE_finallyBlock);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 966;
        this.match(FuzzyJavaParser.FINALLY);
        this.state = 967;
        this.block();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ResourceSpecificationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_resourceSpecification;
    return this;
}

ResourceSpecificationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ResourceSpecificationContext.prototype.constructor = ResourceSpecificationContext;

ResourceSpecificationContext.prototype.resources = function() {
    return this.getTypedRuleContext(ResourcesContext,0);
};

ResourceSpecificationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitResourceSpecification(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ResourceSpecificationContext = ResourceSpecificationContext;

FuzzyJavaParser.prototype.resourceSpecification = function() {

    var localctx = new ResourceSpecificationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, FuzzyJavaParser.RULE_resourceSpecification);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 969;
        this.match(FuzzyJavaParser.LPAREN);
        this.state = 970;
        this.resources();
        this.state = 972;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.SEMI) {
            this.state = 971;
            this.match(FuzzyJavaParser.SEMI);
        }

        this.state = 974;
        this.match(FuzzyJavaParser.RPAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ResourcesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_resources;
    return this;
}

ResourcesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ResourcesContext.prototype.constructor = ResourcesContext;

ResourcesContext.prototype.resource = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ResourceContext);
    } else {
        return this.getTypedRuleContext(ResourceContext,i);
    }
};

ResourcesContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitResources(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ResourcesContext = ResourcesContext;

FuzzyJavaParser.prototype.resources = function() {

    var localctx = new ResourcesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, FuzzyJavaParser.RULE_resources);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 976;
        this.resource();
        this.state = 981;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,113,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 977;
                this.match(FuzzyJavaParser.SEMI);
                this.state = 978;
                this.resource(); 
            }
            this.state = 983;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,113,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ResourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_resource;
    return this;
}

ResourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ResourceContext.prototype.constructor = ResourceContext;

ResourceContext.prototype.classOrInterfaceType = function() {
    return this.getTypedRuleContext(ClassOrInterfaceTypeContext,0);
};

ResourceContext.prototype.variableDeclaratorId = function() {
    return this.getTypedRuleContext(VariableDeclaratorIdContext,0);
};

ResourceContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

ResourceContext.prototype.variableModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariableModifierContext);
    } else {
        return this.getTypedRuleContext(VariableModifierContext,i);
    }
};

ResourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitResource(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ResourceContext = ResourceContext;

FuzzyJavaParser.prototype.resource = function() {

    var localctx = new ResourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, FuzzyJavaParser.RULE_resource);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 987;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.FINAL || _la===FuzzyJavaParser.AT) {
            this.state = 984;
            this.variableModifier();
            this.state = 989;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 990;
        this.classOrInterfaceType();
        this.state = 991;
        this.variableDeclaratorId();
        this.state = 992;
        this.match(FuzzyJavaParser.ASSIGN);
        this.state = 993;
        this.expression(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SwitchBlockStatementGroupContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_switchBlockStatementGroup;
    return this;
}

SwitchBlockStatementGroupContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SwitchBlockStatementGroupContext.prototype.constructor = SwitchBlockStatementGroupContext;

SwitchBlockStatementGroupContext.prototype.switchLabel = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(SwitchLabelContext);
    } else {
        return this.getTypedRuleContext(SwitchLabelContext,i);
    }
};

SwitchBlockStatementGroupContext.prototype.blockStatement = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(BlockStatementContext);
    } else {
        return this.getTypedRuleContext(BlockStatementContext,i);
    }
};

SwitchBlockStatementGroupContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitSwitchBlockStatementGroup(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.SwitchBlockStatementGroupContext = SwitchBlockStatementGroupContext;

FuzzyJavaParser.prototype.switchBlockStatementGroup = function() {

    var localctx = new SwitchBlockStatementGroupContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, FuzzyJavaParser.RULE_switchBlockStatementGroup);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 996; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 995;
            this.switchLabel();
            this.state = 998; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===FuzzyJavaParser.CASE || _la===FuzzyJavaParser.DEFAULT);
        this.state = 1001; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1000;
            this.blockStatement();
            this.state = 1003; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.ABSTRACT) | (1 << FuzzyJavaParser.ASSERT) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BREAK) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.CLASS) | (1 << FuzzyJavaParser.CONTINUE) | (1 << FuzzyJavaParser.DO) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.FOR) | (1 << FuzzyJavaParser.IF) | (1 << FuzzyJavaParser.INT) | (1 << FuzzyJavaParser.INTERFACE))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.PRIVATE - 32)) | (1 << (FuzzyJavaParser.PROTECTED - 32)) | (1 << (FuzzyJavaParser.PUBLIC - 32)) | (1 << (FuzzyJavaParser.RETURN - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.STATIC - 32)) | (1 << (FuzzyJavaParser.STRICTFP - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.SWITCH - 32)) | (1 << (FuzzyJavaParser.SYNCHRONIZED - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.THROW - 32)) | (1 << (FuzzyJavaParser.TRY - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.WHILE - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.LBRACE - 64)) | (1 << (FuzzyJavaParser.SEMI - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SwitchLabelContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_switchLabel;
    this.constantExpression = null; // ExpressionContext
    this.enumConstantName = null; // Token
    return this;
}

SwitchLabelContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SwitchLabelContext.prototype.constructor = SwitchLabelContext;

SwitchLabelContext.prototype.CASE = function() {
    return this.getToken(FuzzyJavaParser.CASE, 0);
};

SwitchLabelContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

SwitchLabelContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

SwitchLabelContext.prototype.DEFAULT = function() {
    return this.getToken(FuzzyJavaParser.DEFAULT, 0);
};

SwitchLabelContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitSwitchLabel(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.SwitchLabelContext = SwitchLabelContext;

FuzzyJavaParser.prototype.switchLabel = function() {

    var localctx = new SwitchLabelContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, FuzzyJavaParser.RULE_switchLabel);
    try {
        this.state = 1013;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.CASE:
            this.enterOuterAlt(localctx, 1);
            this.state = 1005;
            this.match(FuzzyJavaParser.CASE);
            this.state = 1008;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,117,this._ctx);
            switch(la_) {
            case 1:
                this.state = 1006;
                localctx.constantExpression = this.expression(0);
                break;

            case 2:
                this.state = 1007;
                localctx.enumConstantName = this.match(FuzzyJavaParser.IDENTIFIER);
                break;

            }
            this.state = 1010;
            this.match(FuzzyJavaParser.COLON);
            break;
        case FuzzyJavaParser.DEFAULT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1011;
            this.match(FuzzyJavaParser.DEFAULT);
            this.state = 1012;
            this.match(FuzzyJavaParser.COLON);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ForControlContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_forControl;
    this.forUpdate = null; // ExpressionListContext
    return this;
}

ForControlContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ForControlContext.prototype.constructor = ForControlContext;

ForControlContext.prototype.enhancedForControl = function() {
    return this.getTypedRuleContext(EnhancedForControlContext,0);
};

ForControlContext.prototype.forInit = function() {
    return this.getTypedRuleContext(ForInitContext,0);
};

ForControlContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

ForControlContext.prototype.expressionList = function() {
    return this.getTypedRuleContext(ExpressionListContext,0);
};

ForControlContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitForControl(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ForControlContext = ForControlContext;

FuzzyJavaParser.prototype.forControl = function() {

    var localctx = new ForControlContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, FuzzyJavaParser.RULE_forControl);
    var _la = 0; // Token type
    try {
        this.state = 1027;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,122,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1015;
            this.enhancedForControl();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1017;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
                this.state = 1016;
                this.forInit();
            }

            this.state = 1019;
            this.match(FuzzyJavaParser.SEMI);
            this.state = 1021;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
                this.state = 1020;
                this.expression(0);
            }

            this.state = 1023;
            this.match(FuzzyJavaParser.SEMI);
            this.state = 1025;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
                this.state = 1024;
                localctx.forUpdate = this.expressionList();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ForInitContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_forInit;
    return this;
}

ForInitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ForInitContext.prototype.constructor = ForInitContext;

ForInitContext.prototype.localVariableDeclaration = function() {
    return this.getTypedRuleContext(LocalVariableDeclarationContext,0);
};

ForInitContext.prototype.expressionList = function() {
    return this.getTypedRuleContext(ExpressionListContext,0);
};

ForInitContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitForInit(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ForInitContext = ForInitContext;

FuzzyJavaParser.prototype.forInit = function() {

    var localctx = new ForInitContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, FuzzyJavaParser.RULE_forInit);
    try {
        this.state = 1031;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,123,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1029;
            this.localVariableDeclaration();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1030;
            this.expressionList();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnhancedForControlContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_enhancedForControl;
    return this;
}

EnhancedForControlContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnhancedForControlContext.prototype.constructor = EnhancedForControlContext;

EnhancedForControlContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

EnhancedForControlContext.prototype.variableDeclaratorId = function() {
    return this.getTypedRuleContext(VariableDeclaratorIdContext,0);
};

EnhancedForControlContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

EnhancedForControlContext.prototype.variableModifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariableModifierContext);
    } else {
        return this.getTypedRuleContext(VariableModifierContext,i);
    }
};

EnhancedForControlContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitEnhancedForControl(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.EnhancedForControlContext = EnhancedForControlContext;

FuzzyJavaParser.prototype.enhancedForControl = function() {

    var localctx = new EnhancedForControlContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, FuzzyJavaParser.RULE_enhancedForControl);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1036;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,124,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1033;
                this.variableModifier(); 
            }
            this.state = 1038;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,124,this._ctx);
        }

        this.state = 1039;
        this.typeType();
        this.state = 1040;
        this.variableDeclaratorId();
        this.state = 1041;
        this.match(FuzzyJavaParser.COLON);
        this.state = 1042;
        this.expression(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ParExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_parExpression;
    return this;
}

ParExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParExpressionContext.prototype.constructor = ParExpressionContext;

ParExpressionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

ParExpressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitParExpression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ParExpressionContext = ParExpressionContext;

FuzzyJavaParser.prototype.parExpression = function() {

    var localctx = new ParExpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, FuzzyJavaParser.RULE_parExpression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1044;
        this.match(FuzzyJavaParser.LPAREN);
        this.state = 1045;
        this.expression(0);
        this.state = 1046;
        this.match(FuzzyJavaParser.RPAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExpressionListContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_expressionList;
    return this;
}

ExpressionListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionListContext.prototype.constructor = ExpressionListContext;

ExpressionListContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

ExpressionListContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitExpressionList(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ExpressionListContext = ExpressionListContext;

FuzzyJavaParser.prototype.expressionList = function() {

    var localctx = new ExpressionListContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, FuzzyJavaParser.RULE_expressionList);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1048;
        this.expression(0);
        this.state = 1053;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.COMMA) {
            this.state = 1049;
            this.match(FuzzyJavaParser.COMMA);
            this.state = 1050;
            this.expression(0);
            this.state = 1055;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_expression;
    this.prefix = null; // Token
    this.bop = null; // Token
    this.postfix = null; // Token
    return this;
}

ExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionContext.prototype.constructor = ExpressionContext;

ExpressionContext.prototype.primary = function() {
    return this.getTypedRuleContext(PrimaryContext,0);
};

ExpressionContext.prototype.NEW = function() {
    return this.getToken(FuzzyJavaParser.NEW, 0);
};

ExpressionContext.prototype.creator = function() {
    return this.getTypedRuleContext(CreatorContext,0);
};

ExpressionContext.prototype.typeType = function() {
    return this.getTypedRuleContext(TypeTypeContext,0);
};

ExpressionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

ExpressionContext.prototype.lambdaExpression = function() {
    return this.getTypedRuleContext(LambdaExpressionContext,0);
};

ExpressionContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

ExpressionContext.prototype.typeArguments = function() {
    return this.getTypedRuleContext(TypeArgumentsContext,0);
};

ExpressionContext.prototype.classType = function() {
    return this.getTypedRuleContext(ClassTypeContext,0);
};

ExpressionContext.prototype.RANDOM_ASSIGN = function() {
    return this.getToken(FuzzyJavaParser.RANDOM_ASSIGN, 0);
};

ExpressionContext.prototype.THIS = function() {
    return this.getToken(FuzzyJavaParser.THIS, 0);
};

ExpressionContext.prototype.innerCreator = function() {
    return this.getTypedRuleContext(InnerCreatorContext,0);
};

ExpressionContext.prototype.SUPER = function() {
    return this.getToken(FuzzyJavaParser.SUPER, 0);
};

ExpressionContext.prototype.superSuffix = function() {
    return this.getTypedRuleContext(SuperSuffixContext,0);
};

ExpressionContext.prototype.explicitGenericInvocation = function() {
    return this.getTypedRuleContext(ExplicitGenericInvocationContext,0);
};

ExpressionContext.prototype.nonWildcardTypeArguments = function() {
    return this.getTypedRuleContext(NonWildcardTypeArgumentsContext,0);
};

ExpressionContext.prototype.expressionList = function() {
    return this.getTypedRuleContext(ExpressionListContext,0);
};

ExpressionContext.prototype.INSTANCEOF = function() {
    return this.getToken(FuzzyJavaParser.INSTANCEOF, 0);
};

ExpressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitExpression(this);
    } else {
        return visitor.visitChildren(this);
    }
};



FuzzyJavaParser.prototype.expression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new ExpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 164;
    this.enterRecursionRule(localctx, 164, FuzzyJavaParser.RULE_expression, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1086;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,129,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1057;
            this.primary();
            break;

        case 2:
            this.state = 1058;
            this.match(FuzzyJavaParser.NEW);
            this.state = 1059;
            this.creator();
            break;

        case 3:
            this.state = 1060;
            this.match(FuzzyJavaParser.LPAREN);
            this.state = 1061;
            this.typeType();
            this.state = 1062;
            this.match(FuzzyJavaParser.RPAREN);
            this.state = 1063;
            this.expression(21);
            break;

        case 4:
            this.state = 1065;
            localctx.prefix = this._input.LT(1);
            _la = this._input.LA(1);
            if(!(((((_la - 86)) & ~0x1f) == 0 && ((1 << (_la - 86)) & ((1 << (FuzzyJavaParser.INC - 86)) | (1 << (FuzzyJavaParser.DEC - 86)) | (1 << (FuzzyJavaParser.ADD - 86)) | (1 << (FuzzyJavaParser.SUB - 86)))) !== 0))) {
                localctx.prefix = this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 1066;
            this.expression(19);
            break;

        case 5:
            this.state = 1067;
            localctx.prefix = this._input.LT(1);
            _la = this._input.LA(1);
            if(!(_la===FuzzyJavaParser.BANG || _la===FuzzyJavaParser.TILDE)) {
                localctx.prefix = this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 1068;
            this.expression(18);
            break;

        case 6:
            this.state = 1069;
            this.lambdaExpression();
            break;

        case 7:
            this.state = 1070;
            this.typeType();
            this.state = 1071;
            this.match(FuzzyJavaParser.COLONCOLON);
            this.state = 1077;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case FuzzyJavaParser.LT:
            case FuzzyJavaParser.IDENTIFIER:
                this.state = 1073;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===FuzzyJavaParser.LT) {
                    this.state = 1072;
                    this.typeArguments();
                }

                this.state = 1075;
                this.match(FuzzyJavaParser.IDENTIFIER);
                break;
            case FuzzyJavaParser.NEW:
                this.state = 1076;
                this.match(FuzzyJavaParser.NEW);
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            break;

        case 8:
            this.state = 1079;
            this.classType();
            this.state = 1080;
            this.match(FuzzyJavaParser.COLONCOLON);
            this.state = 1082;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.LT) {
                this.state = 1081;
                this.typeArguments();
            }

            this.state = 1084;
            this.match(FuzzyJavaParser.NEW);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1173;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,136,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1171;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,135,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1088;
                    if (!( this.precpred(this._ctx, 17))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 17)");
                    }
                    this.state = 1089;
                    localctx.bop = this._input.LT(1);
                    _la = this._input.LA(1);
                    if(!(((((_la - 90)) & ~0x1f) == 0 && ((1 << (_la - 90)) & ((1 << (FuzzyJavaParser.MUL - 90)) | (1 << (FuzzyJavaParser.DIV - 90)) | (1 << (FuzzyJavaParser.MOD - 90)))) !== 0))) {
                        localctx.bop = this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 1090;
                    this.expression(18);
                    break;

                case 2:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1091;
                    if (!( this.precpred(this._ctx, 16))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 16)");
                    }
                    this.state = 1092;
                    localctx.bop = this._input.LT(1);
                    _la = this._input.LA(1);
                    if(!(_la===FuzzyJavaParser.ADD || _la===FuzzyJavaParser.SUB)) {
                        localctx.bop = this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 1093;
                    this.expression(17);
                    break;

                case 3:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1094;
                    if (!( this.precpred(this._ctx, 15))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 15)");
                    }
                    this.state = 1102;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input,130,this._ctx);
                    switch(la_) {
                    case 1:
                        this.state = 1095;
                        this.match(FuzzyJavaParser.LT);
                        this.state = 1096;
                        this.match(FuzzyJavaParser.LT);
                        break;

                    case 2:
                        this.state = 1097;
                        this.match(FuzzyJavaParser.GT);
                        this.state = 1098;
                        this.match(FuzzyJavaParser.GT);
                        this.state = 1099;
                        this.match(FuzzyJavaParser.GT);
                        break;

                    case 3:
                        this.state = 1100;
                        this.match(FuzzyJavaParser.GT);
                        this.state = 1101;
                        this.match(FuzzyJavaParser.GT);
                        break;

                    }
                    this.state = 1104;
                    this.expression(16);
                    break;

                case 4:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1105;
                    if (!( this.precpred(this._ctx, 14))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 14)");
                    }
                    this.state = 1106;
                    localctx.bop = this._input.LT(1);
                    _la = this._input.LA(1);
                    if(!(((((_la - 74)) & ~0x1f) == 0 && ((1 << (_la - 74)) & ((1 << (FuzzyJavaParser.GT - 74)) | (1 << (FuzzyJavaParser.LT - 74)) | (1 << (FuzzyJavaParser.LE - 74)) | (1 << (FuzzyJavaParser.GE - 74)))) !== 0))) {
                        localctx.bop = this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 1107;
                    this.expression(15);
                    break;

                case 5:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1108;
                    if (!( this.precpred(this._ctx, 12))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 12)");
                    }
                    this.state = 1109;
                    localctx.bop = this._input.LT(1);
                    _la = this._input.LA(1);
                    if(!(_la===FuzzyJavaParser.EQUAL || _la===FuzzyJavaParser.NOTEQUAL)) {
                        localctx.bop = this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 1110;
                    this.expression(13);
                    break;

                case 6:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1111;
                    if (!( this.precpred(this._ctx, 11))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 11)");
                    }
                    this.state = 1112;
                    localctx.bop = this.match(FuzzyJavaParser.BITAND);
                    this.state = 1113;
                    this.expression(12);
                    break;

                case 7:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1114;
                    if (!( this.precpred(this._ctx, 10))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
                    }
                    this.state = 1115;
                    localctx.bop = this.match(FuzzyJavaParser.CARET);
                    this.state = 1116;
                    this.expression(11);
                    break;

                case 8:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1117;
                    if (!( this.precpred(this._ctx, 9))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
                    }
                    this.state = 1118;
                    localctx.bop = this.match(FuzzyJavaParser.BITOR);
                    this.state = 1119;
                    this.expression(10);
                    break;

                case 9:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1120;
                    if (!( this.precpred(this._ctx, 8))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
                    }
                    this.state = 1121;
                    localctx.bop = this.match(FuzzyJavaParser.AND);
                    this.state = 1122;
                    this.expression(9);
                    break;

                case 10:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1123;
                    if (!( this.precpred(this._ctx, 7))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
                    }
                    this.state = 1124;
                    localctx.bop = this.match(FuzzyJavaParser.OR);
                    this.state = 1125;
                    this.expression(8);
                    break;

                case 11:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1126;
                    if (!( this.precpred(this._ctx, 6))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
                    }
                    this.state = 1127;
                    localctx.bop = this.match(FuzzyJavaParser.QUESTION);
                    this.state = 1128;
                    this.expression(0);
                    this.state = 1129;
                    this.match(FuzzyJavaParser.COLON);
                    this.state = 1130;
                    this.expression(7);
                    break;

                case 12:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1132;
                    if (!( this.precpred(this._ctx, 5))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                    }
                    this.state = 1133;
                    localctx.bop = this._input.LT(1);
                    _la = this._input.LA(1);
                    if(!(_la===FuzzyJavaParser.RANDOM_ASSIGN || ((((_la - 73)) & ~0x1f) == 0 && ((1 << (_la - 73)) & ((1 << (FuzzyJavaParser.ASSIGN - 73)) | (1 << (FuzzyJavaParser.ADD_ASSIGN - 73)) | (1 << (FuzzyJavaParser.SUB_ASSIGN - 73)) | (1 << (FuzzyJavaParser.MUL_ASSIGN - 73)) | (1 << (FuzzyJavaParser.DIV_ASSIGN - 73)) | (1 << (FuzzyJavaParser.AND_ASSIGN - 73)) | (1 << (FuzzyJavaParser.OR_ASSIGN - 73)) | (1 << (FuzzyJavaParser.XOR_ASSIGN - 73)) | (1 << (FuzzyJavaParser.MOD_ASSIGN - 73)) | (1 << (FuzzyJavaParser.LSHIFT_ASSIGN - 73)))) !== 0) || _la===FuzzyJavaParser.RSHIFT_ASSIGN || _la===FuzzyJavaParser.URSHIFT_ASSIGN)) {
                        localctx.bop = this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 1134;
                    this.expression(5);
                    break;

                case 13:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1135;
                    if (!( this.precpred(this._ctx, 25))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 25)");
                    }
                    this.state = 1136;
                    localctx.bop = this.match(FuzzyJavaParser.DOT);
                    this.state = 1147;
                    this._errHandler.sync(this);
                    switch(this._input.LA(1)) {
                    case FuzzyJavaParser.IDENTIFIER:
                        this.state = 1137;
                        this.match(FuzzyJavaParser.IDENTIFIER);
                        break;
                    case FuzzyJavaParser.THIS:
                        this.state = 1138;
                        this.match(FuzzyJavaParser.THIS);
                        break;
                    case FuzzyJavaParser.NEW:
                        this.state = 1139;
                        this.match(FuzzyJavaParser.NEW);
                        this.state = 1141;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        if(_la===FuzzyJavaParser.LT) {
                            this.state = 1140;
                            this.nonWildcardTypeArguments();
                        }

                        this.state = 1143;
                        this.innerCreator();
                        break;
                    case FuzzyJavaParser.SUPER:
                        this.state = 1144;
                        this.match(FuzzyJavaParser.SUPER);
                        this.state = 1145;
                        this.superSuffix();
                        break;
                    case FuzzyJavaParser.LT:
                        this.state = 1146;
                        this.explicitGenericInvocation();
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    break;

                case 14:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1149;
                    if (!( this.precpred(this._ctx, 24))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 24)");
                    }
                    this.state = 1150;
                    this.match(FuzzyJavaParser.LBRACK);
                    this.state = 1151;
                    this.expression(0);
                    this.state = 1152;
                    this.match(FuzzyJavaParser.RBRACK);
                    break;

                case 15:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1154;
                    if (!( this.precpred(this._ctx, 23))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 23)");
                    }
                    this.state = 1155;
                    this.match(FuzzyJavaParser.LPAREN);
                    this.state = 1157;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
                        this.state = 1156;
                        this.expressionList();
                    }

                    this.state = 1159;
                    this.match(FuzzyJavaParser.RPAREN);
                    break;

                case 16:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1160;
                    if (!( this.precpred(this._ctx, 20))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 20)");
                    }
                    this.state = 1161;
                    localctx.postfix = this._input.LT(1);
                    _la = this._input.LA(1);
                    if(!(_la===FuzzyJavaParser.INC || _la===FuzzyJavaParser.DEC)) {
                        localctx.postfix = this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    break;

                case 17:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1162;
                    if (!( this.precpred(this._ctx, 13))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 13)");
                    }
                    this.state = 1163;
                    localctx.bop = this.match(FuzzyJavaParser.INSTANCEOF);
                    this.state = 1164;
                    this.typeType();
                    break;

                case 18:
                    localctx = new ExpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, FuzzyJavaParser.RULE_expression);
                    this.state = 1165;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 1166;
                    this.match(FuzzyJavaParser.COLONCOLON);
                    this.state = 1168;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===FuzzyJavaParser.LT) {
                        this.state = 1167;
                        this.typeArguments();
                    }

                    this.state = 1170;
                    this.match(FuzzyJavaParser.IDENTIFIER);
                    break;

                } 
            }
            this.state = 1175;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,136,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function LambdaExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_lambdaExpression;
    return this;
}

LambdaExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LambdaExpressionContext.prototype.constructor = LambdaExpressionContext;

LambdaExpressionContext.prototype.lambdaParameters = function() {
    return this.getTypedRuleContext(LambdaParametersContext,0);
};

LambdaExpressionContext.prototype.lambdaBody = function() {
    return this.getTypedRuleContext(LambdaBodyContext,0);
};

LambdaExpressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitLambdaExpression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.LambdaExpressionContext = LambdaExpressionContext;

FuzzyJavaParser.prototype.lambdaExpression = function() {

    var localctx = new LambdaExpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, FuzzyJavaParser.RULE_lambdaExpression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1176;
        this.lambdaParameters();
        this.state = 1177;
        this.match(FuzzyJavaParser.ARROW);
        this.state = 1178;
        this.lambdaBody();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LambdaParametersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_lambdaParameters;
    return this;
}

LambdaParametersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LambdaParametersContext.prototype.constructor = LambdaParametersContext;

LambdaParametersContext.prototype.IDENTIFIER = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(FuzzyJavaParser.IDENTIFIER);
    } else {
        return this.getToken(FuzzyJavaParser.IDENTIFIER, i);
    }
};


LambdaParametersContext.prototype.formalParameterList = function() {
    return this.getTypedRuleContext(FormalParameterListContext,0);
};

LambdaParametersContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitLambdaParameters(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.LambdaParametersContext = LambdaParametersContext;

FuzzyJavaParser.prototype.lambdaParameters = function() {

    var localctx = new LambdaParametersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, FuzzyJavaParser.RULE_lambdaParameters);
    var _la = 0; // Token type
    try {
        this.state = 1196;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,139,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1180;
            this.match(FuzzyJavaParser.IDENTIFIER);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1181;
            this.match(FuzzyJavaParser.LPAREN);
            this.state = 1183;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FINAL) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || _la===FuzzyJavaParser.LONG || _la===FuzzyJavaParser.SHORT || _la===FuzzyJavaParser.ASSIGN || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
                this.state = 1182;
                this.formalParameterList();
            }

            this.state = 1185;
            this.match(FuzzyJavaParser.RPAREN);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1186;
            this.match(FuzzyJavaParser.LPAREN);
            this.state = 1187;
            this.match(FuzzyJavaParser.IDENTIFIER);
            this.state = 1192;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===FuzzyJavaParser.COMMA) {
                this.state = 1188;
                this.match(FuzzyJavaParser.COMMA);
                this.state = 1189;
                this.match(FuzzyJavaParser.IDENTIFIER);
                this.state = 1194;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1195;
            this.match(FuzzyJavaParser.RPAREN);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LambdaBodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_lambdaBody;
    return this;
}

LambdaBodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LambdaBodyContext.prototype.constructor = LambdaBodyContext;

LambdaBodyContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

LambdaBodyContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

LambdaBodyContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitLambdaBody(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.LambdaBodyContext = LambdaBodyContext;

FuzzyJavaParser.prototype.lambdaBody = function() {

    var localctx = new LambdaBodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 170, FuzzyJavaParser.RULE_lambdaBody);
    try {
        this.state = 1200;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.RANDOM_PRIMITIVE:
        case FuzzyJavaParser.RANDOM_NUMERIC:
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.NEW:
        case FuzzyJavaParser.SHORT:
        case FuzzyJavaParser.SUPER:
        case FuzzyJavaParser.THIS:
        case FuzzyJavaParser.VOID:
        case FuzzyJavaParser.DECIMAL_LITERAL:
        case FuzzyJavaParser.HEX_LITERAL:
        case FuzzyJavaParser.OCT_LITERAL:
        case FuzzyJavaParser.BINARY_LITERAL:
        case FuzzyJavaParser.FLOAT_LITERAL:
        case FuzzyJavaParser.HEX_FLOAT_LITERAL:
        case FuzzyJavaParser.BOOL_LITERAL:
        case FuzzyJavaParser.CHAR_LITERAL:
        case FuzzyJavaParser.STRING_LITERAL:
        case FuzzyJavaParser.NULL_LITERAL:
        case FuzzyJavaParser.LPAREN:
        case FuzzyJavaParser.ASSIGN:
        case FuzzyJavaParser.LT:
        case FuzzyJavaParser.BANG:
        case FuzzyJavaParser.TILDE:
        case FuzzyJavaParser.QUESTION:
        case FuzzyJavaParser.INC:
        case FuzzyJavaParser.DEC:
        case FuzzyJavaParser.ADD:
        case FuzzyJavaParser.SUB:
        case FuzzyJavaParser.AT:
        case FuzzyJavaParser.IDENTIFIER:
            this.enterOuterAlt(localctx, 1);
            this.state = 1198;
            this.expression(0);
            break;
        case FuzzyJavaParser.LBRACE:
            this.enterOuterAlt(localctx, 2);
            this.state = 1199;
            this.block();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PrimaryContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_primary;
    return this;
}

PrimaryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PrimaryContext.prototype.constructor = PrimaryContext;

PrimaryContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

PrimaryContext.prototype.THIS = function() {
    return this.getToken(FuzzyJavaParser.THIS, 0);
};

PrimaryContext.prototype.SUPER = function() {
    return this.getToken(FuzzyJavaParser.SUPER, 0);
};

PrimaryContext.prototype.literal = function() {
    return this.getTypedRuleContext(LiteralContext,0);
};

PrimaryContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

PrimaryContext.prototype.QUESTION = function() {
    return this.getToken(FuzzyJavaParser.QUESTION, 0);
};

PrimaryContext.prototype.typeTypeOrVoid = function() {
    return this.getTypedRuleContext(TypeTypeOrVoidContext,0);
};

PrimaryContext.prototype.CLASS = function() {
    return this.getToken(FuzzyJavaParser.CLASS, 0);
};

PrimaryContext.prototype.nonWildcardTypeArguments = function() {
    return this.getTypedRuleContext(NonWildcardTypeArgumentsContext,0);
};

PrimaryContext.prototype.explicitGenericInvocationSuffix = function() {
    return this.getTypedRuleContext(ExplicitGenericInvocationSuffixContext,0);
};

PrimaryContext.prototype.arguments = function() {
    return this.getTypedRuleContext(ArgumentsContext,0);
};

PrimaryContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitPrimary(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.PrimaryContext = PrimaryContext;

FuzzyJavaParser.prototype.primary = function() {

    var localctx = new PrimaryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, FuzzyJavaParser.RULE_primary);
    try {
        this.state = 1222;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,142,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1202;
            this.match(FuzzyJavaParser.LPAREN);
            this.state = 1203;
            this.expression(0);
            this.state = 1204;
            this.match(FuzzyJavaParser.RPAREN);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1206;
            this.match(FuzzyJavaParser.THIS);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1207;
            this.match(FuzzyJavaParser.SUPER);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1208;
            this.literal();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1209;
            this.match(FuzzyJavaParser.IDENTIFIER);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1210;
            this.match(FuzzyJavaParser.QUESTION);
            this.state = 1211;
            this.match(FuzzyJavaParser.IDENTIFIER);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1212;
            this.typeTypeOrVoid();
            this.state = 1213;
            this.match(FuzzyJavaParser.DOT);
            this.state = 1214;
            this.match(FuzzyJavaParser.CLASS);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1216;
            this.nonWildcardTypeArguments();
            this.state = 1220;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case FuzzyJavaParser.SUPER:
            case FuzzyJavaParser.IDENTIFIER:
                this.state = 1217;
                this.explicitGenericInvocationSuffix();
                break;
            case FuzzyJavaParser.THIS:
                this.state = 1218;
                this.match(FuzzyJavaParser.THIS);
                this.state = 1219;
                this.arguments();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_classType;
    return this;
}

ClassTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassTypeContext.prototype.constructor = ClassTypeContext;

ClassTypeContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

ClassTypeContext.prototype.classOrInterfaceType = function() {
    return this.getTypedRuleContext(ClassOrInterfaceTypeContext,0);
};

ClassTypeContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

ClassTypeContext.prototype.typeArguments = function() {
    return this.getTypedRuleContext(TypeArgumentsContext,0);
};

ClassTypeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitClassType(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ClassTypeContext = ClassTypeContext;

FuzzyJavaParser.prototype.classType = function() {

    var localctx = new ClassTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, FuzzyJavaParser.RULE_classType);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1227;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,143,this._ctx);
        if(la_===1) {
            this.state = 1224;
            this.classOrInterfaceType();
            this.state = 1225;
            this.match(FuzzyJavaParser.DOT);

        }
        this.state = 1232;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.AT) {
            this.state = 1229;
            this.annotation();
            this.state = 1234;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1235;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 1237;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.LT) {
            this.state = 1236;
            this.typeArguments();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CreatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_creator;
    return this;
}

CreatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CreatorContext.prototype.constructor = CreatorContext;

CreatorContext.prototype.nonWildcardTypeArguments = function() {
    return this.getTypedRuleContext(NonWildcardTypeArgumentsContext,0);
};

CreatorContext.prototype.createdName = function() {
    return this.getTypedRuleContext(CreatedNameContext,0);
};

CreatorContext.prototype.classCreatorRest = function() {
    return this.getTypedRuleContext(ClassCreatorRestContext,0);
};

CreatorContext.prototype.arrayCreatorRest = function() {
    return this.getTypedRuleContext(ArrayCreatorRestContext,0);
};

CreatorContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitCreator(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.CreatorContext = CreatorContext;

FuzzyJavaParser.prototype.creator = function() {

    var localctx = new CreatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, FuzzyJavaParser.RULE_creator);
    try {
        this.state = 1248;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.LT:
            this.enterOuterAlt(localctx, 1);
            this.state = 1239;
            this.nonWildcardTypeArguments();
            this.state = 1240;
            this.createdName();
            this.state = 1241;
            this.classCreatorRest();
            break;
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.SHORT:
        case FuzzyJavaParser.IDENTIFIER:
            this.enterOuterAlt(localctx, 2);
            this.state = 1243;
            this.createdName();
            this.state = 1246;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case FuzzyJavaParser.LBRACK:
                this.state = 1244;
                this.arrayCreatorRest();
                break;
            case FuzzyJavaParser.LPAREN:
                this.state = 1245;
                this.classCreatorRest();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CreatedNameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_createdName;
    return this;
}

CreatedNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CreatedNameContext.prototype.constructor = CreatedNameContext;

CreatedNameContext.prototype.IDENTIFIER = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(FuzzyJavaParser.IDENTIFIER);
    } else {
        return this.getToken(FuzzyJavaParser.IDENTIFIER, i);
    }
};


CreatedNameContext.prototype.typeArgumentsOrDiamond = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeArgumentsOrDiamondContext);
    } else {
        return this.getTypedRuleContext(TypeArgumentsOrDiamondContext,i);
    }
};

CreatedNameContext.prototype.primitiveType = function() {
    return this.getTypedRuleContext(PrimitiveTypeContext,0);
};

CreatedNameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitCreatedName(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.CreatedNameContext = CreatedNameContext;

FuzzyJavaParser.prototype.createdName = function() {

    var localctx = new CreatedNameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, FuzzyJavaParser.RULE_createdName);
    var _la = 0; // Token type
    try {
        this.state = 1265;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.IDENTIFIER:
            this.enterOuterAlt(localctx, 1);
            this.state = 1250;
            this.match(FuzzyJavaParser.IDENTIFIER);
            this.state = 1252;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===FuzzyJavaParser.LT) {
                this.state = 1251;
                this.typeArgumentsOrDiamond();
            }

            this.state = 1261;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===FuzzyJavaParser.DOT) {
                this.state = 1254;
                this.match(FuzzyJavaParser.DOT);
                this.state = 1255;
                this.match(FuzzyJavaParser.IDENTIFIER);
                this.state = 1257;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===FuzzyJavaParser.LT) {
                    this.state = 1256;
                    this.typeArgumentsOrDiamond();
                }

                this.state = 1263;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.SHORT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1264;
            this.primitiveType();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InnerCreatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_innerCreator;
    return this;
}

InnerCreatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InnerCreatorContext.prototype.constructor = InnerCreatorContext;

InnerCreatorContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

InnerCreatorContext.prototype.classCreatorRest = function() {
    return this.getTypedRuleContext(ClassCreatorRestContext,0);
};

InnerCreatorContext.prototype.nonWildcardTypeArgumentsOrDiamond = function() {
    return this.getTypedRuleContext(NonWildcardTypeArgumentsOrDiamondContext,0);
};

InnerCreatorContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitInnerCreator(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.InnerCreatorContext = InnerCreatorContext;

FuzzyJavaParser.prototype.innerCreator = function() {

    var localctx = new InnerCreatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, FuzzyJavaParser.RULE_innerCreator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1267;
        this.match(FuzzyJavaParser.IDENTIFIER);
        this.state = 1269;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.LT) {
            this.state = 1268;
            this.nonWildcardTypeArgumentsOrDiamond();
        }

        this.state = 1271;
        this.classCreatorRest();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ArrayCreatorRestContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_arrayCreatorRest;
    return this;
}

ArrayCreatorRestContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArrayCreatorRestContext.prototype.constructor = ArrayCreatorRestContext;

ArrayCreatorRestContext.prototype.arrayInitializer = function() {
    return this.getTypedRuleContext(ArrayInitializerContext,0);
};

ArrayCreatorRestContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

ArrayCreatorRestContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitArrayCreatorRest(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ArrayCreatorRestContext = ArrayCreatorRestContext;

FuzzyJavaParser.prototype.arrayCreatorRest = function() {

    var localctx = new ArrayCreatorRestContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, FuzzyJavaParser.RULE_arrayCreatorRest);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1273;
        this.match(FuzzyJavaParser.LBRACK);
        this.state = 1301;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.RBRACK:
            this.state = 1274;
            this.match(FuzzyJavaParser.RBRACK);
            this.state = 1279;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===FuzzyJavaParser.LBRACK) {
                this.state = 1275;
                this.match(FuzzyJavaParser.LBRACK);
                this.state = 1276;
                this.match(FuzzyJavaParser.RBRACK);
                this.state = 1281;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1282;
            this.arrayInitializer();
            break;
        case FuzzyJavaParser.RANDOM_PRIMITIVE:
        case FuzzyJavaParser.RANDOM_NUMERIC:
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.NEW:
        case FuzzyJavaParser.SHORT:
        case FuzzyJavaParser.SUPER:
        case FuzzyJavaParser.THIS:
        case FuzzyJavaParser.VOID:
        case FuzzyJavaParser.DECIMAL_LITERAL:
        case FuzzyJavaParser.HEX_LITERAL:
        case FuzzyJavaParser.OCT_LITERAL:
        case FuzzyJavaParser.BINARY_LITERAL:
        case FuzzyJavaParser.FLOAT_LITERAL:
        case FuzzyJavaParser.HEX_FLOAT_LITERAL:
        case FuzzyJavaParser.BOOL_LITERAL:
        case FuzzyJavaParser.CHAR_LITERAL:
        case FuzzyJavaParser.STRING_LITERAL:
        case FuzzyJavaParser.NULL_LITERAL:
        case FuzzyJavaParser.LPAREN:
        case FuzzyJavaParser.ASSIGN:
        case FuzzyJavaParser.LT:
        case FuzzyJavaParser.BANG:
        case FuzzyJavaParser.TILDE:
        case FuzzyJavaParser.QUESTION:
        case FuzzyJavaParser.INC:
        case FuzzyJavaParser.DEC:
        case FuzzyJavaParser.ADD:
        case FuzzyJavaParser.SUB:
        case FuzzyJavaParser.AT:
        case FuzzyJavaParser.IDENTIFIER:
            this.state = 1283;
            this.expression(0);
            this.state = 1284;
            this.match(FuzzyJavaParser.RBRACK);
            this.state = 1291;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,154,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 1285;
                    this.match(FuzzyJavaParser.LBRACK);
                    this.state = 1286;
                    this.expression(0);
                    this.state = 1287;
                    this.match(FuzzyJavaParser.RBRACK); 
                }
                this.state = 1293;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,154,this._ctx);
            }

            this.state = 1298;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,155,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 1294;
                    this.match(FuzzyJavaParser.LBRACK);
                    this.state = 1295;
                    this.match(FuzzyJavaParser.RBRACK); 
                }
                this.state = 1300;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,155,this._ctx);
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassCreatorRestContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_classCreatorRest;
    return this;
}

ClassCreatorRestContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassCreatorRestContext.prototype.constructor = ClassCreatorRestContext;

ClassCreatorRestContext.prototype.arguments = function() {
    return this.getTypedRuleContext(ArgumentsContext,0);
};

ClassCreatorRestContext.prototype.classBody = function() {
    return this.getTypedRuleContext(ClassBodyContext,0);
};

ClassCreatorRestContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitClassCreatorRest(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ClassCreatorRestContext = ClassCreatorRestContext;

FuzzyJavaParser.prototype.classCreatorRest = function() {

    var localctx = new ClassCreatorRestContext(this, this._ctx, this.state);
    this.enterRule(localctx, 184, FuzzyJavaParser.RULE_classCreatorRest);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1303;
        this.arguments();
        this.state = 1305;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,157,this._ctx);
        if(la_===1) {
            this.state = 1304;
            this.classBody();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExplicitGenericInvocationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_explicitGenericInvocation;
    return this;
}

ExplicitGenericInvocationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExplicitGenericInvocationContext.prototype.constructor = ExplicitGenericInvocationContext;

ExplicitGenericInvocationContext.prototype.nonWildcardTypeArguments = function() {
    return this.getTypedRuleContext(NonWildcardTypeArgumentsContext,0);
};

ExplicitGenericInvocationContext.prototype.explicitGenericInvocationSuffix = function() {
    return this.getTypedRuleContext(ExplicitGenericInvocationSuffixContext,0);
};

ExplicitGenericInvocationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitExplicitGenericInvocation(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ExplicitGenericInvocationContext = ExplicitGenericInvocationContext;

FuzzyJavaParser.prototype.explicitGenericInvocation = function() {

    var localctx = new ExplicitGenericInvocationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, FuzzyJavaParser.RULE_explicitGenericInvocation);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1307;
        this.nonWildcardTypeArguments();
        this.state = 1308;
        this.explicitGenericInvocationSuffix();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeArgumentsOrDiamondContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeArgumentsOrDiamond;
    return this;
}

TypeArgumentsOrDiamondContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeArgumentsOrDiamondContext.prototype.constructor = TypeArgumentsOrDiamondContext;

TypeArgumentsOrDiamondContext.prototype.typeArguments = function() {
    return this.getTypedRuleContext(TypeArgumentsContext,0);
};

TypeArgumentsOrDiamondContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeArgumentsOrDiamond(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeArgumentsOrDiamondContext = TypeArgumentsOrDiamondContext;

FuzzyJavaParser.prototype.typeArgumentsOrDiamond = function() {

    var localctx = new TypeArgumentsOrDiamondContext(this, this._ctx, this.state);
    this.enterRule(localctx, 188, FuzzyJavaParser.RULE_typeArgumentsOrDiamond);
    try {
        this.state = 1313;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,158,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1310;
            this.match(FuzzyJavaParser.LT);
            this.state = 1311;
            this.match(FuzzyJavaParser.GT);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1312;
            this.typeArguments();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NonWildcardTypeArgumentsOrDiamondContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_nonWildcardTypeArgumentsOrDiamond;
    return this;
}

NonWildcardTypeArgumentsOrDiamondContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NonWildcardTypeArgumentsOrDiamondContext.prototype.constructor = NonWildcardTypeArgumentsOrDiamondContext;

NonWildcardTypeArgumentsOrDiamondContext.prototype.nonWildcardTypeArguments = function() {
    return this.getTypedRuleContext(NonWildcardTypeArgumentsContext,0);
};

NonWildcardTypeArgumentsOrDiamondContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitNonWildcardTypeArgumentsOrDiamond(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.NonWildcardTypeArgumentsOrDiamondContext = NonWildcardTypeArgumentsOrDiamondContext;

FuzzyJavaParser.prototype.nonWildcardTypeArgumentsOrDiamond = function() {

    var localctx = new NonWildcardTypeArgumentsOrDiamondContext(this, this._ctx, this.state);
    this.enterRule(localctx, 190, FuzzyJavaParser.RULE_nonWildcardTypeArgumentsOrDiamond);
    try {
        this.state = 1318;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,159,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1315;
            this.match(FuzzyJavaParser.LT);
            this.state = 1316;
            this.match(FuzzyJavaParser.GT);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1317;
            this.nonWildcardTypeArguments();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NonWildcardTypeArgumentsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_nonWildcardTypeArguments;
    return this;
}

NonWildcardTypeArgumentsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NonWildcardTypeArgumentsContext.prototype.constructor = NonWildcardTypeArgumentsContext;

NonWildcardTypeArgumentsContext.prototype.typeList = function() {
    return this.getTypedRuleContext(TypeListContext,0);
};

NonWildcardTypeArgumentsContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitNonWildcardTypeArguments(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.NonWildcardTypeArgumentsContext = NonWildcardTypeArgumentsContext;

FuzzyJavaParser.prototype.nonWildcardTypeArguments = function() {

    var localctx = new NonWildcardTypeArgumentsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 192, FuzzyJavaParser.RULE_nonWildcardTypeArguments);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1320;
        this.match(FuzzyJavaParser.LT);
        this.state = 1321;
        this.typeList();
        this.state = 1322;
        this.match(FuzzyJavaParser.GT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeListContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeList;
    return this;
}

TypeListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeListContext.prototype.constructor = TypeListContext;

TypeListContext.prototype.typeType = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeTypeContext);
    } else {
        return this.getTypedRuleContext(TypeTypeContext,i);
    }
};

TypeListContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeList(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeListContext = TypeListContext;

FuzzyJavaParser.prototype.typeList = function() {

    var localctx = new TypeListContext(this, this._ctx, this.state);
    this.enterRule(localctx, 194, FuzzyJavaParser.RULE_typeList);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1324;
        this.typeType();
        this.state = 1329;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.COMMA) {
            this.state = 1325;
            this.match(FuzzyJavaParser.COMMA);
            this.state = 1326;
            this.typeType();
            this.state = 1331;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeType;
    return this;
}

TypeTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeTypeContext.prototype.constructor = TypeTypeContext;

TypeTypeContext.prototype.backReferenceType = function() {
    return this.getTypedRuleContext(BackReferenceTypeContext,0);
};

TypeTypeContext.prototype.classOrInterfaceType = function() {
    return this.getTypedRuleContext(ClassOrInterfaceTypeContext,0);
};

TypeTypeContext.prototype.primitiveType = function() {
    return this.getTypedRuleContext(PrimitiveTypeContext,0);
};

TypeTypeContext.prototype.fuzzyPrimitiveType = function() {
    return this.getTypedRuleContext(FuzzyPrimitiveTypeContext,0);
};

TypeTypeContext.prototype.annotation = function() {
    return this.getTypedRuleContext(AnnotationContext,0);
};

TypeTypeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeType(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeTypeContext = TypeTypeContext;

FuzzyJavaParser.prototype.typeType = function() {

    var localctx = new TypeTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 196, FuzzyJavaParser.RULE_typeType);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1333;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===FuzzyJavaParser.AT) {
            this.state = 1332;
            this.annotation();
        }

        this.state = 1339;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.ASSIGN:
            this.state = 1335;
            this.backReferenceType();
            break;
        case FuzzyJavaParser.IDENTIFIER:
            this.state = 1336;
            this.classOrInterfaceType();
            break;
        case FuzzyJavaParser.BOOLEAN:
        case FuzzyJavaParser.BYTE:
        case FuzzyJavaParser.CHAR:
        case FuzzyJavaParser.DOUBLE:
        case FuzzyJavaParser.FLOAT:
        case FuzzyJavaParser.INT:
        case FuzzyJavaParser.LONG:
        case FuzzyJavaParser.SHORT:
            this.state = 1337;
            this.primitiveType();
            break;
        case FuzzyJavaParser.RANDOM_PRIMITIVE:
        case FuzzyJavaParser.RANDOM_NUMERIC:
            this.state = 1338;
            this.fuzzyPrimitiveType();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 1345;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,163,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1341;
                this.match(FuzzyJavaParser.LBRACK);
                this.state = 1342;
                this.match(FuzzyJavaParser.RBRACK); 
            }
            this.state = 1347;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,163,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PrimitiveTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_primitiveType;
    return this;
}

PrimitiveTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PrimitiveTypeContext.prototype.constructor = PrimitiveTypeContext;

PrimitiveTypeContext.prototype.BOOLEAN = function() {
    return this.getToken(FuzzyJavaParser.BOOLEAN, 0);
};

PrimitiveTypeContext.prototype.CHAR = function() {
    return this.getToken(FuzzyJavaParser.CHAR, 0);
};

PrimitiveTypeContext.prototype.BYTE = function() {
    return this.getToken(FuzzyJavaParser.BYTE, 0);
};

PrimitiveTypeContext.prototype.SHORT = function() {
    return this.getToken(FuzzyJavaParser.SHORT, 0);
};

PrimitiveTypeContext.prototype.INT = function() {
    return this.getToken(FuzzyJavaParser.INT, 0);
};

PrimitiveTypeContext.prototype.LONG = function() {
    return this.getToken(FuzzyJavaParser.LONG, 0);
};

PrimitiveTypeContext.prototype.FLOAT = function() {
    return this.getToken(FuzzyJavaParser.FLOAT, 0);
};

PrimitiveTypeContext.prototype.DOUBLE = function() {
    return this.getToken(FuzzyJavaParser.DOUBLE, 0);
};

PrimitiveTypeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitPrimitiveType(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.PrimitiveTypeContext = PrimitiveTypeContext;

FuzzyJavaParser.prototype.primitiveType = function() {

    var localctx = new PrimitiveTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 198, FuzzyJavaParser.RULE_primitiveType);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1348;
        _la = this._input.LA(1);
        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || _la===FuzzyJavaParser.LONG || _la===FuzzyJavaParser.SHORT)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FuzzyPrimitiveTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_fuzzyPrimitiveType;
    return this;
}

FuzzyPrimitiveTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuzzyPrimitiveTypeContext.prototype.constructor = FuzzyPrimitiveTypeContext;

FuzzyPrimitiveTypeContext.prototype.RANDOM_PRIMITIVE = function() {
    return this.getToken(FuzzyJavaParser.RANDOM_PRIMITIVE, 0);
};

FuzzyPrimitiveTypeContext.prototype.RANDOM_NUMERIC = function() {
    return this.getToken(FuzzyJavaParser.RANDOM_NUMERIC, 0);
};

FuzzyPrimitiveTypeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitFuzzyPrimitiveType(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.FuzzyPrimitiveTypeContext = FuzzyPrimitiveTypeContext;

FuzzyJavaParser.prototype.fuzzyPrimitiveType = function() {

    var localctx = new FuzzyPrimitiveTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 200, FuzzyJavaParser.RULE_fuzzyPrimitiveType);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1350;
        _la = this._input.LA(1);
        if(!(_la===FuzzyJavaParser.RANDOM_PRIMITIVE || _la===FuzzyJavaParser.RANDOM_NUMERIC)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeArgumentsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_typeArguments;
    return this;
}

TypeArgumentsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeArgumentsContext.prototype.constructor = TypeArgumentsContext;

TypeArgumentsContext.prototype.typeArgument = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeArgumentContext);
    } else {
        return this.getTypedRuleContext(TypeArgumentContext,i);
    }
};

TypeArgumentsContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitTypeArguments(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.TypeArgumentsContext = TypeArgumentsContext;

FuzzyJavaParser.prototype.typeArguments = function() {

    var localctx = new TypeArgumentsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 202, FuzzyJavaParser.RULE_typeArguments);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1352;
        this.match(FuzzyJavaParser.LT);
        this.state = 1353;
        this.typeArgument();
        this.state = 1358;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===FuzzyJavaParser.COMMA) {
            this.state = 1354;
            this.match(FuzzyJavaParser.COMMA);
            this.state = 1355;
            this.typeArgument();
            this.state = 1360;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1361;
        this.match(FuzzyJavaParser.GT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SuperSuffixContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_superSuffix;
    return this;
}

SuperSuffixContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SuperSuffixContext.prototype.constructor = SuperSuffixContext;

SuperSuffixContext.prototype.arguments = function() {
    return this.getTypedRuleContext(ArgumentsContext,0);
};

SuperSuffixContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

SuperSuffixContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitSuperSuffix(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.SuperSuffixContext = SuperSuffixContext;

FuzzyJavaParser.prototype.superSuffix = function() {

    var localctx = new SuperSuffixContext(this, this._ctx, this.state);
    this.enterRule(localctx, 204, FuzzyJavaParser.RULE_superSuffix);
    try {
        this.state = 1369;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.LPAREN:
            this.enterOuterAlt(localctx, 1);
            this.state = 1363;
            this.arguments();
            break;
        case FuzzyJavaParser.DOT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1364;
            this.match(FuzzyJavaParser.DOT);
            this.state = 1365;
            this.match(FuzzyJavaParser.IDENTIFIER);
            this.state = 1367;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,165,this._ctx);
            if(la_===1) {
                this.state = 1366;
                this.arguments();

            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExplicitGenericInvocationSuffixContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_explicitGenericInvocationSuffix;
    return this;
}

ExplicitGenericInvocationSuffixContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExplicitGenericInvocationSuffixContext.prototype.constructor = ExplicitGenericInvocationSuffixContext;

ExplicitGenericInvocationSuffixContext.prototype.SUPER = function() {
    return this.getToken(FuzzyJavaParser.SUPER, 0);
};

ExplicitGenericInvocationSuffixContext.prototype.superSuffix = function() {
    return this.getTypedRuleContext(SuperSuffixContext,0);
};

ExplicitGenericInvocationSuffixContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

ExplicitGenericInvocationSuffixContext.prototype.arguments = function() {
    return this.getTypedRuleContext(ArgumentsContext,0);
};

ExplicitGenericInvocationSuffixContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitExplicitGenericInvocationSuffix(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ExplicitGenericInvocationSuffixContext = ExplicitGenericInvocationSuffixContext;

FuzzyJavaParser.prototype.explicitGenericInvocationSuffix = function() {

    var localctx = new ExplicitGenericInvocationSuffixContext(this, this._ctx, this.state);
    this.enterRule(localctx, 206, FuzzyJavaParser.RULE_explicitGenericInvocationSuffix);
    try {
        this.state = 1375;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case FuzzyJavaParser.SUPER:
            this.enterOuterAlt(localctx, 1);
            this.state = 1371;
            this.match(FuzzyJavaParser.SUPER);
            this.state = 1372;
            this.superSuffix();
            break;
        case FuzzyJavaParser.IDENTIFIER:
            this.enterOuterAlt(localctx, 2);
            this.state = 1373;
            this.match(FuzzyJavaParser.IDENTIFIER);
            this.state = 1374;
            this.arguments();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ArgumentsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_arguments;
    return this;
}

ArgumentsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgumentsContext.prototype.constructor = ArgumentsContext;

ArgumentsContext.prototype.expressionList = function() {
    return this.getTypedRuleContext(ExpressionListContext,0);
};

ArgumentsContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitArguments(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.ArgumentsContext = ArgumentsContext;

FuzzyJavaParser.prototype.arguments = function() {

    var localctx = new ArgumentsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 208, FuzzyJavaParser.RULE_arguments);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1377;
        this.match(FuzzyJavaParser.LPAREN);
        this.state = 1379;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << FuzzyJavaParser.RANDOM_PRIMITIVE) | (1 << FuzzyJavaParser.RANDOM_NUMERIC) | (1 << FuzzyJavaParser.BOOLEAN) | (1 << FuzzyJavaParser.BYTE) | (1 << FuzzyJavaParser.CHAR) | (1 << FuzzyJavaParser.DOUBLE) | (1 << FuzzyJavaParser.FLOAT) | (1 << FuzzyJavaParser.INT))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (FuzzyJavaParser.LONG - 32)) | (1 << (FuzzyJavaParser.NEW - 32)) | (1 << (FuzzyJavaParser.SHORT - 32)) | (1 << (FuzzyJavaParser.SUPER - 32)) | (1 << (FuzzyJavaParser.THIS - 32)) | (1 << (FuzzyJavaParser.VOID - 32)) | (1 << (FuzzyJavaParser.DECIMAL_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_LITERAL - 32)) | (1 << (FuzzyJavaParser.OCT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BINARY_LITERAL - 32)) | (1 << (FuzzyJavaParser.FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.HEX_FLOAT_LITERAL - 32)) | (1 << (FuzzyJavaParser.BOOL_LITERAL - 32)) | (1 << (FuzzyJavaParser.CHAR_LITERAL - 32)) | (1 << (FuzzyJavaParser.STRING_LITERAL - 32)) | (1 << (FuzzyJavaParser.NULL_LITERAL - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (FuzzyJavaParser.LPAREN - 64)) | (1 << (FuzzyJavaParser.ASSIGN - 64)) | (1 << (FuzzyJavaParser.LT - 64)) | (1 << (FuzzyJavaParser.BANG - 64)) | (1 << (FuzzyJavaParser.TILDE - 64)) | (1 << (FuzzyJavaParser.QUESTION - 64)) | (1 << (FuzzyJavaParser.INC - 64)) | (1 << (FuzzyJavaParser.DEC - 64)) | (1 << (FuzzyJavaParser.ADD - 64)) | (1 << (FuzzyJavaParser.SUB - 64)))) !== 0) || _la===FuzzyJavaParser.AT || _la===FuzzyJavaParser.IDENTIFIER) {
            this.state = 1378;
            this.expressionList();
        }

        this.state = 1381;
        this.match(FuzzyJavaParser.RPAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BackReferenceTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = FuzzyJavaParser.RULE_backReferenceType;
    return this;
}

BackReferenceTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BackReferenceTypeContext.prototype.constructor = BackReferenceTypeContext;

BackReferenceTypeContext.prototype.ASSIGN = function() {
    return this.getToken(FuzzyJavaParser.ASSIGN, 0);
};

BackReferenceTypeContext.prototype.IDENTIFIER = function() {
    return this.getToken(FuzzyJavaParser.IDENTIFIER, 0);
};

BackReferenceTypeContext.prototype.QUESTION = function() {
    return this.getToken(FuzzyJavaParser.QUESTION, 0);
};

BackReferenceTypeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof FuzzyJavaParserVisitor ) {
        return visitor.visitBackReferenceType(this);
    } else {
        return visitor.visitChildren(this);
    }
};




FuzzyJavaParser.BackReferenceTypeContext = BackReferenceTypeContext;

FuzzyJavaParser.prototype.backReferenceType = function() {

    var localctx = new BackReferenceTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 210, FuzzyJavaParser.RULE_backReferenceType);
    try {
        this.state = 1388;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,169,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1383;
            this.match(FuzzyJavaParser.ASSIGN);
            this.state = 1384;
            this.match(FuzzyJavaParser.IDENTIFIER);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1385;
            this.match(FuzzyJavaParser.ASSIGN);
            this.state = 1386;
            this.match(FuzzyJavaParser.QUESTION);
            this.state = 1387;
            this.match(FuzzyJavaParser.IDENTIFIER);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


FuzzyJavaParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch(ruleIndex) {
	case 82:
			return this.expression_sempred(localctx, predIndex);
    default:
        throw "No predicate with index:" + ruleIndex;
   }
};

FuzzyJavaParser.prototype.expression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.precpred(this._ctx, 17);
		case 1:
			return this.precpred(this._ctx, 16);
		case 2:
			return this.precpred(this._ctx, 15);
		case 3:
			return this.precpred(this._ctx, 14);
		case 4:
			return this.precpred(this._ctx, 12);
		case 5:
			return this.precpred(this._ctx, 11);
		case 6:
			return this.precpred(this._ctx, 10);
		case 7:
			return this.precpred(this._ctx, 9);
		case 8:
			return this.precpred(this._ctx, 8);
		case 9:
			return this.precpred(this._ctx, 7);
		case 10:
			return this.precpred(this._ctx, 6);
		case 11:
			return this.precpred(this._ctx, 5);
		case 12:
			return this.precpred(this._ctx, 25);
		case 13:
			return this.precpred(this._ctx, 24);
		case 14:
			return this.precpred(this._ctx, 23);
		case 15:
			return this.precpred(this._ctx, 20);
		case 16:
			return this.precpred(this._ctx, 13);
		case 17:
			return this.precpred(this._ctx, 3);
		default:
			throw "No predicate with index:" + predIndex;
	}
};


exports.FuzzyJavaParser = FuzzyJavaParser;
